{
  "contractName": "Airdrop",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimableAmount",
          "type": "uint256"
        }
      ],
      "name": "ClaimableAmountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "setTokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenAddressSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setClaimableAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getClaimableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimableAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"setTokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setClaimableAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ethSplit\",\"details\":\"The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens.\",\"events\":{\"AirdropClaimed(address,uint256)\":{\"params\":{\"amount\":\"that has been claimed\",\"caller\":\"user that claimed the airdrop\"}},\"ClaimableAmountSet(uint256)\":{\"params\":{\"claimableAmount\":\"amount to claim per user\"}},\"TokenAddressSet(address)\":{\"params\":{\"setTokenAddress\":\"ERC20 TokenAddress\"}}},\"kind\":\"dev\",\"methods\":{\"claimAirdrop()\":{\"details\":\"check that a user can claim only once\"},\"getBalance()\":{\"details\":\"returns token balance\",\"returns\":{\"_0\":\"uint that stands for the token balance of this contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setClaimableAmount(uint256)\":{\"details\":\"pass normal decimal number\",\"params\":{\"_amount\":\"the amount of tokens that should be claimable\"}},\"setTokenAddress(address)\":{\"details\":\"adds the ERC20 Token address\",\"params\":{\"_tokenAddress\":\"for the Token that should be claimable\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"claimableAmount\":{\"details\":\"uint that stores the claimable amount of tokens per user\"},\"claimed\":{\"details\":\"sets the user that claims to true\"},\"token\":{\"details\":\"imported IERC20.sol from openzeppelin to store token address\"}},\"title\":\"Airdrop Contract\",\"version\":1},\"userdoc\":{\"events\":{\"AirdropClaimed(address,uint256)\":{\"notice\":\"Emitted when Airdrop is being claimed\"},\"ClaimableAmountSet(uint256)\":{\"notice\":\"Emitted when ClaimableAmount is being set\"},\"TokenAddressSet(address)\":{\"notice\":\"Emitted when TokenAddress is being set\"}},\"kind\":\"user\",\"methods\":{\"claimAirdrop()\":{\"notice\":\"lets user claim the airdrop\"},\"claimableAmount()\":{\"notice\":\"Amount of tokens to be claimed\"},\"getBalance()\":{\"notice\":\"returns the balance of this contract\"},\"setClaimableAmount(uint256)\":{\"notice\":\"sets the amount of tokens that can be claimed per user\"},\"setTokenAddress(address)\":{\"notice\":\"sets the tokenaddress the contract will use\"},\"token()\":{\"notice\":\"used to store the token address\"}},\"notice\":\"Users can use this contract to claim tokens for free once per address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/Airdrop.sol\":{\"keccak256\":\"0x3e09f930b87ffae843ee05cbf1203b22c498432f0e4d8d37c69b9662ef8d8386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ee9ecf316c6b6b94d4e6baa3ef7812f39171eea8358684e64b71a085c71b4d9\",\"dweb:/ipfs/QmXoH6RFSNHqQmRqh29o7VHiBKoPwBKYchSVBFuTBNbim9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611207806101146000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461012c5780638da5cb5b14610136578063a556f84614610154578063c354bd6e14610172578063f2fde38b14610190578063fc0c546a146101ac576100a9565b806310fe9ae8146100ae57806312065fe0146100cc57806326a4e8d2146100ea57806354df144d146101065780635b88349d14610122575b600080fd5b6100b66101ca565b6040516100c39190610c28565b60405180910390f35b6100d46101f4565b6040516100e19190610c5c565b60405180910390f35b61010460048036038101906100ff9190610cba565b610328565b005b610120600480360381019061011b9190610d13565b61041f565b005b61012a61057d565b005b6101346108fe565b005b61013e610986565b60405161014b9190610d4f565b60405180910390f35b61015c6109af565b6040516101699190610c5c565b60405180910390f35b61017a6109b5565b6040516101879190610c5c565b60405180910390f35b6101aa60048036038101906101a59190610cba565b6109bf565b005b6101b4610ab7565b6040516101c19190610c28565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e90610dc7565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102e29190610d4f565b602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190610dfc565b905090565b610330610add565b73ffffffffffffffffffffffffffffffffffffffff1661034e610986565b73ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610e75565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266816040516104149190610d4f565b60405180910390a150565b610427610add565b73ffffffffffffffffffffffffffffffffffffffff16610445610986565b73ffffffffffffffffffffffffffffffffffffffff161461049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290610e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610dc7565b60405180910390fd5b6000811161053a57600080fd5b806004819055507fe13b87e357b6ab17c565a8042616084608de82978cf3794844a036a9b6abbb8b6004546040516105729190610c5c565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561060f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060690610dc7565b60405180910390fd5b600060045411610654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064b90610ee1565b60405180910390fd5b6002600154141561069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190610f4d565b60405180910390fd5b600260018190555060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90610fb9565b60405180910390fd5b6004546107406101f4565b1015610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611025565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b81526004016107e0929190611045565b6020604051808303816000875af11580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082391906110a6565b610862576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108599061111f565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55336004546040516108ed929190611045565b60405180910390a160018081905550565b610906610add565b73ffffffffffffffffffffffffffffffffffffffff16610924610986565b73ffffffffffffffffffffffffffffffffffffffff161461097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190610e75565b60405180910390fd5b6109846000610ae5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b6000600454905090565b6109c7610add565b73ffffffffffffffffffffffffffffffffffffffff166109e5610986565b73ffffffffffffffffffffffffffffffffffffffff1614610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290610e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa2906111b1565b60405180910390fd5b610ab481610ae5565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bee610be9610be484610ba9565b610bc9565b610ba9565b9050919050565b6000610c0082610bd3565b9050919050565b6000610c1282610bf5565b9050919050565b610c2281610c07565b82525050565b6000602082019050610c3d6000830184610c19565b92915050565b6000819050919050565b610c5681610c43565b82525050565b6000602082019050610c716000830184610c4d565b92915050565b600080fd5b6000610c8782610ba9565b9050919050565b610c9781610c7c565b8114610ca257600080fd5b50565b600081359050610cb481610c8e565b92915050565b600060208284031215610cd057610ccf610c77565b5b6000610cde84828501610ca5565b91505092915050565b610cf081610c43565b8114610cfb57600080fd5b50565b600081359050610d0d81610ce7565b92915050565b600060208284031215610d2957610d28610c77565b5b6000610d3784828501610cfe565b91505092915050565b610d4981610c7c565b82525050565b6000602082019050610d646000830184610d40565b92915050565b600082825260208201905092915050565b7f4e6f20746f6b656e206164647265737320736574000000000000000000000000600082015250565b6000610db1601483610d6a565b9150610dbc82610d7b565b602082019050919050565b60006020820190508181036000830152610de081610da4565b9050919050565b600081519050610df681610ce7565b92915050565b600060208284031215610e1257610e11610c77565b5b6000610e2084828501610de7565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e5f602083610d6a565b9150610e6a82610e29565b602082019050919050565b60006020820190508181036000830152610e8e81610e52565b9050919050565b7f4e6f2063616c696d61626c6520616d6f756e7420736574000000000000000000600082015250565b6000610ecb601783610d6a565b9150610ed682610e95565b602082019050919050565b60006020820190508181036000830152610efa81610ebe565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f37601f83610d6a565b9150610f4282610f01565b602082019050919050565b60006020820190508181036000830152610f6681610f2a565b9050919050565b7f41697264726f702068617320616c7265616479206265656e20636c61696d6564600082015250565b6000610fa3602083610d6a565b9150610fae82610f6d565b602082019050919050565b60006020820190508181036000830152610fd281610f96565b9050919050565b7f536f7272792c206e6f20746f6b656e73206c6566742100000000000000000000600082015250565b600061100f601683610d6a565b915061101a82610fd9565b602082019050919050565b6000602082019050818103600083015261103e81611002565b9050919050565b600060408201905061105a6000830185610d40565b6110676020830184610c4d565b9392505050565b60008115159050919050565b6110838161106e565b811461108e57600080fd5b50565b6000815190506110a08161107a565b92915050565b6000602082840312156110bc576110bb610c77565b5b60006110ca84828501611091565b91505092915050565b7f5472616e7366657220776173206e6f74207375636365737366756c0000000000600082015250565b6000611109601b83610d6a565b9150611114826110d3565b602082019050919050565b60006020820190508181036000830152611138816110fc565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061119b602683610d6a565b91506111a68261113f565b604082019050919050565b600060208201905081810360008301526111ca8161118e565b905091905056fea26469706673582212206a88fb74fdd6c67bd878299b872cce02887a251f0d1b8bf2f7774acbc872ae0264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461012c5780638da5cb5b14610136578063a556f84614610154578063c354bd6e14610172578063f2fde38b14610190578063fc0c546a146101ac576100a9565b806310fe9ae8146100ae57806312065fe0146100cc57806326a4e8d2146100ea57806354df144d146101065780635b88349d14610122575b600080fd5b6100b66101ca565b6040516100c39190610c28565b60405180910390f35b6100d46101f4565b6040516100e19190610c5c565b60405180910390f35b61010460048036038101906100ff9190610cba565b610328565b005b610120600480360381019061011b9190610d13565b61041f565b005b61012a61057d565b005b6101346108fe565b005b61013e610986565b60405161014b9190610d4f565b60405180910390f35b61015c6109af565b6040516101699190610c5c565b60405180910390f35b61017a6109b5565b6040516101879190610c5c565b60405180910390f35b6101aa60048036038101906101a59190610cba565b6109bf565b005b6101b4610ab7565b6040516101c19190610c28565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e90610dc7565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102e29190610d4f565b602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190610dfc565b905090565b610330610add565b73ffffffffffffffffffffffffffffffffffffffff1661034e610986565b73ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610e75565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266816040516104149190610d4f565b60405180910390a150565b610427610add565b73ffffffffffffffffffffffffffffffffffffffff16610445610986565b73ffffffffffffffffffffffffffffffffffffffff161461049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290610e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610dc7565b60405180910390fd5b6000811161053a57600080fd5b806004819055507fe13b87e357b6ab17c565a8042616084608de82978cf3794844a036a9b6abbb8b6004546040516105729190610c5c565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561060f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060690610dc7565b60405180910390fd5b600060045411610654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064b90610ee1565b60405180910390fd5b6002600154141561069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190610f4d565b60405180910390fd5b600260018190555060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90610fb9565b60405180910390fd5b6004546107406101f4565b1015610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077890611025565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b81526004016107e0929190611045565b6020604051808303816000875af11580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082391906110a6565b610862576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108599061111f565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55336004546040516108ed929190611045565b60405180910390a160018081905550565b610906610add565b73ffffffffffffffffffffffffffffffffffffffff16610924610986565b73ffffffffffffffffffffffffffffffffffffffff161461097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190610e75565b60405180910390fd5b6109846000610ae5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b6000600454905090565b6109c7610add565b73ffffffffffffffffffffffffffffffffffffffff166109e5610986565b73ffffffffffffffffffffffffffffffffffffffff1614610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290610e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa2906111b1565b60405180910390fd5b610ab481610ae5565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bee610be9610be484610ba9565b610bc9565b610ba9565b9050919050565b6000610c0082610bd3565b9050919050565b6000610c1282610bf5565b9050919050565b610c2281610c07565b82525050565b6000602082019050610c3d6000830184610c19565b92915050565b6000819050919050565b610c5681610c43565b82525050565b6000602082019050610c716000830184610c4d565b92915050565b600080fd5b6000610c8782610ba9565b9050919050565b610c9781610c7c565b8114610ca257600080fd5b50565b600081359050610cb481610c8e565b92915050565b600060208284031215610cd057610ccf610c77565b5b6000610cde84828501610ca5565b91505092915050565b610cf081610c43565b8114610cfb57600080fd5b50565b600081359050610d0d81610ce7565b92915050565b600060208284031215610d2957610d28610c77565b5b6000610d3784828501610cfe565b91505092915050565b610d4981610c7c565b82525050565b6000602082019050610d646000830184610d40565b92915050565b600082825260208201905092915050565b7f4e6f20746f6b656e206164647265737320736574000000000000000000000000600082015250565b6000610db1601483610d6a565b9150610dbc82610d7b565b602082019050919050565b60006020820190508181036000830152610de081610da4565b9050919050565b600081519050610df681610ce7565b92915050565b600060208284031215610e1257610e11610c77565b5b6000610e2084828501610de7565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e5f602083610d6a565b9150610e6a82610e29565b602082019050919050565b60006020820190508181036000830152610e8e81610e52565b9050919050565b7f4e6f2063616c696d61626c6520616d6f756e7420736574000000000000000000600082015250565b6000610ecb601783610d6a565b9150610ed682610e95565b602082019050919050565b60006020820190508181036000830152610efa81610ebe565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f37601f83610d6a565b9150610f4282610f01565b602082019050919050565b60006020820190508181036000830152610f6681610f2a565b9050919050565b7f41697264726f702068617320616c7265616479206265656e20636c61696d6564600082015250565b6000610fa3602083610d6a565b9150610fae82610f6d565b602082019050919050565b60006020820190508181036000830152610fd281610f96565b9050919050565b7f536f7272792c206e6f20746f6b656e73206c6566742100000000000000000000600082015250565b600061100f601683610d6a565b915061101a82610fd9565b602082019050919050565b6000602082019050818103600083015261103e81611002565b9050919050565b600060408201905061105a6000830185610d40565b6110676020830184610c4d565b9392505050565b60008115159050919050565b6110838161106e565b811461108e57600080fd5b50565b6000815190506110a08161107a565b92915050565b6000602082840312156110bc576110bb610c77565b5b60006110ca84828501611091565b91505092915050565b7f5472616e7366657220776173206e6f74207375636365737366756c0000000000600082015250565b6000611109601b83610d6a565b9150611114826110d3565b602082019050919050565b60006020820190508181036000830152611138816110fc565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061119b602683610d6a565b91506111a68261113f565b604082019050919050565b600060208201905081810360008301526111ca8161118e565b905091905056fea26469706673582212206a88fb74fdd6c67bd878299b872cce02887a251f0d1b8bf2f7774acbc872ae0264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13098:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:6",
                "type": ""
              }
            ],
            "src": "7:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:6",
                "type": ""
              }
            ],
            "src": "139:60:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:6",
                "type": ""
              }
            ],
            "src": "205:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:6",
                "type": ""
              }
            ],
            "src": "353:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "559:66:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "569:50:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "613:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "582:30:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:37:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "569:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$222_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "539:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "549:9:6",
                "type": ""
              }
            ],
            "src": "485:140:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "710:80:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "727:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "777:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$222_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "732:44:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "732:51:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "720:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:64:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "720:64:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$222_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "698:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "705:3:6",
                "type": ""
              }
            ],
            "src": "631:159:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:138:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "918:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "930:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "926:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "918:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1012:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1025:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1021:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$222_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "954:57:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:85:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "954:85:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$222__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "880:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "892:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "903:4:6",
                "type": ""
              }
            ],
            "src": "796:250:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1097:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1107:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1118:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1107:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1079:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1089:7:6",
                "type": ""
              }
            ],
            "src": "1052:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1200:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1217:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1240:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1222:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1222:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1210:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1210:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1210:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1188:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1195:3:6",
                "type": ""
              }
            ],
            "src": "1135:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1357:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1367:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1379:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1375:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1367:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1447:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1460:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1471:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1456:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1456:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1403:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1403:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1329:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1341:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1352:4:6",
                "type": ""
              }
            ],
            "src": "1259:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1527:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1537:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1553:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1547:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1537:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1520:6:6",
                "type": ""
              }
            ],
            "src": "1487:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1657:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1674:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1677:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1667:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1568:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1797:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1800:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1790:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1790:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1691:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1859:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1869:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1898:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1880:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1869:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1841:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1851:7:6",
                "type": ""
              }
            ],
            "src": "1814:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1959:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2016:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2018:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1982:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2007:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1989:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1989:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1979:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1979:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1972:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1969:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1952:5:6",
                "type": ""
              }
            ],
            "src": "1916:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2096:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2106:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2128:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2115:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2106:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2171:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2144:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2144:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2144:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2074:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2082:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2090:5:6",
                "type": ""
              }
            ],
            "src": "2044:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2255:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2301:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2303:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2303:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2303:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2276:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2285:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2297:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2268:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2265:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2394:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2409:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2423:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2413:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2438:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2473:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2484:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2469:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2469:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2493:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2448:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2448:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2438:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2225:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2236:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2248:6:6",
                "type": ""
              }
            ],
            "src": "2189:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2567:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2624:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2633:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2636:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2626:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2590:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2615:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2597:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2597:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2587:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2587:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2577:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2560:5:6",
                "type": ""
              }
            ],
            "src": "2524:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2704:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2714:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2736:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2723:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2714:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2779:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2752:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2752:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2752:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2682:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2690:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2698:5:6",
                "type": ""
              }
            ],
            "src": "2652:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2863:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2909:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2911:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2911:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2911:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2884:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2893:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2880:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2880:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2905:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2876:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2873:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3002:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3017:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3031:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3021:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3046:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3081:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3092:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3077:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3077:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3101:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3056:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3056:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3046:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2833:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2844:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2856:6:6",
                "type": ""
              }
            ],
            "src": "2797:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3197:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3214:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3237:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3219:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3207:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3207:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3185:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3192:3:6",
                "type": ""
              }
            ],
            "src": "3132:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3354:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3364:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3376:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3387:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3372:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3364:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3444:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3457:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3468:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3453:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3453:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3400:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3400:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3400:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3326:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3338:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3349:4:6",
                "type": ""
              }
            ],
            "src": "3256:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3580:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3597:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3602:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3590:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3590:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3618:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3637:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3642:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3633:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3633:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3618:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3552:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3557:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3568:11:6",
                "type": ""
              }
            ],
            "src": "3484:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3765:64:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3787:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3783:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3783:14:6"
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3799:22:6",
                        "type": "",
                        "value": "No token address set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3776:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3776:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3776:46:6"
                }
              ]
            },
            "name": "store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3757:6:6",
                "type": ""
              }
            ],
            "src": "3659:170:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3981:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3991:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4057:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4062:2:6",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3998:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3998:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3991:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4163:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                      "nodeType": "YulIdentifier",
                      "src": "4074:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4074:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4176:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4187:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4192:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4183:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4183:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4176:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3969:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3977:3:6",
                "type": ""
              }
            ],
            "src": "3835:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4378:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4388:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4400:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4411:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4396:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4388:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4435:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4446:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4431:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4431:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4454:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4460:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4450:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4450:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4424:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4424:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4424:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4480:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4614:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4488:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4488:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4480:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4358:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4373:4:6",
                "type": ""
              }
            ],
            "src": "4207:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4695:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4705:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4720:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4714:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4714:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4705:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4763:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4736:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4736:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4673:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4681:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4689:5:6",
                "type": ""
              }
            ],
            "src": "4632:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4858:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4904:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4906:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4906:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4906:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4879:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4888:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4875:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4875:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4900:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4871:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4868:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4997:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5012:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5026:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5016:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5041:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5087:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5098:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5083:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5083:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5107:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5051:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5051:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5041:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4828:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4839:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4851:6:6",
                "type": ""
              }
            ],
            "src": "4781:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5244:76:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5266:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5274:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5262:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5262:14:6"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5278:34:6",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5255:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5255:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5255:58:6"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5236:6:6",
                "type": ""
              }
            ],
            "src": "5138:182:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5472:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5482:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5548:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5553:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5489:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5489:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5482:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5654:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "5565:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5565:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5565:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5667:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5678:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5683:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5674:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5674:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5667:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5460:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5468:3:6",
                "type": ""
              }
            ],
            "src": "5326:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5869:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5879:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5891:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5902:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5887:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5887:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5879:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5926:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5937:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5922:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5922:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5945:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5951:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5941:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5941:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5915:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5915:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5915:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5971:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6105:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5979:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5979:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5971:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5849:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5864:4:6",
                "type": ""
              }
            ],
            "src": "5698:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6229:67:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6251:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6259:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6247:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6247:14:6"
                      },
                      {
                        "hexValue": "4e6f2063616c696d61626c6520616d6f756e7420736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6263:25:6",
                        "type": "",
                        "value": "No calimable amount set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6240:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6240:49:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6240:49:6"
                }
              ]
            },
            "name": "store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6221:6:6",
                "type": ""
              }
            ],
            "src": "6123:173:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6448:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6458:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6524:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6529:2:6",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6465:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6465:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6458:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6630:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                      "nodeType": "YulIdentifier",
                      "src": "6541:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6541:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6541:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6643:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6654:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6659:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6650:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6650:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6643:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6436:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6444:3:6",
                "type": ""
              }
            ],
            "src": "6302:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6845:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6855:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6867:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6878:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6863:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6863:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6855:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6902:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6913:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6898:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6898:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6921:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6927:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6917:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6917:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6891:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6891:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6891:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6947:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7081:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6955:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6955:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6947:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6825:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6840:4:6",
                "type": ""
              }
            ],
            "src": "6674:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7205:75:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7227:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7235:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7223:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7223:14:6"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7239:33:6",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7216:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7216:57:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7216:57:6"
                }
              ]
            },
            "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7197:6:6",
                "type": ""
              }
            ],
            "src": "7099:181:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7432:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7442:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7508:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7513:2:6",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7449:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7449:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7442:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7614:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      "nodeType": "YulIdentifier",
                      "src": "7525:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7525:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7525:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7627:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7638:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7643:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7634:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7634:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7627:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7420:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7428:3:6",
                "type": ""
              }
            ],
            "src": "7286:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7829:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7839:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7851:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7862:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7847:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7847:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7839:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7886:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7897:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7882:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7882:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7905:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7911:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7901:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7901:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7875:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7875:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7875:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7931:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8065:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7939:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7939:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7931:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7809:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7824:4:6",
                "type": ""
              }
            ],
            "src": "7658:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8189:76:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8211:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8219:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8207:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8207:14:6"
                      },
                      {
                        "hexValue": "41697264726f702068617320616c7265616479206265656e20636c61696d6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8223:34:6",
                        "type": "",
                        "value": "Airdrop has already been claimed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8200:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8200:58:6"
                }
              ]
            },
            "name": "store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8181:6:6",
                "type": ""
              }
            ],
            "src": "8083:182:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8417:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8427:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8493:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8498:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8434:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8434:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8427:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8599:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                      "nodeType": "YulIdentifier",
                      "src": "8510:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8510:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8510:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8612:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8623:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8628:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8619:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8619:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8612:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8405:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8413:3:6",
                "type": ""
              }
            ],
            "src": "8271:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8814:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8824:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8836:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8847:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8832:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8832:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8824:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8871:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8882:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8867:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8867:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8890:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8896:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8886:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8886:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8860:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8860:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8860:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8916:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9050:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8924:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8916:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8794:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8809:4:6",
                "type": ""
              }
            ],
            "src": "8643:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9174:66:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9196:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9204:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9192:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9192:14:6"
                      },
                      {
                        "hexValue": "536f7272792c206e6f20746f6b656e73206c65667421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9208:24:6",
                        "type": "",
                        "value": "Sorry, no tokens left!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9185:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9185:48:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9185:48:6"
                }
              ]
            },
            "name": "store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9166:6:6",
                "type": ""
              }
            ],
            "src": "9068:172:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9392:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9402:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9468:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9473:2:6",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9409:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9409:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9402:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9574:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                      "nodeType": "YulIdentifier",
                      "src": "9485:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9485:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9485:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9587:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9598:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9603:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9594:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9594:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9587:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9380:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9388:3:6",
                "type": ""
              }
            ],
            "src": "9246:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9789:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9799:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9811:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9822:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9807:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9807:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9799:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9846:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9857:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9842:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9842:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9865:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9871:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9861:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9861:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9835:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9835:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9835:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9891:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10025:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9899:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9899:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9891:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9769:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9784:4:6",
                "type": ""
              }
            ],
            "src": "9618:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10169:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10179:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10191:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10202:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10187:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10187:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10179:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10259:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10272:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10283:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10268:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10268:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10215:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10215:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10215:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10340:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10353:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10364:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10349:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10349:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10296:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10296:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10296:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10133:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10145:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10153:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10164:4:6",
                "type": ""
              }
            ],
            "src": "10043:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10423:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10433:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10458:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10451:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10451:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10444:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10444:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10433:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10405:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10415:7:6",
                "type": ""
              }
            ],
            "src": "10381:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10517:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10571:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10580:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10583:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10573:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10573:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10573:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10540:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10562:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10547:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10547:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10537:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10537:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10530:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10530:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10527:60:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10510:5:6",
                "type": ""
              }
            ],
            "src": "10477:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10659:77:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10669:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10684:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10678:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10678:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10669:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10724:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10700:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10700:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10700:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10637:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10645:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10653:5:6",
                "type": ""
              }
            ],
            "src": "10599:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10816:271:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10862:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10864:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10864:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10864:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10837:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10846:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10833:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10833:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10858:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10829:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10829:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10826:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10955:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10970:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10984:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10974:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10999:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11042:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11053:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11038:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11038:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11062:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11009:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11009:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10999:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10786:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10797:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10809:6:6",
                "type": ""
              }
            ],
            "src": "10742:345:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11199:71:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11221:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11229:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11217:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11217:14:6"
                      },
                      {
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11233:29:6",
                        "type": "",
                        "value": "Transfer was not successful"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11210:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11210:53:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11210:53:6"
                }
              ]
            },
            "name": "store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11191:6:6",
                "type": ""
              }
            ],
            "src": "11093:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11422:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11432:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11498:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11503:2:6",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11439:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11439:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11432:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11604:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                      "nodeType": "YulIdentifier",
                      "src": "11515:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11515:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11515:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11617:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11628:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11633:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11624:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11624:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11617:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11410:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11418:3:6",
                "type": ""
              }
            ],
            "src": "11276:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11819:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11829:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11841:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11852:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11837:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11837:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11829:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11876:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11887:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11872:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11872:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11895:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11901:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11891:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11891:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11865:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11865:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11865:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11921:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12055:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11929:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11929:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11921:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11799:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11814:4:6",
                "type": ""
              }
            ],
            "src": "11648:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12179:119:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12201:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12209:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12197:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12197:14:6"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12213:34:6",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12190:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12190:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12190:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12269:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12277:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12265:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12265:15:6"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12282:8:6",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12258:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12258:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12258:33:6"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12171:6:6",
                "type": ""
              }
            ],
            "src": "12073:225:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12450:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12460:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12526:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12531:2:6",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12467:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12467:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12460:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12632:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12543:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12543:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12543:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12645:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12656:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12661:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12652:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12652:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12645:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12438:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12446:3:6",
                "type": ""
              }
            ],
            "src": "12304:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12847:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12857:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12869:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12880:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12865:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12865:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12857:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12904:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12915:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12900:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12900:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12923:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12929:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12919:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12919:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12893:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12893:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12893:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12949:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13083:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12957:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12957:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12949:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12827:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12842:4:6",
                "type": ""
              }
            ],
            "src": "12676:419:6"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$222_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$222_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$222_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$222__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$222_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943(memPtr) {\n\n        mstore(add(memPtr, 0), \"No token address set\")\n\n    }\n\n    function abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76(memPtr) {\n\n        mstore(add(memPtr, 0), \"No calimable amount set\")\n\n    }\n\n    function abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Airdrop has already been claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sorry, no tokens left!\")\n\n    }\n\n    function abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer was not successful\")\n\n    }\n\n    function abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "572:3536:5:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;572:3536:5;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;572:3536:5:-;;;;;;;",
  "deployedSourceMap": "572:3536:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3426:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3681:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2241:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2588:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2887:533;;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1790:30:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3803:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1276:19:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3426:85;3474:6;3499:5;;;;;;;;;;;3492:12;;3426:85;:::o;3681:116::-;3737:4;1895:1;1871:27;;:5;;;;;;;;;;;:27;;;;1863:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3760:5:::1;;;;;;;;;;;:15;;;3784:4;3760:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3753:37;;3681:116:::0;:::o;2241:161::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2336:13:5::1;2321:5;;:29;;;;;;;;;;;;;;;;;;2365:30;2381:13;2365:30;;;;;;:::i;:::-;;;;;;;;2241:161:::0;:::o;2588:198::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1895:1:5::1;1871:27;;:5;;;;;;;;;;;:27;;;;1863:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2692:1:::2;2682:7;:11;2674:20;;;::::0;::::2;;2722:7;2704:15;:25;;;;2744:35;2763:15;;2744:35;;;;;;:::i;:::-;;;;;;;;2588:198:::0;:::o;2887:533::-;1895:1;1871:27;;:5;;;;;;;;;;;:27;;;;1863:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2018:1:::1;2000:15;;:19;1992:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:1::2;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3108:5:5::3;3085:28;;:7;:19;3093:10;3085:19;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;3077:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3184:15;;3168:12;:10;:12::i;:::-;:31;;3160:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3244:5;;;;;;;;;;;:14;;;3259:10;3271:15;;3244:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3236:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3351:4;3329:7;:19;3337:10;3329:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3370:43;3385:10;3397:15;;3370:43;;;;;;;:::i;:::-;;;;;;;;1701:1:1::2;2628:7:::0;:22:::2;;;;2887:533:5:o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1790:30:5:-;;;;:::o;3803:96::-;3854:4;3877:15;;3870:22;;3803:96;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1276:19:5:-;;;;;;;;;;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:222::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1403:71;1471:1;1460:9;1456:17;1447:6;1403:71;:::i;:::-;1259:222;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:96;1851:7;1880:24;1898:5;1880:24;:::i;:::-;1869:35;;1814:96;;;:::o;1916:122::-;1989:24;2007:5;1989:24;:::i;:::-;1982:5;1979:35;1969:63;;2028:1;2025;2018:12;1969:63;1916:122;:::o;2044:139::-;2090:5;2128:6;2115:20;2106:29;;2144:33;2171:5;2144:33;:::i;:::-;2044:139;;;;:::o;2189:329::-;2248:6;2297:2;2285:9;2276:7;2272:23;2268:32;2265:119;;;2303:79;;:::i;:::-;2265:119;2423:1;2448:53;2493:7;2484:6;2473:9;2469:22;2448:53;:::i;:::-;2438:63;;2394:117;2189:329;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:169::-;3568:11;3602:6;3597:3;3590:19;3642:4;3637:3;3633:14;3618:29;;3484:169;;;;:::o;3659:170::-;3799:22;3795:1;3787:6;3783:14;3776:46;3659:170;:::o;3835:366::-;3977:3;3998:67;4062:2;4057:3;3998:67;:::i;:::-;3991:74;;4074:93;4163:3;4074:93;:::i;:::-;4192:2;4187:3;4183:12;4176:19;;3835:366;;;:::o;4207:419::-;4373:4;4411:2;4400:9;4396:18;4388:26;;4460:9;4454:4;4450:20;4446:1;4435:9;4431:17;4424:47;4488:131;4614:4;4488:131;:::i;:::-;4480:139;;4207:419;;;:::o;4632:143::-;4689:5;4720:6;4714:13;4705:22;;4736:33;4763:5;4736:33;:::i;:::-;4632:143;;;;:::o;4781:351::-;4851:6;4900:2;4888:9;4879:7;4875:23;4871:32;4868:119;;;4906:79;;:::i;:::-;4868:119;5026:1;5051:64;5107:7;5098:6;5087:9;5083:22;5051:64;:::i;:::-;5041:74;;4997:128;4781:351;;;;:::o;5138:182::-;5278:34;5274:1;5266:6;5262:14;5255:58;5138:182;:::o;5326:366::-;5468:3;5489:67;5553:2;5548:3;5489:67;:::i;:::-;5482:74;;5565:93;5654:3;5565:93;:::i;:::-;5683:2;5678:3;5674:12;5667:19;;5326:366;;;:::o;5698:419::-;5864:4;5902:2;5891:9;5887:18;5879:26;;5951:9;5945:4;5941:20;5937:1;5926:9;5922:17;5915:47;5979:131;6105:4;5979:131;:::i;:::-;5971:139;;5698:419;;;:::o;6123:173::-;6263:25;6259:1;6251:6;6247:14;6240:49;6123:173;:::o;6302:366::-;6444:3;6465:67;6529:2;6524:3;6465:67;:::i;:::-;6458:74;;6541:93;6630:3;6541:93;:::i;:::-;6659:2;6654:3;6650:12;6643:19;;6302:366;;;:::o;6674:419::-;6840:4;6878:2;6867:9;6863:18;6855:26;;6927:9;6921:4;6917:20;6913:1;6902:9;6898:17;6891:47;6955:131;7081:4;6955:131;:::i;:::-;6947:139;;6674:419;;;:::o;7099:181::-;7239:33;7235:1;7227:6;7223:14;7216:57;7099:181;:::o;7286:366::-;7428:3;7449:67;7513:2;7508:3;7449:67;:::i;:::-;7442:74;;7525:93;7614:3;7525:93;:::i;:::-;7643:2;7638:3;7634:12;7627:19;;7286:366;;;:::o;7658:419::-;7824:4;7862:2;7851:9;7847:18;7839:26;;7911:9;7905:4;7901:20;7897:1;7886:9;7882:17;7875:47;7939:131;8065:4;7939:131;:::i;:::-;7931:139;;7658:419;;;:::o;8083:182::-;8223:34;8219:1;8211:6;8207:14;8200:58;8083:182;:::o;8271:366::-;8413:3;8434:67;8498:2;8493:3;8434:67;:::i;:::-;8427:74;;8510:93;8599:3;8510:93;:::i;:::-;8628:2;8623:3;8619:12;8612:19;;8271:366;;;:::o;8643:419::-;8809:4;8847:2;8836:9;8832:18;8824:26;;8896:9;8890:4;8886:20;8882:1;8871:9;8867:17;8860:47;8924:131;9050:4;8924:131;:::i;:::-;8916:139;;8643:419;;;:::o;9068:172::-;9208:24;9204:1;9196:6;9192:14;9185:48;9068:172;:::o;9246:366::-;9388:3;9409:67;9473:2;9468:3;9409:67;:::i;:::-;9402:74;;9485:93;9574:3;9485:93;:::i;:::-;9603:2;9598:3;9594:12;9587:19;;9246:366;;;:::o;9618:419::-;9784:4;9822:2;9811:9;9807:18;9799:26;;9871:9;9865:4;9861:20;9857:1;9846:9;9842:17;9835:47;9899:131;10025:4;9899:131;:::i;:::-;9891:139;;9618:419;;;:::o;10043:332::-;10164:4;10202:2;10191:9;10187:18;10179:26;;10215:71;10283:1;10272:9;10268:17;10259:6;10215:71;:::i;:::-;10296:72;10364:2;10353:9;10349:18;10340:6;10296:72;:::i;:::-;10043:332;;;;;:::o;10381:90::-;10415:7;10458:5;10451:13;10444:21;10433:32;;10381:90;;;:::o;10477:116::-;10547:21;10562:5;10547:21;:::i;:::-;10540:5;10537:32;10527:60;;10583:1;10580;10573:12;10527:60;10477:116;:::o;10599:137::-;10653:5;10684:6;10678:13;10669:22;;10700:30;10724:5;10700:30;:::i;:::-;10599:137;;;;:::o;10742:345::-;10809:6;10858:2;10846:9;10837:7;10833:23;10829:32;10826:119;;;10864:79;;:::i;:::-;10826:119;10984:1;11009:61;11062:7;11053:6;11042:9;11038:22;11009:61;:::i;:::-;10999:71;;10955:125;10742:345;;;;:::o;11093:177::-;11233:29;11229:1;11221:6;11217:14;11210:53;11093:177;:::o;11276:366::-;11418:3;11439:67;11503:2;11498:3;11439:67;:::i;:::-;11432:74;;11515:93;11604:3;11515:93;:::i;:::-;11633:2;11628:3;11624:12;11617:19;;11276:366;;;:::o;11648:419::-;11814:4;11852:2;11841:9;11837:18;11829:26;;11901:9;11895:4;11891:20;11887:1;11876:9;11872:17;11865:47;11929:131;12055:4;11929:131;:::i;:::-;11921:139;;11648:419;;;:::o;12073:225::-;12213:34;12209:1;12201:6;12197:14;12190:58;12282:8;12277:2;12269:6;12265:15;12258:33;12073:225;:::o;12304:366::-;12446:3;12467:67;12531:2;12526:3;12467:67;:::i;:::-;12460:74;;12543:93;12632:3;12543:93;:::i;:::-;12661:2;12656:3;12652:12;12645:19;;12304:366;;;:::o;12676:419::-;12842:4;12880:2;12869:9;12865:18;12857:26;;12929:9;12923:4;12919:20;12915:1;12904:9;12900:17;12893:47;12957:131;13083:4;12957:131;:::i;:::-;12949:139;;12676:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title Airdrop Contract\n/// @author ethSplit\n/// @notice Users can use this contract to claim tokens for free once per address\n/// @dev The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens.\ncontract Airdrop is Ownable, ReentrancyGuard{\n\n    /// @notice Emitted when TokenAddress is being set\n    /// @param setTokenAddress ERC20 TokenAddress\n    event TokenAddressSet(address setTokenAddress);\n\n    /// @notice Emitted when ClaimableAmount is being set\n    /// @param claimableAmount amount to claim per user\n    event ClaimableAmountSet(uint claimableAmount);\n\n    /// @notice Emitted when Airdrop is being claimed\n    /// @param caller user that claimed the airdrop\n    /// @param amount that has been claimed\n    event AirdropClaimed(address caller, uint amount);\n\n    /// @notice used to store the token address\n    /// @dev imported IERC20.sol from openzeppelin to store token address\n    IERC20 public token;\n\n    /// @notice Mapping used to check if users claimed already\n    /// @dev sets the user that claims to true\n    mapping (address => bool) claimed;\n\n    /***\n    todo Whitelist users\n    /// @notice Checks if users are whitelisted\n    /// @dev owner can set an address to true, if it is eligible for the airdrop\n    mapping (address => bool) public whitelist;\n    ***/\n\n    /// @notice Amount of tokens to be claimed\n    /// @dev uint that stores the claimable amount of tokens per user\n    uint256 public claimableAmount;\n    \n    modifier isTokenSet() {\n        require(token != IERC20(address(0)), \"No token address set\");\n        _;\n    }\n    \n    modifier claimableAmountSet () {\n        require(claimableAmount > 0, \"No calimable amount set\");\n        _;\n    }\n\n    /// @notice sets the tokenaddress the contract will use\n    /// @dev adds the ERC20 Token address\n    /// @param _tokenAddress for the Token that should be claimable\n    function setTokenAddress (address _tokenAddress) external onlyOwner() {\n        token = IERC20(_tokenAddress);\n        emit TokenAddressSet(_tokenAddress);\n    }\n\n    /// @notice sets the amount of tokens that can be claimed per user\n    /// @dev pass normal decimal number\n    /// @param _amount the amount of tokens that should be claimable\n    function setClaimableAmount (uint _amount) external onlyOwner() isTokenSet(){\n        require(_amount > 0);\n        claimableAmount = _amount;\n        emit ClaimableAmountSet(claimableAmount);\n    }\n\n    /// @notice lets user claim the airdrop\n    /// @dev check that a user can claim only once\n    function claimAirdrop () external isTokenSet() claimableAmountSet() nonReentrant {\n        /**todo only whitelisted users\n        require(whitelist[msg.sender] == true);\n        **/\n        require(claimed[msg.sender] == false, \"Airdrop has already been claimed\");\n        require(getBalance() >= claimableAmount, \"Sorry, no tokens left!\");\n        require(token.transfer(msg.sender, claimableAmount), \"Transfer was not successful\");\n        claimed[msg.sender] = true;\n        emit AirdropClaimed(msg.sender, claimableAmount);\n    }\n\n    function getTokenAddress () public view returns(IERC20) {\n        return token;\n    }\n    \n    /// @notice returns the balance of this contract\n    /// @dev returns token balance\n    /// @return uint that stands for the token balance of this contract\n    function getBalance () public view isTokenSet() returns(uint) {\n        return token.balanceOf(address(this));\n    }\n\n    function getClaimableAmount () public view returns(uint) {\n        return claimableAmount;\n    }\n\n     /***\n    todo Add whitelist functionality\n    function addToWhiteList (address _user) onlyOwner() {\n        require (whitelist[_user] !=== false);\n        whitelist[_user] == true;\n    }\n    ***/\n    \n}",
  "sourcePath": "/mnt/c/Users/abesl/Coding/webpack/contracts/Airdrop.sol",
  "ast": {
    "absolutePath": "project:/contracts/Airdrop.sol",
    "exportedSymbols": {
      "Airdrop": [
        754
      ],
      "Context": [
        244
      ],
      "IERC20": [
        222
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeMath": [
        556
      ]
    },
    "id": 755,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 558,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 559,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 105,
        "src": "57:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 560,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 223,
        "src": "110:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 561,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 557,
        "src": "167:57:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 562,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 145,
        "src": "225:62:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 564,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "592:7:5"
            },
            "id": 565,
            "nodeType": "InheritanceSpecifier",
            "src": "592:7:5"
          },
          {
            "baseName": {
              "id": 566,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "601:15:5"
            },
            "id": 567,
            "nodeType": "InheritanceSpecifier",
            "src": "601:15:5"
          }
        ],
        "canonicalName": "Airdrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 563,
          "nodeType": "StructuredDocumentation",
          "src": "289:283:5",
          "text": "@title Airdrop Contract\n @author ethSplit\n @notice Users can use this contract to claim tokens for free once per address\n @dev The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens."
        },
        "fullyImplemented": true,
        "id": 754,
        "linearizedBaseContracts": [
          754,
          144,
          104,
          244
        ],
        "name": "Airdrop",
        "nameLocation": "581:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 568,
              "nodeType": "StructuredDocumentation",
              "src": "623:100:5",
              "text": "@notice Emitted when TokenAddress is being set\n @param setTokenAddress ERC20 TokenAddress"
            },
            "id": 572,
            "name": "TokenAddressSet",
            "nameLocation": "734:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "setTokenAddress",
                  "nameLocation": "758:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "750:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:25:5"
            },
            "src": "728:47:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 573,
              "nodeType": "StructuredDocumentation",
              "src": "781:109:5",
              "text": "@notice Emitted when ClaimableAmount is being set\n @param claimableAmount amount to claim per user"
            },
            "id": 577,
            "name": "ClaimableAmountSet",
            "nameLocation": "901:18:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimableAmount",
                  "nameLocation": "925:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "920:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:22:5"
            },
            "src": "895:47:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "948:145:5",
              "text": "@notice Emitted when Airdrop is being claimed\n @param caller user that claimed the airdrop\n @param amount that has been claimed"
            },
            "id": 584,
            "name": "AirdropClaimed",
            "nameLocation": "1104:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1127:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "1119:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 582,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1140:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "1135:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:29:5"
            },
            "src": "1098:50:5"
          },
          {
            "constant": false,
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "1154:117:5",
              "text": "@notice used to store the token address\n @dev imported IERC20.sol from openzeppelin to store token address"
            },
            "functionSelector": "fc0c546a",
            "id": 588,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1290:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "1276:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$222",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 587,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 586,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "1276:6:5"
              },
              "referencedDeclaration": 222,
              "src": "1276:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "1302:105:5",
              "text": "@notice Mapping used to check if users claimed already\n @dev sets the user that claims to true"
            },
            "id": 593,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1438:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "1412:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 592,
              "keyType": {
                "id": 590,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1421:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1412:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 591,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1432:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "1673:112:5",
              "text": "@notice Amount of tokens to be claimed\n @dev uint that stores the claimable amount of tokens per user"
            },
            "functionSelector": "a556f846",
            "id": 596,
            "mutability": "mutable",
            "name": "claimableAmount",
            "nameLocation": "1805:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "1790:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 595,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1790:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "1853:88:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 599,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "1871:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$222",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 603,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1895:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1887:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 601,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1887:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1887:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 600,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "1880:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1880:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$222",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "1871:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        },
                        "value": "No token address set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1863:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:60:5"
                },
                {
                  "id": 610,
                  "nodeType": "PlaceholderStatement",
                  "src": "1933:1:5"
                }
              ]
            },
            "id": 612,
            "name": "isTokenSet",
            "nameLocation": "1840:10:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:5"
            },
            "src": "1831:110:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1982:83:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 615,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "2000:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2018:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2000:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2063616c696d61626c6520616d6f756e7420736574",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        },
                        "value": "No calimable amount set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        }
                      ],
                      "id": 614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1992:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:55:5"
                },
                {
                  "id": 621,
                  "nodeType": "PlaceholderStatement",
                  "src": "2057:1:5"
                }
              ]
            },
            "id": 623,
            "name": "claimableAmountSet",
            "nameLocation": "1960:18:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:5"
            },
            "src": "1951:114:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "2311:91:5",
              "statements": [
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 631,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "2321:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 633,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "2336:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 632,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2329:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2329:21:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2321:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "2321:29:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 638,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2381:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 637,
                      "name": "TokenAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "2365:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "EmitStatement",
                  "src": "2360:35:5"
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "2071:165:5",
              "text": "@notice sets the tokenaddress the contract will use\n @dev adds the ERC20 Token address\n @param _tokenAddress for the Token that should be claimable"
            },
            "functionSelector": "26a4e8d2",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 628,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2299:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2299:11:5"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "2250:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2275:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2267:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2266:23:5"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2311:0:5"
            },
            "scope": 754,
            "src": "2241:161:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "2664:122:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 653,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "2682:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2692:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2682:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2674:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "2674:20:5"
                },
                {
                  "expression": {
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 658,
                      "name": "claimableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "2704:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 659,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "2722:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2704:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:25:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 663,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "2763:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 662,
                      "name": "ClaimableAmountSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "2744:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2744:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "EmitStatement",
                  "src": "2739:40:5"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "2408:175:5",
              "text": "@notice sets the amount of tokens that can be claimed per user\n @dev pass normal decimal number\n @param _amount the amount of tokens that should be claimable"
            },
            "functionSelector": "54df144d",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 647,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2640:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2640:11:5"
              },
              {
                "arguments": [],
                "id": 650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 649,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 612,
                  "src": "2652:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2652:12:5"
              }
            ],
            "name": "setClaimableAmount",
            "nameLocation": "2597:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2622:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "2617:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2617:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2616:14:5"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:0:5"
            },
            "scope": 754,
            "src": "2588:198:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "2968:452:5",
              "statements": [
                {
                  "documentation": "todo only whitelisted users\nrequire(whitelist[msg.sender] == true);*",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 678,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "3085:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 681,
                          "indexExpression": {
                            "expression": {
                              "id": 679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3093:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3093:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3085:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3108:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3085:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f702068617320616c7265616479206265656e20636c61696d6564",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3115:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        },
                        "value": "Airdrop has already been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        }
                      ],
                      "id": 677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3077:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3077:73:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "3077:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 688,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "3168:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3168:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 690,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "3184:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3168:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c206e6f20746f6b656e73206c65667421",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3201:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        },
                        "value": "Sorry, no tokens left!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3160:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 698,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3259:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3259:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 700,
                            "name": "claimableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "3271:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 696,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "3244:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$222",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "3244:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3244:43:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3289:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        },
                        "value": "Transfer was not successful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3236:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3236:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "3236:83:5"
                },
                {
                  "expression": {
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 705,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "3329:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 708,
                      "indexExpression": {
                        "expression": {
                          "id": 706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3337:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3337:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3329:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3351:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3329:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3385:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3385:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 715,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "3397:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 712,
                      "name": "AirdropClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "3370:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3370:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "EmitStatement",
                  "src": "3365:48:5"
                }
              ]
            },
            "documentation": {
              "id": 668,
              "nodeType": "StructuredDocumentation",
              "src": "2792:90:5",
              "text": "@notice lets user claim the airdrop\n @dev check that a user can claim only once"
            },
            "functionSelector": "5b88349d",
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 670,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 612,
                  "src": "2921:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2921:12:5"
              },
              {
                "arguments": [],
                "id": 673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 672,
                  "name": "claimableAmountSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 623,
                  "src": "2934:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:20:5"
              },
              {
                "id": 675,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 674,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "2955:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2955:12:5"
              }
            ],
            "name": "claimAirdrop",
            "nameLocation": "2896:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2909:2:5"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:0:5"
            },
            "scope": 754,
            "src": "2887:533:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "3482:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 725,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 588,
                    "src": "3499:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 724,
                  "id": 726,
                  "nodeType": "Return",
                  "src": "3492:12:5"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "3435:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3451:2:5"
            },
            "returnParameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "3474:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$222",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 722,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 721,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 222,
                      "src": "3474:6:5"
                    },
                    "referencedDeclaration": 222,
                    "src": "3474:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3473:8:5"
            },
            "scope": 754,
            "src": "3426:85:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "3743:54:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 740,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3784:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Airdrop_$754",
                              "typeString": "contract Airdrop"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Airdrop_$754",
                              "typeString": "contract Airdrop"
                            }
                          ],
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3776:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3776:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 736,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "3760:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "3760:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3760:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 735,
                  "id": 743,
                  "nodeType": "Return",
                  "src": "3753:37:5"
                }
              ]
            },
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "3521:155:5",
              "text": "@notice returns the balance of this contract\n @dev returns token balance\n @return uint that stands for the token balance of this contract"
            },
            "functionSelector": "12065fe0",
            "id": 745,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 732,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 731,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 612,
                  "src": "3716:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3716:12:5"
              }
            ],
            "name": "getBalance",
            "nameLocation": "3690:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3701:2:5"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "3737:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3736:6:5"
            },
            "scope": 754,
            "src": "3681:116:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "3860:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 750,
                    "name": "claimableAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 596,
                    "src": "3877:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 749,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "3870:22:5"
                }
              ]
            },
            "functionSelector": "c354bd6e",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableAmount",
            "nameLocation": "3812:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3831:2:5"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "3854:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3853:6:5"
            },
            "scope": 754,
            "src": "3803:96:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 755,
        "src": "572:3536:5",
        "usedErrors": []
      }
    ],
    "src": "32:4076:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Airdrop.sol",
    "exportedSymbols": {
      "Airdrop": [
        754
      ],
      "Context": [
        244
      ],
      "IERC20": [
        222
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeMath": [
        556
      ]
    },
    "id": 755,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 558,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 559,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 105,
        "src": "57:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 560,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 223,
        "src": "110:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 561,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 557,
        "src": "167:57:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 562,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 755,
        "sourceUnit": 145,
        "src": "225:62:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 564,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "592:7:5"
            },
            "id": 565,
            "nodeType": "InheritanceSpecifier",
            "src": "592:7:5"
          },
          {
            "baseName": {
              "id": 566,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "601:15:5"
            },
            "id": 567,
            "nodeType": "InheritanceSpecifier",
            "src": "601:15:5"
          }
        ],
        "canonicalName": "Airdrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 563,
          "nodeType": "StructuredDocumentation",
          "src": "289:283:5",
          "text": "@title Airdrop Contract\n @author ethSplit\n @notice Users can use this contract to claim tokens for free once per address\n @dev The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens."
        },
        "fullyImplemented": true,
        "id": 754,
        "linearizedBaseContracts": [
          754,
          144,
          104,
          244
        ],
        "name": "Airdrop",
        "nameLocation": "581:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 568,
              "nodeType": "StructuredDocumentation",
              "src": "623:100:5",
              "text": "@notice Emitted when TokenAddress is being set\n @param setTokenAddress ERC20 TokenAddress"
            },
            "id": 572,
            "name": "TokenAddressSet",
            "nameLocation": "734:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "setTokenAddress",
                  "nameLocation": "758:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "750:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:25:5"
            },
            "src": "728:47:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 573,
              "nodeType": "StructuredDocumentation",
              "src": "781:109:5",
              "text": "@notice Emitted when ClaimableAmount is being set\n @param claimableAmount amount to claim per user"
            },
            "id": 577,
            "name": "ClaimableAmountSet",
            "nameLocation": "901:18:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimableAmount",
                  "nameLocation": "925:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "920:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:22:5"
            },
            "src": "895:47:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "948:145:5",
              "text": "@notice Emitted when Airdrop is being claimed\n @param caller user that claimed the airdrop\n @param amount that has been claimed"
            },
            "id": 584,
            "name": "AirdropClaimed",
            "nameLocation": "1104:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1127:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "1119:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 582,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1140:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "1135:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:29:5"
            },
            "src": "1098:50:5"
          },
          {
            "constant": false,
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "1154:117:5",
              "text": "@notice used to store the token address\n @dev imported IERC20.sol from openzeppelin to store token address"
            },
            "functionSelector": "fc0c546a",
            "id": 588,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1290:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "1276:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$222",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 587,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 586,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "1276:6:5"
              },
              "referencedDeclaration": 222,
              "src": "1276:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "1302:105:5",
              "text": "@notice Mapping used to check if users claimed already\n @dev sets the user that claims to true"
            },
            "id": 593,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1438:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "1412:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 592,
              "keyType": {
                "id": 590,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1421:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1412:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 591,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1432:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "1673:112:5",
              "text": "@notice Amount of tokens to be claimed\n @dev uint that stores the claimable amount of tokens per user"
            },
            "functionSelector": "a556f846",
            "id": 596,
            "mutability": "mutable",
            "name": "claimableAmount",
            "nameLocation": "1805:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 754,
            "src": "1790:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 595,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1790:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "1853:88:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 599,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "1871:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$222",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 603,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1895:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1887:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 601,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1887:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1887:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 600,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "1880:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1880:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$222",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "1871:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        },
                        "value": "No token address set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1863:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:60:5"
                },
                {
                  "id": 610,
                  "nodeType": "PlaceholderStatement",
                  "src": "1933:1:5"
                }
              ]
            },
            "id": 612,
            "name": "isTokenSet",
            "nameLocation": "1840:10:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:5"
            },
            "src": "1831:110:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "1982:83:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 615,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "2000:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2018:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2000:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2063616c696d61626c6520616d6f756e7420736574",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        },
                        "value": "No calimable amount set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        }
                      ],
                      "id": 614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1992:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:55:5"
                },
                {
                  "id": 621,
                  "nodeType": "PlaceholderStatement",
                  "src": "2057:1:5"
                }
              ]
            },
            "id": 623,
            "name": "claimableAmountSet",
            "nameLocation": "1960:18:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:5"
            },
            "src": "1951:114:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "2311:91:5",
              "statements": [
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 631,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "2321:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 633,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "2336:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 632,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2329:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2329:21:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$222",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2321:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "2321:29:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 638,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2381:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 637,
                      "name": "TokenAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "2365:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "EmitStatement",
                  "src": "2360:35:5"
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "2071:165:5",
              "text": "@notice sets the tokenaddress the contract will use\n @dev adds the ERC20 Token address\n @param _tokenAddress for the Token that should be claimable"
            },
            "functionSelector": "26a4e8d2",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 629,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 628,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2299:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2299:11:5"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "2250:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2275:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "2267:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2266:23:5"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2311:0:5"
            },
            "scope": 754,
            "src": "2241:161:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "2664:122:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 653,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "2682:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2692:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2682:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2674:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "2674:20:5"
                },
                {
                  "expression": {
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 658,
                      "name": "claimableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "2704:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 659,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "2722:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2704:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:25:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 663,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "2763:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 662,
                      "name": "ClaimableAmountSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "2744:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2744:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "EmitStatement",
                  "src": "2739:40:5"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "2408:175:5",
              "text": "@notice sets the amount of tokens that can be claimed per user\n @dev pass normal decimal number\n @param _amount the amount of tokens that should be claimable"
            },
            "functionSelector": "54df144d",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 647,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2640:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2640:11:5"
              },
              {
                "arguments": [],
                "id": 650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 649,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 612,
                  "src": "2652:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2652:12:5"
              }
            ],
            "name": "setClaimableAmount",
            "nameLocation": "2597:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2622:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "2617:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2617:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2616:14:5"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:0:5"
            },
            "scope": 754,
            "src": "2588:198:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "2968:452:5",
              "statements": [
                {
                  "documentation": "todo only whitelisted users\nrequire(whitelist[msg.sender] == true);*",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 678,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "3085:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 681,
                          "indexExpression": {
                            "expression": {
                              "id": 679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3093:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3093:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3085:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3108:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3085:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f702068617320616c7265616479206265656e20636c61696d6564",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3115:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        },
                        "value": "Airdrop has already been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        }
                      ],
                      "id": 677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3077:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3077:73:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "3077:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 688,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "3168:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3168:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 690,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "3184:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3168:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c206e6f20746f6b656e73206c65667421",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3201:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        },
                        "value": "Sorry, no tokens left!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3160:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 698,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3259:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3259:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 700,
                            "name": "claimableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "3271:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 696,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "3244:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$222",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 171,
                          "src": "3244:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3244:43:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3289:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        },
                        "value": "Transfer was not successful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3236:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3236:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "3236:83:5"
                },
                {
                  "expression": {
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 705,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "3329:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 708,
                      "indexExpression": {
                        "expression": {
                          "id": 706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3337:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3337:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3329:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3351:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3329:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3385:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3385:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 715,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "3397:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 712,
                      "name": "AirdropClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "3370:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3370:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "EmitStatement",
                  "src": "3365:48:5"
                }
              ]
            },
            "documentation": {
              "id": 668,
              "nodeType": "StructuredDocumentation",
              "src": "2792:90:5",
              "text": "@notice lets user claim the airdrop\n @dev check that a user can claim only once"
            },
            "functionSelector": "5b88349d",
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 670,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 612,
                  "src": "2921:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2921:12:5"
              },
              {
                "arguments": [],
                "id": 673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 672,
                  "name": "claimableAmountSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 623,
                  "src": "2934:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:20:5"
              },
              {
                "id": 675,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 674,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "2955:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2955:12:5"
              }
            ],
            "name": "claimAirdrop",
            "nameLocation": "2896:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2909:2:5"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:0:5"
            },
            "scope": 754,
            "src": "2887:533:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "3482:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 725,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 588,
                    "src": "3499:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 724,
                  "id": 726,
                  "nodeType": "Return",
                  "src": "3492:12:5"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "3435:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3451:2:5"
            },
            "returnParameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "3474:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$222",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 722,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 721,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 222,
                      "src": "3474:6:5"
                    },
                    "referencedDeclaration": 222,
                    "src": "3474:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$222",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3473:8:5"
            },
            "scope": 754,
            "src": "3426:85:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "3743:54:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 740,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3784:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Airdrop_$754",
                              "typeString": "contract Airdrop"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Airdrop_$754",
                              "typeString": "contract Airdrop"
                            }
                          ],
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3776:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3776:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3776:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 736,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "3760:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "3760:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3760:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 735,
                  "id": 743,
                  "nodeType": "Return",
                  "src": "3753:37:5"
                }
              ]
            },
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "3521:155:5",
              "text": "@notice returns the balance of this contract\n @dev returns token balance\n @return uint that stands for the token balance of this contract"
            },
            "functionSelector": "12065fe0",
            "id": 745,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 732,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 731,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 612,
                  "src": "3716:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3716:12:5"
              }
            ],
            "name": "getBalance",
            "nameLocation": "3690:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3701:2:5"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "3737:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3736:6:5"
            },
            "scope": 754,
            "src": "3681:116:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "3860:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 750,
                    "name": "claimableAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 596,
                    "src": "3877:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 749,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "3870:22:5"
                }
              ]
            },
            "functionSelector": "c354bd6e",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableAmount",
            "nameLocation": "3812:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3831:2:5"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "3854:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3853:6:5"
            },
            "scope": 754,
            "src": "3803:96:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 755,
        "src": "572:3536:5",
        "usedErrors": []
      }
    ],
    "src": "32:4076:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "AirdropClaimed",
          "type": "event"
        },
        "0xe13b87e357b6ab17c565a8042616084608de82978cf3794844a036a9b6abbb8b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "claimableAmount",
              "type": "uint256"
            }
          ],
          "name": "ClaimableAmountSet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "setTokenAddress",
              "type": "address"
            }
          ],
          "name": "TokenAddressSet",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE74b425F12A559eAd15352e31435CE083D752501",
      "transactionHash": "0xcfbb236ab07b792be534ba5260eca9f8ce4fba40796a27bafc9ec10e262563b0"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-30T04:32:19.754Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "ethSplit",
    "details": "The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens.",
    "events": {
      "AirdropClaimed(address,uint256)": {
        "params": {
          "amount": "that has been claimed",
          "caller": "user that claimed the airdrop"
        }
      },
      "ClaimableAmountSet(uint256)": {
        "params": {
          "claimableAmount": "amount to claim per user"
        }
      },
      "TokenAddressSet(address)": {
        "params": {
          "setTokenAddress": "ERC20 TokenAddress"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "claimAirdrop()": {
        "details": "check that a user can claim only once"
      },
      "getBalance()": {
        "details": "returns token balance",
        "returns": {
          "_0": "uint that stands for the token balance of this contract"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setClaimableAmount(uint256)": {
        "details": "pass normal decimal number",
        "params": {
          "_amount": "the amount of tokens that should be claimable"
        }
      },
      "setTokenAddress(address)": {
        "details": "adds the ERC20 Token address",
        "params": {
          "_tokenAddress": "for the Token that should be claimable"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "claimableAmount": {
        "details": "uint that stores the claimable amount of tokens per user"
      },
      "claimed": {
        "details": "sets the user that claims to true"
      },
      "token": {
        "details": "imported IERC20.sol from openzeppelin to store token address"
      }
    },
    "title": "Airdrop Contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AirdropClaimed(address,uint256)": {
        "notice": "Emitted when Airdrop is being claimed"
      },
      "ClaimableAmountSet(uint256)": {
        "notice": "Emitted when ClaimableAmount is being set"
      },
      "TokenAddressSet(address)": {
        "notice": "Emitted when TokenAddress is being set"
      }
    },
    "kind": "user",
    "methods": {
      "claimAirdrop()": {
        "notice": "lets user claim the airdrop"
      },
      "claimableAmount()": {
        "notice": "Amount of tokens to be claimed"
      },
      "getBalance()": {
        "notice": "returns the balance of this contract"
      },
      "setClaimableAmount(uint256)": {
        "notice": "sets the amount of tokens that can be claimed per user"
      },
      "setTokenAddress(address)": {
        "notice": "sets the tokenaddress the contract will use"
      },
      "token()": {
        "notice": "used to store the token address"
      }
    },
    "notice": "Users can use this contract to claim tokens for free once per address",
    "version": 1
  }
}