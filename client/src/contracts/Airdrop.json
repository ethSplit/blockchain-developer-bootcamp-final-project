{
  "contractName": "Airdrop",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AirdropClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimableAmount",
          "type": "uint256"
        }
      ],
      "name": "ClaimableAmountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "setTokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenAddressSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setClaimableAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAirdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getClaimableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "airdropClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimableAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"setTokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setClaimableAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ethSplit\",\"details\":\"The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens.\",\"events\":{\"AirdropClaimed(address,uint256)\":{\"params\":{\"amount\":\"that has been claimed\",\"caller\":\"user that claimed the airdrop\"}},\"ClaimableAmountSet(uint256)\":{\"params\":{\"claimableAmount\":\"amount to claim per user\"}},\"TokenAddressSet(address)\":{\"params\":{\"setTokenAddress\":\"ERC20 TokenAddress\"}}},\"kind\":\"dev\",\"methods\":{\"airdropClaimed()\":{\"details\":\"readig data from mapping claimed\",\"returns\":{\"_0\":\"bool false if airdrop has not been claimed yet\"}},\"claimAirdrop()\":{\"details\":\"check that a user can claim only once\"},\"getBalance()\":{\"details\":\"returns token balance\",\"returns\":{\"_0\":\"uint that stands for the token balance of this contract\"}},\"getClaimableAmount()\":{\"returns\":{\"_0\":\"return uint claimable amount\"}},\"getTokenAddress()\":{\"details\":\"without token address claim is not possible\",\"returns\":{\"_0\":\"return erc20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setClaimableAmount(uint256)\":{\"details\":\"pass normal decimal number\",\"params\":{\"_amount\":\"the amount of tokens that should be claimable\"}},\"setTokenAddress(address)\":{\"details\":\"adds the ERC20 Token address\",\"params\":{\"_tokenAddress\":\"for the Token that should be claimable\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"claimableAmount\":{\"details\":\"uint that stores the claimable amount of tokens per user\"},\"claimed\":{\"details\":\"sets the user that claims to true\"},\"token\":{\"details\":\"imported IERC20.sol from openzeppelin to store token address\"}},\"title\":\"Airdrop Contract\",\"version\":1},\"userdoc\":{\"events\":{\"AirdropClaimed(address,uint256)\":{\"notice\":\"Emitted when Airdrop is being claimed\"},\"ClaimableAmountSet(uint256)\":{\"notice\":\"Emitted when ClaimableAmount is being set\"},\"TokenAddressSet(address)\":{\"notice\":\"Emitted when TokenAddress is being set\"}},\"kind\":\"user\",\"methods\":{\"airdropClaimed()\":{\"notice\":\"used to check if a user claimed airdrop\"},\"claimAirdrop()\":{\"notice\":\"lets user claim the airdrop\"},\"claimableAmount()\":{\"notice\":\"Amount of tokens to be claimed\"},\"getBalance()\":{\"notice\":\"returns the balance of this contract\"},\"getClaimableAmount()\":{\"notice\":\"get the available amount that can be claimed\"},\"getTokenAddress()\":{\"notice\":\"Get the token address\"},\"setClaimableAmount(uint256)\":{\"notice\":\"sets the amount of tokens that can be claimed per user\"},\"setTokenAddress(address)\":{\"notice\":\"sets the tokenaddress the contract will use\"},\"token()\":{\"notice\":\"used to store the token address\"}},\"notice\":\"Users can use this contract to claim tokens for free once per address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/Airdrop.sol\":{\"keccak256\":\"0x36c74285e8c0df3186f0a0d8ff38d4a24eed5f60970e7e08a6d39e2ec8ce8a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eb631c0873849a1799dd6270316489370a58d9722206e058353ae3ec8ab911e\",\"dweb:/ipfs/QmSxgxf7WNuMKLM8AxVKXY3fnjQreUL6t7pSL6aubg9QPi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6112ae806101146000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101415780639eea92cd1461015f578063a556f8461461017d578063c354bd6e1461019b578063f2fde38b146101b9578063fc0c546a146101d5576100b4565b806310fe9ae8146100b957806312065fe0146100d757806326a4e8d2146100f557806354df144d146101115780635b88349d1461012d578063715018a614610137575b600080fd5b6100c16101f3565b6040516100ce9190610ca5565b60405180910390f35b6100df61021d565b6040516100ec9190610cd9565b60405180910390f35b61010f600480360381019061010a9190610d37565b610351565b005b61012b60048036038101906101269190610d90565b610448565b005b6101356105a6565b005b61013f610927565b005b6101496109af565b6040516101569190610dcc565b60405180910390f35b6101676109d8565b6040516101749190610e02565b60405180910390f35b610185610a2c565b6040516101929190610cd9565b60405180910390f35b6101a3610a32565b6040516101b09190610cd9565b60405180910390f35b6101d360048036038101906101ce9190610d37565b610a3c565b005b6101dd610b34565b6040516101ea9190610ca5565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610e7a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030b9190610dcc565b602060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610eaf565b905090565b610359610b5a565b73ffffffffffffffffffffffffffffffffffffffff166103776109af565b73ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490610f28565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c90692668160405161043d9190610dcc565b60405180910390a150565b610450610b5a565b73ffffffffffffffffffffffffffffffffffffffff1661046e6109af565b73ffffffffffffffffffffffffffffffffffffffff16146104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb90610f28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610e7a565b60405180910390fd5b6000811161056357600080fd5b806004819055507fe13b87e357b6ab17c565a8042616084608de82978cf3794844a036a9b6abbb8b60045460405161059b9190610cd9565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90610e7a565b60405180910390fd5b60006004541161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610f94565b60405180910390fd5b600260015414156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90611000565b60405180910390fd5b600260018190555060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461075e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107559061106c565b60405180910390fd5b60045461076961021d565b10156107aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a1906110d8565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b81526004016108099291906110f8565b6020604051808303816000875af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c919061114d565b61088b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610882906111c6565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55336004546040516109169291906110f8565b60405180910390a160018081905550565b61092f610b5a565b73ffffffffffffffffffffffffffffffffffffffff1661094d6109af565b73ffffffffffffffffffffffffffffffffffffffff16146109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90610f28565b60405180910390fd5b6109ad6000610b62565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60045481565b6000600454905090565b610a44610b5a565b73ffffffffffffffffffffffffffffffffffffffff16610a626109af565b73ffffffffffffffffffffffffffffffffffffffff1614610ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaf90610f28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1f90611258565b60405180910390fd5b610b3181610b62565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c6b610c66610c6184610c26565b610c46565b610c26565b9050919050565b6000610c7d82610c50565b9050919050565b6000610c8f82610c72565b9050919050565b610c9f81610c84565b82525050565b6000602082019050610cba6000830184610c96565b92915050565b6000819050919050565b610cd381610cc0565b82525050565b6000602082019050610cee6000830184610cca565b92915050565b600080fd5b6000610d0482610c26565b9050919050565b610d1481610cf9565b8114610d1f57600080fd5b50565b600081359050610d3181610d0b565b92915050565b600060208284031215610d4d57610d4c610cf4565b5b6000610d5b84828501610d22565b91505092915050565b610d6d81610cc0565b8114610d7857600080fd5b50565b600081359050610d8a81610d64565b92915050565b600060208284031215610da657610da5610cf4565b5b6000610db484828501610d7b565b91505092915050565b610dc681610cf9565b82525050565b6000602082019050610de16000830184610dbd565b92915050565b60008115159050919050565b610dfc81610de7565b82525050565b6000602082019050610e176000830184610df3565b92915050565b600082825260208201905092915050565b7f4e6f20746f6b656e206164647265737320736574000000000000000000000000600082015250565b6000610e64601483610e1d565b9150610e6f82610e2e565b602082019050919050565b60006020820190508181036000830152610e9381610e57565b9050919050565b600081519050610ea981610d64565b92915050565b600060208284031215610ec557610ec4610cf4565b5b6000610ed384828501610e9a565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f12602083610e1d565b9150610f1d82610edc565b602082019050919050565b60006020820190508181036000830152610f4181610f05565b9050919050565b7f4e6f2063616c696d61626c6520616d6f756e7420736574000000000000000000600082015250565b6000610f7e601783610e1d565b9150610f8982610f48565b602082019050919050565b60006020820190508181036000830152610fad81610f71565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610fea601f83610e1d565b9150610ff582610fb4565b602082019050919050565b6000602082019050818103600083015261101981610fdd565b9050919050565b7f41697264726f702068617320616c7265616479206265656e20636c61696d6564600082015250565b6000611056602083610e1d565b915061106182611020565b602082019050919050565b6000602082019050818103600083015261108581611049565b9050919050565b7f536f7272792c206e6f20746f6b656e73206c6566742100000000000000000000600082015250565b60006110c2601683610e1d565b91506110cd8261108c565b602082019050919050565b600060208201905081810360008301526110f1816110b5565b9050919050565b600060408201905061110d6000830185610dbd565b61111a6020830184610cca565b9392505050565b61112a81610de7565b811461113557600080fd5b50565b60008151905061114781611121565b92915050565b60006020828403121561116357611162610cf4565b5b600061117184828501611138565b91505092915050565b7f5472616e7366657220776173206e6f74207375636365737366756c0000000000600082015250565b60006111b0601b83610e1d565b91506111bb8261117a565b602082019050919050565b600060208201905081810360008301526111df816111a3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611242602683610e1d565b915061124d826111e6565b604082019050919050565b6000602082019050818103600083015261127181611235565b905091905056fea26469706673582212203d3d1bc05067844954a828ab6f4c5e40c0dd3950ab5477fd41fd7b60297d49cb64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101415780639eea92cd1461015f578063a556f8461461017d578063c354bd6e1461019b578063f2fde38b146101b9578063fc0c546a146101d5576100b4565b806310fe9ae8146100b957806312065fe0146100d757806326a4e8d2146100f557806354df144d146101115780635b88349d1461012d578063715018a614610137575b600080fd5b6100c16101f3565b6040516100ce9190610ca5565b60405180910390f35b6100df61021d565b6040516100ec9190610cd9565b60405180910390f35b61010f600480360381019061010a9190610d37565b610351565b005b61012b60048036038101906101269190610d90565b610448565b005b6101356105a6565b005b61013f610927565b005b6101496109af565b6040516101569190610dcc565b60405180910390f35b6101676109d8565b6040516101749190610e02565b60405180910390f35b610185610a2c565b6040516101929190610cd9565b60405180910390f35b6101a3610a32565b6040516101b09190610cd9565b60405180910390f35b6101d360048036038101906101ce9190610d37565b610a3c565b005b6101dd610b34565b6040516101ea9190610ca5565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610e7a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030b9190610dcc565b602060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610eaf565b905090565b610359610b5a565b73ffffffffffffffffffffffffffffffffffffffff166103776109af565b73ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c490610f28565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c90692668160405161043d9190610dcc565b60405180910390a150565b610450610b5a565b73ffffffffffffffffffffffffffffffffffffffff1661046e6109af565b73ffffffffffffffffffffffffffffffffffffffff16146104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb90610f28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610e7a565b60405180910390fd5b6000811161056357600080fd5b806004819055507fe13b87e357b6ab17c565a8042616084608de82978cf3794844a036a9b6abbb8b60045460405161059b9190610cd9565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90610e7a565b60405180910390fd5b60006004541161067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610f94565b60405180910390fd5b600260015414156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90611000565b60405180910390fd5b600260018190555060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461075e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107559061106c565b60405180910390fd5b60045461076961021d565b10156107aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a1906110d8565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b81526004016108099291906110f8565b6020604051808303816000875af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c919061114d565b61088b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610882906111c6565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55336004546040516109169291906110f8565b60405180910390a160018081905550565b61092f610b5a565b73ffffffffffffffffffffffffffffffffffffffff1661094d6109af565b73ffffffffffffffffffffffffffffffffffffffff16146109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90610f28565b60405180910390fd5b6109ad6000610b62565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60045481565b6000600454905090565b610a44610b5a565b73ffffffffffffffffffffffffffffffffffffffff16610a626109af565b73ffffffffffffffffffffffffffffffffffffffff1614610ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaf90610f28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1f90611258565b60405180910390fd5b610b3181610b62565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c6b610c66610c6184610c26565b610c46565b610c26565b9050919050565b6000610c7d82610c50565b9050919050565b6000610c8f82610c72565b9050919050565b610c9f81610c84565b82525050565b6000602082019050610cba6000830184610c96565b92915050565b6000819050919050565b610cd381610cc0565b82525050565b6000602082019050610cee6000830184610cca565b92915050565b600080fd5b6000610d0482610c26565b9050919050565b610d1481610cf9565b8114610d1f57600080fd5b50565b600081359050610d3181610d0b565b92915050565b600060208284031215610d4d57610d4c610cf4565b5b6000610d5b84828501610d22565b91505092915050565b610d6d81610cc0565b8114610d7857600080fd5b50565b600081359050610d8a81610d64565b92915050565b600060208284031215610da657610da5610cf4565b5b6000610db484828501610d7b565b91505092915050565b610dc681610cf9565b82525050565b6000602082019050610de16000830184610dbd565b92915050565b60008115159050919050565b610dfc81610de7565b82525050565b6000602082019050610e176000830184610df3565b92915050565b600082825260208201905092915050565b7f4e6f20746f6b656e206164647265737320736574000000000000000000000000600082015250565b6000610e64601483610e1d565b9150610e6f82610e2e565b602082019050919050565b60006020820190508181036000830152610e9381610e57565b9050919050565b600081519050610ea981610d64565b92915050565b600060208284031215610ec557610ec4610cf4565b5b6000610ed384828501610e9a565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f12602083610e1d565b9150610f1d82610edc565b602082019050919050565b60006020820190508181036000830152610f4181610f05565b9050919050565b7f4e6f2063616c696d61626c6520616d6f756e7420736574000000000000000000600082015250565b6000610f7e601783610e1d565b9150610f8982610f48565b602082019050919050565b60006020820190508181036000830152610fad81610f71565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610fea601f83610e1d565b9150610ff582610fb4565b602082019050919050565b6000602082019050818103600083015261101981610fdd565b9050919050565b7f41697264726f702068617320616c7265616479206265656e20636c61696d6564600082015250565b6000611056602083610e1d565b915061106182611020565b602082019050919050565b6000602082019050818103600083015261108581611049565b9050919050565b7f536f7272792c206e6f20746f6b656e73206c6566742100000000000000000000600082015250565b60006110c2601683610e1d565b91506110cd8261108c565b602082019050919050565b600060208201905081810360008301526110f1816110b5565b9050919050565b600060408201905061110d6000830185610dbd565b61111a6020830184610cca565b9392505050565b61112a81610de7565b811461113557600080fd5b50565b60008151905061114781611121565b92915050565b60006020828403121561116357611162610cf4565b5b600061117184828501611138565b91505092915050565b7f5472616e7366657220776173206e6f74207375636365737366756c0000000000600082015250565b60006111b0601b83610e1d565b91506111bb8261117a565b602082019050919050565b600060208201905081810360008301526111df816111a3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611242602683610e1d565b915061124d826111e6565b604082019050919050565b6000602082019050818103600083015261127181611235565b905091905056fea26469706673582212203d3d1bc05067844954a828ab6f4c5e40c0dd3950ab5477fd41fd7b60297d49cb64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13429:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:10",
                "type": ""
              }
            ],
            "src": "7:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:10",
                "type": ""
              }
            ],
            "src": "139:60:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:10",
                "type": ""
              }
            ],
            "src": "205:142:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:10",
                "type": ""
              }
            ],
            "src": "353:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "559:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "569:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "613:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "582:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "569:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$768_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "539:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "549:9:10",
                "type": ""
              }
            ],
            "src": "485:140:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "710:80:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "727:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "777:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$768_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "732:44:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "732:51:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "720:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:64:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "720:64:10"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "698:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "705:3:10",
                "type": ""
              }
            ],
            "src": "631:159:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:138:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "918:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "930:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "926:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "918:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1012:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1025:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1021:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "954:57:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:85:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "954:85:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$768__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "880:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "892:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "903:4:10",
                "type": ""
              }
            ],
            "src": "796:250:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1097:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1107:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1118:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1107:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1079:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1089:7:10",
                "type": ""
              }
            ],
            "src": "1052:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1200:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1217:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1240:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1222:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1222:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1210:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1210:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1210:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1188:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1195:3:10",
                "type": ""
              }
            ],
            "src": "1135:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1357:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1367:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1379:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1375:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1367:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1447:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1460:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1471:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1456:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1456:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1403:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1403:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1329:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1341:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1352:4:10",
                "type": ""
              }
            ],
            "src": "1259:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1527:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1537:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1553:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1547:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1537:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1520:6:10",
                "type": ""
              }
            ],
            "src": "1487:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1657:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1674:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1677:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1667:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1568:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1797:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1800:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1790:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1790:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1691:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1859:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1869:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1898:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1880:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1869:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1841:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1851:7:10",
                "type": ""
              }
            ],
            "src": "1814:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1959:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2016:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2018:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1982:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2007:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1989:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1989:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1979:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1979:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1972:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1969:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1952:5:10",
                "type": ""
              }
            ],
            "src": "1916:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2096:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2106:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2128:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2115:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2106:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2171:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2144:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2144:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2144:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2074:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2082:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2090:5:10",
                "type": ""
              }
            ],
            "src": "2044:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2255:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2301:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2303:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2303:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2303:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2276:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2285:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2297:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2268:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2265:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2394:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2409:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2423:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2413:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2438:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2473:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2484:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2469:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2469:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2493:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2448:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2448:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2438:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2225:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2236:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2248:6:10",
                "type": ""
              }
            ],
            "src": "2189:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2567:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2624:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2633:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2636:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2626:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2626:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2626:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2590:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2615:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2597:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2597:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2587:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2587:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2577:63:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2560:5:10",
                "type": ""
              }
            ],
            "src": "2524:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2704:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2714:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2736:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2723:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2714:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2779:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2752:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2752:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2752:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2682:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2690:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2698:5:10",
                "type": ""
              }
            ],
            "src": "2652:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2863:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2909:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2911:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2911:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2911:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2884:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2893:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2880:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2880:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2905:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2876:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2873:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3002:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3017:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3031:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3021:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3046:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3081:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3092:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3077:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3077:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3101:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3056:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3056:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3046:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2833:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2844:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2856:6:10",
                "type": ""
              }
            ],
            "src": "2797:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3197:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3214:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3237:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3219:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3207:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3207:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3185:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3192:3:10",
                "type": ""
              }
            ],
            "src": "3132:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3354:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3364:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3376:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3387:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3372:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3364:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3444:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3457:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3468:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3453:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3453:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3400:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3400:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3400:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3326:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3338:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3349:4:10",
                "type": ""
              }
            ],
            "src": "3256:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3526:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3536:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3561:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3554:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3554:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3547:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3536:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3508:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3518:7:10",
                "type": ""
              }
            ],
            "src": "3484:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3639:50:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3656:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3676:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3661:14:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3661:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3649:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:34:10"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3627:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3634:3:10",
                "type": ""
              }
            ],
            "src": "3580:109:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3787:118:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3797:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3809:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3820:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3805:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3805:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3797:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3871:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3884:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3895:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3833:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:65:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3833:65:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3759:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3771:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3782:4:10",
                "type": ""
              }
            ],
            "src": "3695:210:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4007:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4024:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4029:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4017:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4017:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4017:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4045:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4064:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4069:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4060:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4060:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4045:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3979:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3984:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3995:11:10",
                "type": ""
              }
            ],
            "src": "3911:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4192:64:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4214:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4222:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4210:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4210:14:10"
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4226:22:10",
                        "type": "",
                        "value": "No token address set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4203:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4203:46:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4203:46:10"
                }
              ]
            },
            "name": "store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4184:6:10",
                "type": ""
              }
            ],
            "src": "4086:170:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4408:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4418:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4484:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:2:10",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4425:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4425:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4418:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4590:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                      "nodeType": "YulIdentifier",
                      "src": "4501:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4501:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4501:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4603:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4614:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4619:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4610:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4610:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4603:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4396:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4404:3:10",
                "type": ""
              }
            ],
            "src": "4262:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4805:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4815:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4827:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4838:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4823:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4823:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4815:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4862:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4873:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4858:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4858:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4881:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4887:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4877:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4877:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4851:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4851:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4851:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4907:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5041:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4915:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4907:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4785:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4800:4:10",
                "type": ""
              }
            ],
            "src": "4634:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5122:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5132:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5147:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5141:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5141:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5132:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5190:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5163:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5163:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5163:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5100:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5108:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5116:5:10",
                "type": ""
              }
            ],
            "src": "5059:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5285:274:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5331:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5333:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5333:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5333:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5306:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5315:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5302:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5302:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5327:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5298:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "5295:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5424:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5439:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5453:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5443:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5468:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5514:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5525:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5510:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5510:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5534:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5478:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5478:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5468:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5255:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5266:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5278:6:10",
                "type": ""
              }
            ],
            "src": "5208:351:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5671:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5693:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5701:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5689:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5689:14:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5705:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5682:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5682:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5682:58:10"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5663:6:10",
                "type": ""
              }
            ],
            "src": "5565:182:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5899:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5909:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5975:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5980:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5916:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5916:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5909:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6081:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "5992:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5992:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5992:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6094:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6105:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6110:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6101:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6101:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6094:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5887:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5895:3:10",
                "type": ""
              }
            ],
            "src": "5753:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6296:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6306:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6318:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6329:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6314:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6314:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6306:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6353:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6364:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6349:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6349:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6372:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6378:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6368:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6368:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6342:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6342:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6342:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6398:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6532:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6406:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6406:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6398:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6276:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6291:4:10",
                "type": ""
              }
            ],
            "src": "6125:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6656:67:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6678:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6686:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6674:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6674:14:10"
                      },
                      {
                        "hexValue": "4e6f2063616c696d61626c6520616d6f756e7420736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6690:25:10",
                        "type": "",
                        "value": "No calimable amount set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6667:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6667:49:10"
                }
              ]
            },
            "name": "store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6648:6:10",
                "type": ""
              }
            ],
            "src": "6550:173:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6885:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6951:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6956:2:10",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6892:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6892:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6885:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7057:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                      "nodeType": "YulIdentifier",
                      "src": "6968:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6968:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6968:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7070:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7081:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7086:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7077:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7077:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7070:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6863:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6871:3:10",
                "type": ""
              }
            ],
            "src": "6729:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7272:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7282:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7294:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7305:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7290:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7290:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7282:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7329:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7340:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7325:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7325:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7348:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7354:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7344:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7344:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7318:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7318:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7374:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7508:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7382:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7382:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7374:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7252:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7267:4:10",
                "type": ""
              }
            ],
            "src": "7101:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7632:75:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7654:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7662:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7650:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7650:14:10"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7666:33:10",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7643:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7643:57:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7643:57:10"
                }
              ]
            },
            "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7624:6:10",
                "type": ""
              }
            ],
            "src": "7526:181:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7859:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7869:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7935:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7940:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7876:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7876:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7869:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8041:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      "nodeType": "YulIdentifier",
                      "src": "7952:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7952:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7952:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8054:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8065:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8070:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8061:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8061:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8054:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7847:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7855:3:10",
                "type": ""
              }
            ],
            "src": "7713:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8256:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8266:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8278:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8289:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8274:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8274:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8266:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8313:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8324:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8309:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8309:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8332:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8338:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8328:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8328:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8302:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8302:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8302:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8358:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8492:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8366:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8366:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8358:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8236:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8251:4:10",
                "type": ""
              }
            ],
            "src": "8085:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8616:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8638:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8646:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8634:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8634:14:10"
                      },
                      {
                        "hexValue": "41697264726f702068617320616c7265616479206265656e20636c61696d6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8650:34:10",
                        "type": "",
                        "value": "Airdrop has already been claimed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8627:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8627:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8627:58:10"
                }
              ]
            },
            "name": "store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8608:6:10",
                "type": ""
              }
            ],
            "src": "8510:182:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8844:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8854:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8920:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8925:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8861:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8861:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8854:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9026:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                      "nodeType": "YulIdentifier",
                      "src": "8937:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8937:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8937:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9039:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9050:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9055:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9046:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9046:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9039:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8832:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8840:3:10",
                "type": ""
              }
            ],
            "src": "8698:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9241:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9251:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9263:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9274:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9259:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9259:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9251:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9298:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9309:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9294:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9294:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9317:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9323:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9313:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9313:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9287:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9287:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9287:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9343:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9477:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9351:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9351:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9343:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9221:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9236:4:10",
                "type": ""
              }
            ],
            "src": "9070:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9601:66:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9623:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9631:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9619:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9619:14:10"
                      },
                      {
                        "hexValue": "536f7272792c206e6f20746f6b656e73206c65667421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9635:24:10",
                        "type": "",
                        "value": "Sorry, no tokens left!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9612:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9612:48:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9612:48:10"
                }
              ]
            },
            "name": "store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9593:6:10",
                "type": ""
              }
            ],
            "src": "9495:172:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9819:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9829:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9895:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9900:2:10",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9836:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9836:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9829:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10001:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                      "nodeType": "YulIdentifier",
                      "src": "9912:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9912:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9912:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10014:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10025:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10030:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10021:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10021:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10014:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9807:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9815:3:10",
                "type": ""
              }
            ],
            "src": "9673:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10216:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10226:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10238:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10249:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10234:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10234:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10226:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10273:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10284:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10269:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10269:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10292:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10298:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10288:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10288:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10262:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10262:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10262:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10318:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10452:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10326:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10326:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10318:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10196:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10211:4:10",
                "type": ""
              }
            ],
            "src": "10045:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10596:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10606:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10618:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10629:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10614:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10614:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10606:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10686:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10699:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10710:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10695:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10695:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10642:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10642:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10642:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10767:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10780:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10791:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10776:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10776:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10723:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10723:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10723:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10560:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10572:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10580:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10591:4:10",
                "type": ""
              }
            ],
            "src": "10470:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10848:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10902:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10911:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10914:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10904:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10904:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10904:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10871:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10893:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10878:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10878:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10868:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10868:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10861:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10861:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10858:60:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10841:5:10",
                "type": ""
              }
            ],
            "src": "10808:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10990:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11000:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11015:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11009:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11009:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11000:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11055:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "11031:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11031:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11031:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10968:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10976:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10984:5:10",
                "type": ""
              }
            ],
            "src": "10930:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11147:271:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11193:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11195:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11195:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11195:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11168:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11177:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11164:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11164:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11189:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11160:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11160:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11157:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11286:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11301:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11315:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11305:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11330:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11373:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11384:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11369:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11369:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11393:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11340:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11340:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11330:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11117:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11128:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11140:6:10",
                "type": ""
              }
            ],
            "src": "11073:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11530:71:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11552:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11560:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11548:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11548:14:10"
                      },
                      {
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11564:29:10",
                        "type": "",
                        "value": "Transfer was not successful"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11541:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11541:53:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11541:53:10"
                }
              ]
            },
            "name": "store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11522:6:10",
                "type": ""
              }
            ],
            "src": "11424:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11753:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11763:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11829:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11834:2:10",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11770:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11770:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11763:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11935:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                      "nodeType": "YulIdentifier",
                      "src": "11846:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11846:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11846:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11948:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11959:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11964:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11955:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11955:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11948:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11741:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11749:3:10",
                "type": ""
              }
            ],
            "src": "11607:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12150:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12160:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12172:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12183:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12168:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12160:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12207:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12218:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12203:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12203:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12226:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12232:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12222:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12222:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12196:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12196:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12196:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12252:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12386:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12260:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12260:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12252:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12130:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12145:4:10",
                "type": ""
              }
            ],
            "src": "11979:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12510:119:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12532:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12540:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12528:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12528:14:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12544:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12521:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12521:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12521:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12600:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12608:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12596:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12596:15:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12613:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12589:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12589:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12589:33:10"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12502:6:10",
                "type": ""
              }
            ],
            "src": "12404:225:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12781:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12791:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12857:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12862:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12798:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12798:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12791:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12963:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12874:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12874:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12874:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12976:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12987:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12992:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12983:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12983:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12976:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12769:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12777:3:10",
                "type": ""
              }
            ],
            "src": "12635:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13178:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13188:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13200:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13211:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13196:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13196:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13188:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13235:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13246:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13231:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13231:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13254:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13260:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13250:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13250:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13224:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13224:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13224:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13280:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13414:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13288:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13288:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13280:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13158:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13173:4:10",
                "type": ""
              }
            ],
            "src": "13007:419:10"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$768_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$768_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$768__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943(memPtr) {\n\n        mstore(add(memPtr, 0), \"No token address set\")\n\n    }\n\n    function abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76(memPtr) {\n\n        mstore(add(memPtr, 0), \"No calimable amount set\")\n\n    }\n\n    function abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Airdrop has already been claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sorry, no tokens left!\")\n\n    }\n\n    function abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer was not successful\")\n\n    }\n\n    function abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "572:4292:7:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;572:4292:7;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;572:4292:7:-;;;;;;;",
  "deployedSourceMap": "572:4292:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3796:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4051:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2473:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2820:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3119:533;;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4560:95:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1790:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1276:19:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3796:85;3844:6;3869:5;;;;;;;;;;;3862:12;;3796:85;:::o;4051:116::-;4107:4;2028:1;2004:27;;:5;;;;;;;;;;;:27;;;;1996:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4130:5:::1;;;;;;;;;;;:15;;;4154:4;4130:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4123:37;;4051:116:::0;:::o;2473:161::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2568:13:7::1;2553:5;;:29;;;;;;;;;;;;;;;;;;2597:30;2613:13;2597:30;;;;;;:::i;:::-;;;;;;;;2473:161:::0;:::o;2820:198::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2028:1:7::1;2004:27;;:5;;;;;;;;;;;:27;;;;1996:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2924:1:::2;2914:7;:11;2906:20;;;::::0;::::2;;2954:7;2936:15;:25;;;;2976:35;2995:15;;2976:35;;;;;;:::i;:::-;;;;;;;;2820:198:::0;:::o;3119:533::-;2028:1;2004:27;;:5;;;;;;;;;;;:27;;;;1996:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2250:1:::1;2232:15;;:19;2224:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:1::2;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3340:5:7::3;3317:28;;:7;:19;3325:10;3317:19;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;3309:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3416:15;;3400:12;:10;:12::i;:::-;:31;;3392:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3476:5;;;;;;;;;;;:14;;;3491:10;3503:15;;3476:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3468:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3583:4;3561:7;:19;3569:10;3561:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3602:43;3617:10;3629:15;;3602:43;;;;;;;:::i;:::-;;;;;;;;1701:1:1::2;2628:7:::0;:22:::2;;;;3119:533:7:o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;4560:95:7:-;4607:4;4629:7;:19;4637:10;4629:19;;;;;;;;;;;;;;;;;;;;;;;;;4622:26;;4560:95;:::o;1790:30::-;;;;:::o;4293:96::-;4344:4;4367:15;;4360:22;;4293:96;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1276:19:7:-;;;;;;;;;;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:222::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1403:71;1471:1;1460:9;1456:17;1447:6;1403:71;:::i;:::-;1259:222;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:96;1851:7;1880:24;1898:5;1880:24;:::i;:::-;1869:35;;1814:96;;;:::o;1916:122::-;1989:24;2007:5;1989:24;:::i;:::-;1982:5;1979:35;1969:63;;2028:1;2025;2018:12;1969:63;1916:122;:::o;2044:139::-;2090:5;2128:6;2115:20;2106:29;;2144:33;2171:5;2144:33;:::i;:::-;2044:139;;;;:::o;2189:329::-;2248:6;2297:2;2285:9;2276:7;2272:23;2268:32;2265:119;;;2303:79;;:::i;:::-;2265:119;2423:1;2448:53;2493:7;2484:6;2473:9;2469:22;2448:53;:::i;:::-;2438:63;;2394:117;2189:329;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:90::-;3518:7;3561:5;3554:13;3547:21;3536:32;;3484:90;;;:::o;3580:109::-;3661:21;3676:5;3661:21;:::i;:::-;3656:3;3649:34;3580:109;;:::o;3695:210::-;3782:4;3820:2;3809:9;3805:18;3797:26;;3833:65;3895:1;3884:9;3880:17;3871:6;3833:65;:::i;:::-;3695:210;;;;:::o;3911:169::-;3995:11;4029:6;4024:3;4017:19;4069:4;4064:3;4060:14;4045:29;;3911:169;;;;:::o;4086:170::-;4226:22;4222:1;4214:6;4210:14;4203:46;4086:170;:::o;4262:366::-;4404:3;4425:67;4489:2;4484:3;4425:67;:::i;:::-;4418:74;;4501:93;4590:3;4501:93;:::i;:::-;4619:2;4614:3;4610:12;4603:19;;4262:366;;;:::o;4634:419::-;4800:4;4838:2;4827:9;4823:18;4815:26;;4887:9;4881:4;4877:20;4873:1;4862:9;4858:17;4851:47;4915:131;5041:4;4915:131;:::i;:::-;4907:139;;4634:419;;;:::o;5059:143::-;5116:5;5147:6;5141:13;5132:22;;5163:33;5190:5;5163:33;:::i;:::-;5059:143;;;;:::o;5208:351::-;5278:6;5327:2;5315:9;5306:7;5302:23;5298:32;5295:119;;;5333:79;;:::i;:::-;5295:119;5453:1;5478:64;5534:7;5525:6;5514:9;5510:22;5478:64;:::i;:::-;5468:74;;5424:128;5208:351;;;;:::o;5565:182::-;5705:34;5701:1;5693:6;5689:14;5682:58;5565:182;:::o;5753:366::-;5895:3;5916:67;5980:2;5975:3;5916:67;:::i;:::-;5909:74;;5992:93;6081:3;5992:93;:::i;:::-;6110:2;6105:3;6101:12;6094:19;;5753:366;;;:::o;6125:419::-;6291:4;6329:2;6318:9;6314:18;6306:26;;6378:9;6372:4;6368:20;6364:1;6353:9;6349:17;6342:47;6406:131;6532:4;6406:131;:::i;:::-;6398:139;;6125:419;;;:::o;6550:173::-;6690:25;6686:1;6678:6;6674:14;6667:49;6550:173;:::o;6729:366::-;6871:3;6892:67;6956:2;6951:3;6892:67;:::i;:::-;6885:74;;6968:93;7057:3;6968:93;:::i;:::-;7086:2;7081:3;7077:12;7070:19;;6729:366;;;:::o;7101:419::-;7267:4;7305:2;7294:9;7290:18;7282:26;;7354:9;7348:4;7344:20;7340:1;7329:9;7325:17;7318:47;7382:131;7508:4;7382:131;:::i;:::-;7374:139;;7101:419;;;:::o;7526:181::-;7666:33;7662:1;7654:6;7650:14;7643:57;7526:181;:::o;7713:366::-;7855:3;7876:67;7940:2;7935:3;7876:67;:::i;:::-;7869:74;;7952:93;8041:3;7952:93;:::i;:::-;8070:2;8065:3;8061:12;8054:19;;7713:366;;;:::o;8085:419::-;8251:4;8289:2;8278:9;8274:18;8266:26;;8338:9;8332:4;8328:20;8324:1;8313:9;8309:17;8302:47;8366:131;8492:4;8366:131;:::i;:::-;8358:139;;8085:419;;;:::o;8510:182::-;8650:34;8646:1;8638:6;8634:14;8627:58;8510:182;:::o;8698:366::-;8840:3;8861:67;8925:2;8920:3;8861:67;:::i;:::-;8854:74;;8937:93;9026:3;8937:93;:::i;:::-;9055:2;9050:3;9046:12;9039:19;;8698:366;;;:::o;9070:419::-;9236:4;9274:2;9263:9;9259:18;9251:26;;9323:9;9317:4;9313:20;9309:1;9298:9;9294:17;9287:47;9351:131;9477:4;9351:131;:::i;:::-;9343:139;;9070:419;;;:::o;9495:172::-;9635:24;9631:1;9623:6;9619:14;9612:48;9495:172;:::o;9673:366::-;9815:3;9836:67;9900:2;9895:3;9836:67;:::i;:::-;9829:74;;9912:93;10001:3;9912:93;:::i;:::-;10030:2;10025:3;10021:12;10014:19;;9673:366;;;:::o;10045:419::-;10211:4;10249:2;10238:9;10234:18;10226:26;;10298:9;10292:4;10288:20;10284:1;10273:9;10269:17;10262:47;10326:131;10452:4;10326:131;:::i;:::-;10318:139;;10045:419;;;:::o;10470:332::-;10591:4;10629:2;10618:9;10614:18;10606:26;;10642:71;10710:1;10699:9;10695:17;10686:6;10642:71;:::i;:::-;10723:72;10791:2;10780:9;10776:18;10767:6;10723:72;:::i;:::-;10470:332;;;;;:::o;10808:116::-;10878:21;10893:5;10878:21;:::i;:::-;10871:5;10868:32;10858:60;;10914:1;10911;10904:12;10858:60;10808:116;:::o;10930:137::-;10984:5;11015:6;11009:13;11000:22;;11031:30;11055:5;11031:30;:::i;:::-;10930:137;;;;:::o;11073:345::-;11140:6;11189:2;11177:9;11168:7;11164:23;11160:32;11157:119;;;11195:79;;:::i;:::-;11157:119;11315:1;11340:61;11393:7;11384:6;11373:9;11369:22;11340:61;:::i;:::-;11330:71;;11286:125;11073:345;;;;:::o;11424:177::-;11564:29;11560:1;11552:6;11548:14;11541:53;11424:177;:::o;11607:366::-;11749:3;11770:67;11834:2;11829:3;11770:67;:::i;:::-;11763:74;;11846:93;11935:3;11846:93;:::i;:::-;11964:2;11959:3;11955:12;11948:19;;11607:366;;;:::o;11979:419::-;12145:4;12183:2;12172:9;12168:18;12160:26;;12232:9;12226:4;12222:20;12218:1;12207:9;12203:17;12196:47;12260:131;12386:4;12260:131;:::i;:::-;12252:139;;11979:419;;;:::o;12404:225::-;12544:34;12540:1;12532:6;12528:14;12521:58;12613:8;12608:2;12600:6;12596:15;12589:33;12404:225;:::o;12635:366::-;12777:3;12798:67;12862:2;12857:3;12798:67;:::i;:::-;12791:74;;12874:93;12963:3;12874:93;:::i;:::-;12992:2;12987:3;12983:12;12976:19;;12635:366;;;:::o;13007:419::-;13173:4;13211:2;13200:9;13196:18;13188:26;;13260:9;13254:4;13250:20;13246:1;13235:9;13231:17;13224:47;13288:131;13414:4;13288:131;:::i;:::-;13280:139;;13007:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title Airdrop Contract\n/// @author ethSplit\n/// @notice Users can use this contract to claim tokens for free once per address\n/// @dev The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens.\ncontract Airdrop is Ownable, ReentrancyGuard{\n\n    /// @notice Emitted when TokenAddress is being set\n    /// @param setTokenAddress ERC20 TokenAddress\n    event TokenAddressSet(address setTokenAddress);\n\n    /// @notice Emitted when ClaimableAmount is being set\n    /// @param claimableAmount amount to claim per user\n    event ClaimableAmountSet(uint claimableAmount);\n\n    /// @notice Emitted when Airdrop is being claimed\n    /// @param caller user that claimed the airdrop\n    /// @param amount that has been claimed\n    event AirdropClaimed(address caller, uint amount);\n\n    /// @notice used to store the token address\n    /// @dev imported IERC20.sol from openzeppelin to store token address\n    IERC20 public token;\n\n    /// @notice Mapping used to check if users claimed already\n    /// @dev sets the user that claims to true\n    mapping (address => bool) claimed;\n\n    /***\n    todo Whitelist users\n    /// @notice Checks if users are whitelisted\n    /// @dev owner can set an address to true, if it is eligible for the airdrop\n    mapping (address => bool) public whitelist;\n    ***/\n\n    /// @notice Amount of tokens to be claimed\n    /// @dev uint that stores the claimable amount of tokens per user\n    uint256 public claimableAmount;\n\n    ///@notice checks if token address is set\n    /// @dev function that have this modifier set, can only be run if token address is set\n    modifier isTokenSet() {\n        require(token != IERC20(address(0)), \"No token address set\");\n        _;\n    }\n\n    ///@notice checks if claimable amount is set\n    /// @dev claimable amount has to be higher than 0\n    modifier claimableAmountSet () {\n        require(claimableAmount > 0, \"No calimable amount set\");\n        _;\n    }\n\n    /// @notice sets the tokenaddress the contract will use\n    /// @dev adds the ERC20 Token address\n    /// @param _tokenAddress for the Token that should be claimable\n    function setTokenAddress (address _tokenAddress) external onlyOwner() {\n        token = IERC20(_tokenAddress);\n        emit TokenAddressSet(_tokenAddress);\n    }\n\n    /// @notice sets the amount of tokens that can be claimed per user\n    /// @dev pass normal decimal number\n    /// @param _amount the amount of tokens that should be claimable\n    function setClaimableAmount (uint _amount) external onlyOwner() isTokenSet(){\n        require(_amount > 0);\n        claimableAmount = _amount;\n        emit ClaimableAmountSet(claimableAmount);\n    }\n\n    /// @notice lets user claim the airdrop\n    /// @dev check that a user can claim only once\n    function claimAirdrop () external isTokenSet() claimableAmountSet() nonReentrant {\n        /**todo only whitelisted users\n        require(whitelist[msg.sender] == true);\n        **/\n        require(claimed[msg.sender] == false, \"Airdrop has already been claimed\");\n        require(getBalance() >= claimableAmount, \"Sorry, no tokens left!\");\n        require(token.transfer(msg.sender, claimableAmount), \"Transfer was not successful\");\n        claimed[msg.sender] = true;\n        emit AirdropClaimed(msg.sender, claimableAmount);\n    }\n\n    /// @notice Get the token address\n    /// @dev without token address claim is not possible\n    /// @return return erc20 token address\n    function getTokenAddress () public view returns(IERC20) {\n        return token;\n    }\n    \n    /// @notice returns the balance of this contract\n    /// @dev returns token balance\n    /// @return uint that stands for the token balance of this contract\n    function getBalance () public view isTokenSet() returns(uint) {\n        return token.balanceOf(address(this));\n    }\n\n    /// @notice get the available amount that can be claimed\n    /// @dev \n    /// @return return uint claimable amount\n    function getClaimableAmount () public view returns(uint) {\n        return claimableAmount;\n    }\n\n    /// @notice used to check if a user claimed airdrop\n    /// @dev readig data from mapping claimed\n    /// @return bool false if airdrop has not been claimed yet\n    function airdropClaimed () public view returns(bool){\n        return claimed[msg.sender];\n    }\n\n     /***\n    todo Add whitelist functionality\n    function addToWhiteList (address _user) onlyOwner() {\n        require (whitelist[_user] !=== false);\n        whitelist[_user] == true;\n    }\n    ***/\n    \n}",
  "sourcePath": "/mnt/c/Users/abesl/Coding/blockchain-developer-bootcamp-final-project/contracts/Airdrop.sol",
  "ast": {
    "absolutePath": "project:/contracts/Airdrop.sol",
    "exportedSymbols": {
      "Airdrop": [
        1341
      ],
      "Context": [
        815
      ],
      "IERC20": [
        768
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeMath": [
        1127
      ]
    },
    "id": 1342,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1129,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1130,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 105,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1131,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 769,
        "src": "110:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1132,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 1128,
        "src": "167:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 145,
        "src": "225:62:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1135,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "592:7:7"
            },
            "id": 1136,
            "nodeType": "InheritanceSpecifier",
            "src": "592:7:7"
          },
          {
            "baseName": {
              "id": 1137,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "601:15:7"
            },
            "id": 1138,
            "nodeType": "InheritanceSpecifier",
            "src": "601:15:7"
          }
        ],
        "canonicalName": "Airdrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1134,
          "nodeType": "StructuredDocumentation",
          "src": "289:283:7",
          "text": "@title Airdrop Contract\n @author ethSplit\n @notice Users can use this contract to claim tokens for free once per address\n @dev The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens."
        },
        "fullyImplemented": true,
        "id": 1341,
        "linearizedBaseContracts": [
          1341,
          144,
          104,
          815
        ],
        "name": "Airdrop",
        "nameLocation": "581:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "623:100:7",
              "text": "@notice Emitted when TokenAddress is being set\n @param setTokenAddress ERC20 TokenAddress"
            },
            "id": 1143,
            "name": "TokenAddressSet",
            "nameLocation": "734:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "setTokenAddress",
                  "nameLocation": "758:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "750:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:25:7"
            },
            "src": "728:47:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1144,
              "nodeType": "StructuredDocumentation",
              "src": "781:109:7",
              "text": "@notice Emitted when ClaimableAmount is being set\n @param claimableAmount amount to claim per user"
            },
            "id": 1148,
            "name": "ClaimableAmountSet",
            "nameLocation": "901:18:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimableAmount",
                  "nameLocation": "925:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "920:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:22:7"
            },
            "src": "895:47:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "948:145:7",
              "text": "@notice Emitted when Airdrop is being claimed\n @param caller user that claimed the airdrop\n @param amount that has been claimed"
            },
            "id": 1155,
            "name": "AirdropClaimed",
            "nameLocation": "1104:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1127:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "1119:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1140:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "1135:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:29:7"
            },
            "src": "1098:50:7"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1156,
              "nodeType": "StructuredDocumentation",
              "src": "1154:117:7",
              "text": "@notice used to store the token address\n @dev imported IERC20.sol from openzeppelin to store token address"
            },
            "functionSelector": "fc0c546a",
            "id": 1159,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1290:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1341,
            "src": "1276:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$768",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1158,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1157,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 768,
                "src": "1276:6:7"
              },
              "referencedDeclaration": 768,
              "src": "1276:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$768",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1160,
              "nodeType": "StructuredDocumentation",
              "src": "1302:105:7",
              "text": "@notice Mapping used to check if users claimed already\n @dev sets the user that claims to true"
            },
            "id": 1164,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1438:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1341,
            "src": "1412:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1163,
              "keyType": {
                "id": 1161,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1421:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1412:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1162,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1432:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "1673:112:7",
              "text": "@notice Amount of tokens to be claimed\n @dev uint that stores the claimable amount of tokens per user"
            },
            "functionSelector": "a556f846",
            "id": 1167,
            "mutability": "mutable",
            "name": "claimableAmount",
            "nameLocation": "1805:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1341,
            "src": "1790:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1166,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1790:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1183,
              "nodeType": "Block",
              "src": "1986:88:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1171,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1159,
                          "src": "2004:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2028:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2020:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1173,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2020:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2020:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1172,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2013:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2013:18:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2004:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2033:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        },
                        "value": "No token address set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        }
                      ],
                      "id": 1170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1996:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:60:7"
                },
                {
                  "id": 1182,
                  "nodeType": "PlaceholderStatement",
                  "src": "2066:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1168,
              "nodeType": "StructuredDocumentation",
              "src": "1827:132:7",
              "text": "@notice checks if token address is set\n @dev function that have this modifier set, can only be run if token address is set"
            },
            "id": 1184,
            "name": "isTokenSet",
            "nameLocation": "1973:10:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:2:7"
            },
            "src": "1964:110:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "2214:83:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1188,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "2232:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2250:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2232:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2063616c696d61626c6520616d6f756e7420736574",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2253:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        },
                        "value": "No calimable amount set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        }
                      ],
                      "id": 1187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2224:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:55:7"
                },
                {
                  "id": 1194,
                  "nodeType": "PlaceholderStatement",
                  "src": "2289:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1185,
              "nodeType": "StructuredDocumentation",
              "src": "2080:98:7",
              "text": "@notice checks if claimable amount is set\n @dev claimable amount has to be higher than 0"
            },
            "id": 1196,
            "name": "claimableAmountSet",
            "nameLocation": "2192:18:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:7"
            },
            "src": "2183:114:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1214,
              "nodeType": "Block",
              "src": "2543:91:7",
              "statements": [
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1204,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1159,
                      "src": "2553:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1206,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "2568:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1205,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2561:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2561:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2553:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:29:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1211,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "2613:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1210,
                      "name": "TokenAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "2597:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "EmitStatement",
                  "src": "2592:35:7"
                }
              ]
            },
            "documentation": {
              "id": 1197,
              "nodeType": "StructuredDocumentation",
              "src": "2303:165:7",
              "text": "@notice sets the tokenaddress the contract will use\n @dev adds the ERC20 Token address\n @param _tokenAddress for the Token that should be claimable"
            },
            "functionSelector": "26a4e8d2",
            "id": 1215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1201,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2531:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2531:11:7"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "2482:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2507:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1215,
                  "src": "2499:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2498:23:7"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2543:0:7"
            },
            "scope": 1341,
            "src": "2473:161:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "2896:122:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1226,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1218,
                          "src": "2914:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2924:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2914:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2906:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:20:7"
                },
                {
                  "expression": {
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1231,
                      "name": "claimableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "2936:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1232,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "2954:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2936:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1234,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:25:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1236,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "2995:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1235,
                      "name": "ClaimableAmountSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "2976:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2976:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "EmitStatement",
                  "src": "2971:40:7"
                }
              ]
            },
            "documentation": {
              "id": 1216,
              "nodeType": "StructuredDocumentation",
              "src": "2640:175:7",
              "text": "@notice sets the amount of tokens that can be claimed per user\n @dev pass normal decimal number\n @param _amount the amount of tokens that should be claimable"
            },
            "functionSelector": "54df144d",
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1220,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2872:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2872:11:7"
              },
              {
                "arguments": [],
                "id": 1223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1222,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1184,
                  "src": "2884:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2884:12:7"
              }
            ],
            "name": "setClaimableAmount",
            "nameLocation": "2829:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2854:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "2849:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2848:14:7"
            },
            "returnParameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2896:0:7"
            },
            "scope": 1341,
            "src": "2820:198:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1291,
              "nodeType": "Block",
              "src": "3200:452:7",
              "statements": [
                {
                  "documentation": "todo only whitelisted users\nrequire(whitelist[msg.sender] == true);*",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1251,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "3317:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1254,
                          "indexExpression": {
                            "expression": {
                              "id": 1252,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3325:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3325:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3317:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3340:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3317:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f702068617320616c7265616479206265656e20636c61696d6564",
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3347:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        },
                        "value": "Airdrop has already been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        }
                      ],
                      "id": 1250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3309:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1261,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "3400:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3400:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1263,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "3416:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3400:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c206e6f20746f6b656e73206c65667421",
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3433:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        },
                        "value": "Sorry, no tokens left!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        }
                      ],
                      "id": 1260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3392:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:66:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1271,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3491:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3491:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1273,
                            "name": "claimableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "3503:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1269,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1159,
                            "src": "3476:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$768",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 717,
                          "src": "3476:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3476:43:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        },
                        "value": "Transfer was not successful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        }
                      ],
                      "id": 1268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3468:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:83:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:83:7"
                },
                {
                  "expression": {
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1278,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "3561:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1281,
                      "indexExpression": {
                        "expression": {
                          "id": 1279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3569:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3569:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3561:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3583:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3561:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "3561:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3617:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3617:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1288,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "3629:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1285,
                      "name": "AirdropClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "3602:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3602:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1290,
                  "nodeType": "EmitStatement",
                  "src": "3597:48:7"
                }
              ]
            },
            "documentation": {
              "id": 1241,
              "nodeType": "StructuredDocumentation",
              "src": "3024:90:7",
              "text": "@notice lets user claim the airdrop\n @dev check that a user can claim only once"
            },
            "functionSelector": "5b88349d",
            "id": 1292,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1244,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1243,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1184,
                  "src": "3153:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3153:12:7"
              },
              {
                "arguments": [],
                "id": 1246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1245,
                  "name": "claimableAmountSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1196,
                  "src": "3166:18:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3166:20:7"
              },
              {
                "id": 1248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1247,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "3187:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:12:7"
              }
            ],
            "name": "claimAirdrop",
            "nameLocation": "3128:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3141:2:7"
            },
            "returnParameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3200:0:7"
            },
            "scope": 1341,
            "src": "3119:533:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1301,
              "nodeType": "Block",
              "src": "3852:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 1299,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1159,
                    "src": "3869:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 1298,
                  "id": 1300,
                  "nodeType": "Return",
                  "src": "3862:12:7"
                }
              ]
            },
            "documentation": {
              "id": 1293,
              "nodeType": "StructuredDocumentation",
              "src": "3658:133:7",
              "text": "@notice Get the token address\n @dev without token address claim is not possible\n @return return erc20 token address"
            },
            "functionSelector": "10fe9ae8",
            "id": 1302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "3805:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3821:2:7"
            },
            "returnParameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1302,
                  "src": "3844:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$768",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1296,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1295,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 768,
                      "src": "3844:6:7"
                    },
                    "referencedDeclaration": 768,
                    "src": "3844:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3843:8:7"
            },
            "scope": 1341,
            "src": "3796:85:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "4113:54:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4154:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Airdrop_$1341",
                              "typeString": "contract Airdrop"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Airdrop_$1341",
                              "typeString": "contract Airdrop"
                            }
                          ],
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4146:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4146:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4146:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1310,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "4130:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 707,
                      "src": "4130:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1309,
                  "id": 1317,
                  "nodeType": "Return",
                  "src": "4123:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1303,
              "nodeType": "StructuredDocumentation",
              "src": "3891:155:7",
              "text": "@notice returns the balance of this contract\n @dev returns token balance\n @return uint that stands for the token balance of this contract"
            },
            "functionSelector": "12065fe0",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1305,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1184,
                  "src": "4086:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4086:12:7"
              }
            ],
            "name": "getBalance",
            "nameLocation": "4060:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4071:2:7"
            },
            "returnParameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "4107:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:6:7"
            },
            "scope": 1341,
            "src": "4051:116:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1327,
              "nodeType": "Block",
              "src": "4350:39:7",
              "statements": [
                {
                  "expression": {
                    "id": 1325,
                    "name": "claimableAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1167,
                    "src": "4367:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1324,
                  "id": 1326,
                  "nodeType": "Return",
                  "src": "4360:22:7"
                }
              ]
            },
            "documentation": {
              "id": 1320,
              "nodeType": "StructuredDocumentation",
              "src": "4173:115:7",
              "text": "@notice get the available amount that can be claimed\n @dev \n @return return uint claimable amount"
            },
            "functionSelector": "c354bd6e",
            "id": 1328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableAmount",
            "nameLocation": "4302:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:2:7"
            },
            "returnParameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1328,
                  "src": "4344:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4344:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4343:6:7"
            },
            "scope": 1341,
            "src": "4293:96:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1339,
              "nodeType": "Block",
              "src": "4612:43:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1334,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1164,
                      "src": "4629:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1337,
                    "indexExpression": {
                      "expression": {
                        "id": 1335,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4637:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4637:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4629:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1333,
                  "id": 1338,
                  "nodeType": "Return",
                  "src": "4622:26:7"
                }
              ]
            },
            "documentation": {
              "id": 1329,
              "nodeType": "StructuredDocumentation",
              "src": "4395:160:7",
              "text": "@notice used to check if a user claimed airdrop\n @dev readig data from mapping claimed\n @return bool false if airdrop has not been claimed yet"
            },
            "functionSelector": "9eea92cd",
            "id": 1340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "airdropClaimed",
            "nameLocation": "4569:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4584:2:7"
            },
            "returnParameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "4607:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4606:6:7"
            },
            "scope": 1341,
            "src": "4560:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1342,
        "src": "572:4292:7",
        "usedErrors": []
      }
    ],
    "src": "32:4832:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Airdrop.sol",
    "exportedSymbols": {
      "Airdrop": [
        1341
      ],
      "Context": [
        815
      ],
      "IERC20": [
        768
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeMath": [
        1127
      ]
    },
    "id": 1342,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1129,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1130,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 105,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1131,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 769,
        "src": "110:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1132,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 1128,
        "src": "167:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1342,
        "sourceUnit": 145,
        "src": "225:62:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1135,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "592:7:7"
            },
            "id": 1136,
            "nodeType": "InheritanceSpecifier",
            "src": "592:7:7"
          },
          {
            "baseName": {
              "id": 1137,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "601:15:7"
            },
            "id": 1138,
            "nodeType": "InheritanceSpecifier",
            "src": "601:15:7"
          }
        ],
        "canonicalName": "Airdrop",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1134,
          "nodeType": "StructuredDocumentation",
          "src": "289:283:7",
          "text": "@title Airdrop Contract\n @author ethSplit\n @notice Users can use this contract to claim tokens for free once per address\n @dev The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens."
        },
        "fullyImplemented": true,
        "id": 1341,
        "linearizedBaseContracts": [
          1341,
          144,
          104,
          815
        ],
        "name": "Airdrop",
        "nameLocation": "581:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "623:100:7",
              "text": "@notice Emitted when TokenAddress is being set\n @param setTokenAddress ERC20 TokenAddress"
            },
            "id": 1143,
            "name": "TokenAddressSet",
            "nameLocation": "734:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "setTokenAddress",
                  "nameLocation": "758:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1143,
                  "src": "750:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:25:7"
            },
            "src": "728:47:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1144,
              "nodeType": "StructuredDocumentation",
              "src": "781:109:7",
              "text": "@notice Emitted when ClaimableAmount is being set\n @param claimableAmount amount to claim per user"
            },
            "id": 1148,
            "name": "ClaimableAmountSet",
            "nameLocation": "901:18:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimableAmount",
                  "nameLocation": "925:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "920:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:22:7"
            },
            "src": "895:47:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "948:145:7",
              "text": "@notice Emitted when Airdrop is being claimed\n @param caller user that claimed the airdrop\n @param amount that has been claimed"
            },
            "id": 1155,
            "name": "AirdropClaimed",
            "nameLocation": "1104:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "1127:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "1119:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1140:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "1135:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:29:7"
            },
            "src": "1098:50:7"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1156,
              "nodeType": "StructuredDocumentation",
              "src": "1154:117:7",
              "text": "@notice used to store the token address\n @dev imported IERC20.sol from openzeppelin to store token address"
            },
            "functionSelector": "fc0c546a",
            "id": 1159,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1290:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1341,
            "src": "1276:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$768",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1158,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1157,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 768,
                "src": "1276:6:7"
              },
              "referencedDeclaration": 768,
              "src": "1276:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$768",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1160,
              "nodeType": "StructuredDocumentation",
              "src": "1302:105:7",
              "text": "@notice Mapping used to check if users claimed already\n @dev sets the user that claims to true"
            },
            "id": 1164,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1438:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1341,
            "src": "1412:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1163,
              "keyType": {
                "id": 1161,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1421:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1412:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1162,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1432:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "1673:112:7",
              "text": "@notice Amount of tokens to be claimed\n @dev uint that stores the claimable amount of tokens per user"
            },
            "functionSelector": "a556f846",
            "id": 1167,
            "mutability": "mutable",
            "name": "claimableAmount",
            "nameLocation": "1805:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1341,
            "src": "1790:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1166,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1790:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1183,
              "nodeType": "Block",
              "src": "1986:88:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1171,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1159,
                          "src": "2004:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2028:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2020:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1173,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2020:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2020:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1172,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2013:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2013:18:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2004:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2033:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        },
                        "value": "No token address set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        }
                      ],
                      "id": 1170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1996:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:60:7"
                },
                {
                  "id": 1182,
                  "nodeType": "PlaceholderStatement",
                  "src": "2066:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1168,
              "nodeType": "StructuredDocumentation",
              "src": "1827:132:7",
              "text": "@notice checks if token address is set\n @dev function that have this modifier set, can only be run if token address is set"
            },
            "id": 1184,
            "name": "isTokenSet",
            "nameLocation": "1973:10:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:2:7"
            },
            "src": "1964:110:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "2214:83:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1188,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "2232:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2250:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2232:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2063616c696d61626c6520616d6f756e7420736574",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2253:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        },
                        "value": "No calimable amount set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_743a3ce5dab221533f2e4e39ed4e53937759f09e477d7460c37dbb6c6891ee76",
                          "typeString": "literal_string \"No calimable amount set\""
                        }
                      ],
                      "id": 1187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2224:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:55:7"
                },
                {
                  "id": 1194,
                  "nodeType": "PlaceholderStatement",
                  "src": "2289:1:7"
                }
              ]
            },
            "documentation": {
              "id": 1185,
              "nodeType": "StructuredDocumentation",
              "src": "2080:98:7",
              "text": "@notice checks if claimable amount is set\n @dev claimable amount has to be higher than 0"
            },
            "id": 1196,
            "name": "claimableAmountSet",
            "nameLocation": "2192:18:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:7"
            },
            "src": "2183:114:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1214,
              "nodeType": "Block",
              "src": "2543:91:7",
              "statements": [
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1204,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1159,
                      "src": "2553:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1206,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "2568:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1205,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2561:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2561:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2553:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:29:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1211,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "2613:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1210,
                      "name": "TokenAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "2597:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "EmitStatement",
                  "src": "2592:35:7"
                }
              ]
            },
            "documentation": {
              "id": 1197,
              "nodeType": "StructuredDocumentation",
              "src": "2303:165:7",
              "text": "@notice sets the tokenaddress the contract will use\n @dev adds the ERC20 Token address\n @param _tokenAddress for the Token that should be claimable"
            },
            "functionSelector": "26a4e8d2",
            "id": 1215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1201,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2531:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2531:11:7"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "2482:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2507:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1215,
                  "src": "2499:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2498:23:7"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2543:0:7"
            },
            "scope": 1341,
            "src": "2473:161:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "2896:122:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1226,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1218,
                          "src": "2914:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2924:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2914:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2906:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:20:7"
                },
                {
                  "expression": {
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1231,
                      "name": "claimableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "2936:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1232,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "2954:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2936:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1234,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:25:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1236,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "2995:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1235,
                      "name": "ClaimableAmountSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "2976:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2976:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "EmitStatement",
                  "src": "2971:40:7"
                }
              ]
            },
            "documentation": {
              "id": 1216,
              "nodeType": "StructuredDocumentation",
              "src": "2640:175:7",
              "text": "@notice sets the amount of tokens that can be claimed per user\n @dev pass normal decimal number\n @param _amount the amount of tokens that should be claimable"
            },
            "functionSelector": "54df144d",
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1220,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2872:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2872:11:7"
              },
              {
                "arguments": [],
                "id": 1223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1222,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1184,
                  "src": "2884:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2884:12:7"
              }
            ],
            "name": "setClaimableAmount",
            "nameLocation": "2829:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2854:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "2849:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2848:14:7"
            },
            "returnParameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2896:0:7"
            },
            "scope": 1341,
            "src": "2820:198:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1291,
              "nodeType": "Block",
              "src": "3200:452:7",
              "statements": [
                {
                  "documentation": "todo only whitelisted users\nrequire(whitelist[msg.sender] == true);*",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1251,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "3317:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1254,
                          "indexExpression": {
                            "expression": {
                              "id": 1252,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3325:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3325:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3317:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3340:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3317:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f702068617320616c7265616479206265656e20636c61696d6564",
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3347:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        },
                        "value": "Airdrop has already been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a2294210e19cf4b3a10f36c81a7b92e97ea752fe9c46e9f269cc7fd39e351d",
                          "typeString": "literal_string \"Airdrop has already been claimed\""
                        }
                      ],
                      "id": 1250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3309:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1261,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "3400:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3400:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1263,
                          "name": "claimableAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "3416:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3400:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c206e6f20746f6b656e73206c65667421",
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3433:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        },
                        "value": "Sorry, no tokens left!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_700736107e8106d81c2071c1fe86b5add4ffe8766bedb672933cf570ce983edb",
                          "typeString": "literal_string \"Sorry, no tokens left!\""
                        }
                      ],
                      "id": 1260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3392:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:66:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1271,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3491:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3491:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1273,
                            "name": "claimableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "3503:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1269,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1159,
                            "src": "3476:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$768",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 717,
                          "src": "3476:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3476:43:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        },
                        "value": "Transfer was not successful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eca56f6aa708ce9091275d0b0c58fc1c80927b4e756e13e318ffd40d8b494f4a",
                          "typeString": "literal_string \"Transfer was not successful\""
                        }
                      ],
                      "id": 1268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3468:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:83:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:83:7"
                },
                {
                  "expression": {
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1278,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "3561:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1281,
                      "indexExpression": {
                        "expression": {
                          "id": 1279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3569:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3569:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3561:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3583:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3561:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "3561:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3617:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3617:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1288,
                        "name": "claimableAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "3629:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1285,
                      "name": "AirdropClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "3602:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3602:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1290,
                  "nodeType": "EmitStatement",
                  "src": "3597:48:7"
                }
              ]
            },
            "documentation": {
              "id": 1241,
              "nodeType": "StructuredDocumentation",
              "src": "3024:90:7",
              "text": "@notice lets user claim the airdrop\n @dev check that a user can claim only once"
            },
            "functionSelector": "5b88349d",
            "id": 1292,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1244,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1243,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1184,
                  "src": "3153:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3153:12:7"
              },
              {
                "arguments": [],
                "id": 1246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1245,
                  "name": "claimableAmountSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1196,
                  "src": "3166:18:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3166:20:7"
              },
              {
                "id": 1248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1247,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "3187:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:12:7"
              }
            ],
            "name": "claimAirdrop",
            "nameLocation": "3128:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3141:2:7"
            },
            "returnParameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3200:0:7"
            },
            "scope": 1341,
            "src": "3119:533:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1301,
              "nodeType": "Block",
              "src": "3852:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 1299,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1159,
                    "src": "3869:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 1298,
                  "id": 1300,
                  "nodeType": "Return",
                  "src": "3862:12:7"
                }
              ]
            },
            "documentation": {
              "id": 1293,
              "nodeType": "StructuredDocumentation",
              "src": "3658:133:7",
              "text": "@notice Get the token address\n @dev without token address claim is not possible\n @return return erc20 token address"
            },
            "functionSelector": "10fe9ae8",
            "id": 1302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "3805:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3821:2:7"
            },
            "returnParameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1302,
                  "src": "3844:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$768",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1296,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1295,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 768,
                      "src": "3844:6:7"
                    },
                    "referencedDeclaration": 768,
                    "src": "3844:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3843:8:7"
            },
            "scope": 1341,
            "src": "3796:85:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "4113:54:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4154:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Airdrop_$1341",
                              "typeString": "contract Airdrop"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Airdrop_$1341",
                              "typeString": "contract Airdrop"
                            }
                          ],
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4146:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4146:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4146:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1310,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1159,
                        "src": "4130:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 707,
                      "src": "4130:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1309,
                  "id": 1317,
                  "nodeType": "Return",
                  "src": "4123:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1303,
              "nodeType": "StructuredDocumentation",
              "src": "3891:155:7",
              "text": "@notice returns the balance of this contract\n @dev returns token balance\n @return uint that stands for the token balance of this contract"
            },
            "functionSelector": "12065fe0",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1305,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1184,
                  "src": "4086:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4086:12:7"
              }
            ],
            "name": "getBalance",
            "nameLocation": "4060:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4071:2:7"
            },
            "returnParameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "4107:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:6:7"
            },
            "scope": 1341,
            "src": "4051:116:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1327,
              "nodeType": "Block",
              "src": "4350:39:7",
              "statements": [
                {
                  "expression": {
                    "id": 1325,
                    "name": "claimableAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1167,
                    "src": "4367:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1324,
                  "id": 1326,
                  "nodeType": "Return",
                  "src": "4360:22:7"
                }
              ]
            },
            "documentation": {
              "id": 1320,
              "nodeType": "StructuredDocumentation",
              "src": "4173:115:7",
              "text": "@notice get the available amount that can be claimed\n @dev \n @return return uint claimable amount"
            },
            "functionSelector": "c354bd6e",
            "id": 1328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableAmount",
            "nameLocation": "4302:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:2:7"
            },
            "returnParameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1328,
                  "src": "4344:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4344:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4343:6:7"
            },
            "scope": 1341,
            "src": "4293:96:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1339,
              "nodeType": "Block",
              "src": "4612:43:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1334,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1164,
                      "src": "4629:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1337,
                    "indexExpression": {
                      "expression": {
                        "id": 1335,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4637:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4637:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4629:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1333,
                  "id": 1338,
                  "nodeType": "Return",
                  "src": "4622:26:7"
                }
              ]
            },
            "documentation": {
              "id": 1329,
              "nodeType": "StructuredDocumentation",
              "src": "4395:160:7",
              "text": "@notice used to check if a user claimed airdrop\n @dev readig data from mapping claimed\n @return bool false if airdrop has not been claimed yet"
            },
            "functionSelector": "9eea92cd",
            "id": 1340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "airdropClaimed",
            "nameLocation": "4569:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4584:2:7"
            },
            "returnParameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "4607:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4606:6:7"
            },
            "scope": 1341,
            "src": "4560:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1342,
        "src": "572:4292:7",
        "usedErrors": []
      }
    ],
    "src": "32:4832:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x650e45f04ef8a0c267b2f78d983913f69ae3a353b2b32de5429307522be0ab55": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "AirdropClaimed",
          "type": "event"
        },
        "0xe13b87e357b6ab17c565a8042616084608de82978cf3794844a036a9b6abbb8b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "claimableAmount",
              "type": "uint256"
            }
          ],
          "name": "ClaimableAmountSet",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd82cad5fdc98633445b90f806f2e1a61a5409f92187ee9cd87f1da18c9069266": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "setTokenAddress",
              "type": "address"
            }
          ],
          "name": "TokenAddressSet",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf237D8B895cDd648a768933511D4c1E7B912bba5",
      "transactionHash": "0x8317f1e6856a8a09fac823c4098ec9dce85b060b49c4c3ebcbc049c4189e9af6"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-01T01:41:31.648Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "ethSplit",
    "details": "The owner sets the token address and the claimable amount, so users can claim tokens, while a mapping checks if a user already claimed tokens.",
    "events": {
      "AirdropClaimed(address,uint256)": {
        "params": {
          "amount": "that has been claimed",
          "caller": "user that claimed the airdrop"
        }
      },
      "ClaimableAmountSet(uint256)": {
        "params": {
          "claimableAmount": "amount to claim per user"
        }
      },
      "TokenAddressSet(address)": {
        "params": {
          "setTokenAddress": "ERC20 TokenAddress"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "airdropClaimed()": {
        "details": "readig data from mapping claimed",
        "returns": {
          "_0": "bool false if airdrop has not been claimed yet"
        }
      },
      "claimAirdrop()": {
        "details": "check that a user can claim only once"
      },
      "getBalance()": {
        "details": "returns token balance",
        "returns": {
          "_0": "uint that stands for the token balance of this contract"
        }
      },
      "getClaimableAmount()": {
        "returns": {
          "_0": "return uint claimable amount"
        }
      },
      "getTokenAddress()": {
        "details": "without token address claim is not possible",
        "returns": {
          "_0": "return erc20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setClaimableAmount(uint256)": {
        "details": "pass normal decimal number",
        "params": {
          "_amount": "the amount of tokens that should be claimable"
        }
      },
      "setTokenAddress(address)": {
        "details": "adds the ERC20 Token address",
        "params": {
          "_tokenAddress": "for the Token that should be claimable"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "claimableAmount": {
        "details": "uint that stores the claimable amount of tokens per user"
      },
      "claimed": {
        "details": "sets the user that claims to true"
      },
      "token": {
        "details": "imported IERC20.sol from openzeppelin to store token address"
      }
    },
    "title": "Airdrop Contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AirdropClaimed(address,uint256)": {
        "notice": "Emitted when Airdrop is being claimed"
      },
      "ClaimableAmountSet(uint256)": {
        "notice": "Emitted when ClaimableAmount is being set"
      },
      "TokenAddressSet(address)": {
        "notice": "Emitted when TokenAddress is being set"
      }
    },
    "kind": "user",
    "methods": {
      "airdropClaimed()": {
        "notice": "used to check if a user claimed airdrop"
      },
      "claimAirdrop()": {
        "notice": "lets user claim the airdrop"
      },
      "claimableAmount()": {
        "notice": "Amount of tokens to be claimed"
      },
      "getBalance()": {
        "notice": "returns the balance of this contract"
      },
      "getClaimableAmount()": {
        "notice": "get the available amount that can be claimed"
      },
      "getTokenAddress()": {
        "notice": "Get the token address"
      },
      "setClaimableAmount(uint256)": {
        "notice": "sets the amount of tokens that can be claimed per user"
      },
      "setTokenAddress(address)": {
        "notice": "sets the tokenaddress the contract will use"
      },
      "token()": {
        "notice": "used to store the token address"
      }
    },
    "notice": "Users can use this contract to claim tokens for free once per address",
    "version": 1
  }
}