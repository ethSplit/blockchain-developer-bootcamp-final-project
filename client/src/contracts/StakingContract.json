{
  "contractName": "StakingContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenAddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "defaultLockInDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeholderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setStakingToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getStakeOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLockInDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getStakeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeholderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ethSplit\",\"details\":\"stake token into contract and get added to mapping that checks stakes\",\"events\":{\"Staked(address,uint256)\":{\"params\":{\"sender\":\"address called this function\",\"stakedAmount\":\"amount that has been staked\"}},\"TokenAddressSet(address,address)\":{\"params\":{\"from\":\"address that transacted this transaction\",\"tokenAddress\":\"ERC20 token address\"}},\"Unstaked(address,uint256)\":{\"params\":{\"sender\":\"address that called this function\",\"withdrawalAmount\":\"amount that has been unstaked\"}}},\"kind\":\"dev\",\"methods\":{\"getStake()\":{\"details\":\"return the staked amount of msg.sender\",\"returns\":{\"_0\":\"uint256 amount of tokens staked\"}},\"getStakeOf(address)\":{\"details\":\"call the mapping stake to get amount of tokens staked by specific address\",\"params\":{\"_address\":\"address that staked\"},\"returns\":{\"_0\":\"uint amount of tokens staked\"}},\"getStakingToken()\":{\"details\":\"get the ERC20 address to interact with the specific token\",\"returns\":{\"_0\":\"return ERC20 address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setStakingToken(address)\":{\"details\":\"sets ERC20 token address\",\"params\":{\"_tokenAddress\":\"ERC20 token address\"}},\"stake(uint256)\":{\"details\":\"check that user approved token amount\",\"params\":{\"_amount\":\"to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"check that amount is valid\",\"params\":{\"_amount\":\"to unstake\"}}},\"stateVariables\":{\"stakes\":{\"details\":\"mapping that stores balance that is being staked by each address\"},\"stakingToken\":{\"details\":\"ERC20 token address\"}},\"title\":\"Staking Contract\",\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256)\":{\"notice\":\"Emitted when someone stakes to this contract\"},\"TokenAddressSet(address,address)\":{\"notice\":\"Emitted when Token address is set\"},\"Unstaked(address,uint256)\":{\"notice\":\"Emitted when someone unstakes from this contract\"}},\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"todo implement reward functionality\"},\"getStake()\":{\"notice\":\"return the staked amount of the caller\"},\"getStakeOf(address)\":{\"notice\":\"get the staked amount for a specific address\"},\"getStakingToken()\":{\"notice\":\"return the token address\"},\"setStakingToken(address)\":{\"notice\":\"sets token address\"},\"stake(uint256)\":{\"notice\":\"user stakes amount of tokens\"},\"stakeholderCount()\":{\"notice\":\"todo make use of this state variable for stakeholder Array\"},\"stakingToken()\":{\"notice\":\"Stores token address that is used for staking\"},\"unstake(uint256)\":{\"notice\":\"unstakes token amount\"}},\"notice\":\"An implementation of a Staking Contract, to stake a Token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StakingContract.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/StakingContract.sol\":{\"keccak256\":\"0x804b32f57988ce66fe60d8486e9f1bb64722ca01ed14cd5052ed6df02a088d78\",\"license\":\"MITs\",\"urls\":[\"bzz-raw://14578113ef8f63f26f73fcd04b5b470713b5fa6da637e12535a1353c96a5ca72\",\"dweb:/ipfs/QmdhJnuGQGAj1c7c9aPrwsVVmKjUjyqermkE2rYQAX7Wxb\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060025534801561001557600080fd5b5061003261002761003e60201b60201c565b61004660201b60201c565b6001808190555061010a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6115a5806101196000396000f3fe6080604052600436106100c25760003560e01c80639f9106d11161007f578063d8319ef311610059578063d8319ef314610221578063e8297da21461024c578063f2fde38b14610277578063fc0e3d90146102a0576100c2565b80639f9106d1146101c3578063a694fc3a146101ee578063b88a802f1461020a576100c2565b80631e9b12ef146100c75780632e17de78146100f05780636a86550f14610119578063715018a61461015657806372f702f31461016d5780638da5cb5b14610198575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610efd565b6102cb565b005b3480156100fc57600080fd5b5061011760048036038101906101129190610f60565b6103c4565b005b34801561012557600080fd5b50610140600480360381019061013b9190610efd565b6106b4565b60405161014d9190610f9c565b60405180910390f35b34801561016257600080fd5b5061016b6106fd565b005b34801561017957600080fd5b50610182610785565b60405161018f9190611016565b60405180910390f35b3480156101a457600080fd5b506101ad6107ab565b6040516101ba9190611040565b60405180910390f35b3480156101cf57600080fd5b506101d86107d4565b6040516101e59190611016565b60405180910390f35b61020860048036038101906102039190610f60565b6107fe565b005b34801561021657600080fd5b5061021f610c55565b005b34801561022d57600080fd5b50610236610c57565b6040516102439190610f9c565b60405180910390f35b34801561025857600080fd5b50610261610c5d565b60405161026e9190610f9c565b60405180910390f35b34801561028357600080fd5b5061029e60048036038101906102999190610efd565b610c63565b005b3480156102ac57600080fd5b506102b5610d5b565b6040516102c29190610f9c565b60405180910390f35b6102d3610da2565b73ffffffffffffffffffffffffffffffffffffffff166102f16107ab565b73ffffffffffffffffffffffffffffffffffffffff1614610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e906110b8565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f24b80abab34e4313f6fa818b4b740b32c9c113adccd46db535dbc92567953cdf33826040516103b99291906110d8565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d9061114d565b60405180910390fd5b6002600154141561049c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610493906111b9565b60405180910390fd5b600260018190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561053257506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b61053b57600080fd5b61058d81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610daa90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161062d9291906111d9565b6020604051808303816000875af115801561064c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610670919061123a565b507f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7533826040516106a29291906111d9565b60405180910390a16001808190555050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610705610da2565b73ffffffffffffffffffffffffffffffffffffffff166107236107ab565b73ffffffffffffffffffffffffffffffffffffffff1614610779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610770906110b8565b60405180910390fd5b6107836000610dc0565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108879061114d565b60405180910390fd5b600260015414156108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd906111b9565b60405180910390fd5b600260018190555080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161093a9190611040565b602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b919061127c565b10156109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b3906112f5565b60405180910390fd5b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610a1a9291906110d8565b602060405180830381865afa158015610a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5b919061127c565b1015610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9390611361565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610afb93929190611381565b6020604051808303816000875af1158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e919061123a565b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611404565b60405180910390fd5b610bcf81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3382604051610c439291906111d9565b60405180910390a16001808190555050565b565b60025481565b60075481565b610c6b610da2565b73ffffffffffffffffffffffffffffffffffffffff16610c896107ab565b73ffffffffffffffffffffffffffffffffffffffff1614610cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd6906110b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4690611496565b60405180910390fd5b610d5881610dc0565b50565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600033905090565b60008183610db891906114e5565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610e929190611519565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eca82610e9f565b9050919050565b610eda81610ebf565b8114610ee557600080fd5b50565b600081359050610ef781610ed1565b92915050565b600060208284031215610f1357610f12610e9a565b5b6000610f2184828501610ee8565b91505092915050565b6000819050919050565b610f3d81610f2a565b8114610f4857600080fd5b50565b600081359050610f5a81610f34565b92915050565b600060208284031215610f7657610f75610e9a565b5b6000610f8484828501610f4b565b91505092915050565b610f9681610f2a565b82525050565b6000602082019050610fb16000830184610f8d565b92915050565b6000819050919050565b6000610fdc610fd7610fd284610e9f565b610fb7565b610e9f565b9050919050565b6000610fee82610fc1565b9050919050565b600061100082610fe3565b9050919050565b61101081610ff5565b82525050565b600060208201905061102b6000830184611007565b92915050565b61103a81610ebf565b82525050565b60006020820190506110556000830184611031565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110a260208361105b565b91506110ad8261106c565b602082019050919050565b600060208201905081810360008301526110d181611095565b9050919050565b60006040820190506110ed6000830185611031565b6110fa6020830184611031565b9392505050565b7f4e6f20746f6b656e206164647265737320736574000000000000000000000000600082015250565b600061113760148361105b565b915061114282611101565b602082019050919050565b600060208201905081810360008301526111668161112a565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006111a3601f8361105b565b91506111ae8261116d565b602082019050919050565b600060208201905081810360008301526111d281611196565b9050919050565b60006040820190506111ee6000830185611031565b6111fb6020830184610f8d565b9392505050565b60008115159050919050565b61121781611202565b811461122257600080fd5b50565b6000815190506112348161120e565b92915050565b6000602082840312156112505761124f610e9a565b5b600061125e84828501611225565b91505092915050565b60008151905061127681610f34565b92915050565b60006020828403121561129257611291610e9a565b5b60006112a084828501611267565b91505092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006112df60108361105b565b91506112ea826112a9565b602082019050919050565b6000602082019050818103600083015261130e816112d2565b9050919050565b7f4e6f7420617070726f7665640000000000000000000000000000000000000000600082015250565b600061134b600c8361105b565b915061135682611315565b602082019050919050565b6000602082019050818103600083015261137a8161133e565b9050919050565b60006060820190506113966000830186611031565b6113a36020830185611031565b6113b06040830184610f8d565b949350505050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006113ee60158361105b565b91506113f9826113b8565b602082019050919050565b6000602082019050818103600083015261141d816113e1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061148060268361105b565b915061148b82611424565b604082019050919050565b600060208201905081810360008301526114af81611473565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f082610f2a565b91506114fb83610f2a565b92508282101561150e5761150d6114b6565b5b828203905092915050565b600061152482610f2a565b915061152f83610f2a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611564576115636114b6565b5b82820190509291505056fea26469706673582212202bc10aabe0843a436e765684a8fc0c45d40f4303e1a0839948007e0124f532af64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80639f9106d11161007f578063d8319ef311610059578063d8319ef314610221578063e8297da21461024c578063f2fde38b14610277578063fc0e3d90146102a0576100c2565b80639f9106d1146101c3578063a694fc3a146101ee578063b88a802f1461020a576100c2565b80631e9b12ef146100c75780632e17de78146100f05780636a86550f14610119578063715018a61461015657806372f702f31461016d5780638da5cb5b14610198575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610efd565b6102cb565b005b3480156100fc57600080fd5b5061011760048036038101906101129190610f60565b6103c4565b005b34801561012557600080fd5b50610140600480360381019061013b9190610efd565b6106b4565b60405161014d9190610f9c565b60405180910390f35b34801561016257600080fd5b5061016b6106fd565b005b34801561017957600080fd5b50610182610785565b60405161018f9190611016565b60405180910390f35b3480156101a457600080fd5b506101ad6107ab565b6040516101ba9190611040565b60405180910390f35b3480156101cf57600080fd5b506101d86107d4565b6040516101e59190611016565b60405180910390f35b61020860048036038101906102039190610f60565b6107fe565b005b34801561021657600080fd5b5061021f610c55565b005b34801561022d57600080fd5b50610236610c57565b6040516102439190610f9c565b60405180910390f35b34801561025857600080fd5b50610261610c5d565b60405161026e9190610f9c565b60405180910390f35b34801561028357600080fd5b5061029e60048036038101906102999190610efd565b610c63565b005b3480156102ac57600080fd5b506102b5610d5b565b6040516102c29190610f9c565b60405180910390f35b6102d3610da2565b73ffffffffffffffffffffffffffffffffffffffff166102f16107ab565b73ffffffffffffffffffffffffffffffffffffffff1614610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e906110b8565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f24b80abab34e4313f6fa818b4b740b32c9c113adccd46db535dbc92567953cdf33826040516103b99291906110d8565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d9061114d565b60405180910390fd5b6002600154141561049c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610493906111b9565b60405180910390fd5b600260018190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561053257506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b61053b57600080fd5b61058d81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610daa90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161062d9291906111d9565b6020604051808303816000875af115801561064c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610670919061123a565b507f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7533826040516106a29291906111d9565b60405180910390a16001808190555050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610705610da2565b73ffffffffffffffffffffffffffffffffffffffff166107236107ab565b73ffffffffffffffffffffffffffffffffffffffff1614610779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610770906110b8565b60405180910390fd5b6107836000610dc0565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108879061114d565b60405180910390fd5b600260015414156108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd906111b9565b60405180910390fd5b600260018190555080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161093a9190611040565b602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b919061127c565b10156109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b3906112f5565b60405180910390fd5b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610a1a9291906110d8565b602060405180830381865afa158015610a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5b919061127c565b1015610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9390611361565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610afb93929190611381565b6020604051808303816000875af1158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e919061123a565b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611404565b60405180910390fd5b610bcf81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d3382604051610c439291906111d9565b60405180910390a16001808190555050565b565b60025481565b60075481565b610c6b610da2565b73ffffffffffffffffffffffffffffffffffffffff16610c896107ab565b73ffffffffffffffffffffffffffffffffffffffff1614610cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd6906110b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4690611496565b60405180910390fd5b610d5881610dc0565b50565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600033905090565b60008183610db891906114e5565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610e929190611519565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eca82610e9f565b9050919050565b610eda81610ebf565b8114610ee557600080fd5b50565b600081359050610ef781610ed1565b92915050565b600060208284031215610f1357610f12610e9a565b5b6000610f2184828501610ee8565b91505092915050565b6000819050919050565b610f3d81610f2a565b8114610f4857600080fd5b50565b600081359050610f5a81610f34565b92915050565b600060208284031215610f7657610f75610e9a565b5b6000610f8484828501610f4b565b91505092915050565b610f9681610f2a565b82525050565b6000602082019050610fb16000830184610f8d565b92915050565b6000819050919050565b6000610fdc610fd7610fd284610e9f565b610fb7565b610e9f565b9050919050565b6000610fee82610fc1565b9050919050565b600061100082610fe3565b9050919050565b61101081610ff5565b82525050565b600060208201905061102b6000830184611007565b92915050565b61103a81610ebf565b82525050565b60006020820190506110556000830184611031565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110a260208361105b565b91506110ad8261106c565b602082019050919050565b600060208201905081810360008301526110d181611095565b9050919050565b60006040820190506110ed6000830185611031565b6110fa6020830184611031565b9392505050565b7f4e6f20746f6b656e206164647265737320736574000000000000000000000000600082015250565b600061113760148361105b565b915061114282611101565b602082019050919050565b600060208201905081810360008301526111668161112a565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006111a3601f8361105b565b91506111ae8261116d565b602082019050919050565b600060208201905081810360008301526111d281611196565b9050919050565b60006040820190506111ee6000830185611031565b6111fb6020830184610f8d565b9392505050565b60008115159050919050565b61121781611202565b811461122257600080fd5b50565b6000815190506112348161120e565b92915050565b6000602082840312156112505761124f610e9a565b5b600061125e84828501611225565b91505092915050565b60008151905061127681610f34565b92915050565b60006020828403121561129257611291610e9a565b5b60006112a084828501611267565b91505092915050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006112df60108361105b565b91506112ea826112a9565b602082019050919050565b6000602082019050818103600083015261130e816112d2565b9050919050565b7f4e6f7420617070726f7665640000000000000000000000000000000000000000600082015250565b600061134b600c8361105b565b915061135682611315565b602082019050919050565b6000602082019050818103600083015261137a8161133e565b9050919050565b60006060820190506113966000830186611031565b6113a36020830185611031565b6113b06040830184610f8d565b949350505050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006113ee60158361105b565b91506113f9826113b8565b602082019050919050565b6000602082019050818103600083015261141d816113e1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061148060268361105b565b915061148b82611424565b604082019050919050565b600060208201905081810360008301526114af81611473565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f082610f2a565b91506114fb83610f2a565b92508282101561150e5761150d6114b6565b5b828203905092915050565b600061152482610f2a565b915061152f83610f2a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611564576115636114b6565b5b82820190509291505056fea26469706673582212202bc10aabe0843a436e765684a8fc0c45d40f4303e1a0839948007e0124f532af64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13570:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:10",
                "type": ""
              }
            ],
            "src": "466:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:10",
                "type": ""
              }
            ],
            "src": "568:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:10",
                "type": ""
              }
            ],
            "src": "696:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:10",
                "type": ""
              }
            ],
            "src": "841:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1242:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1231:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1203:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1213:7:10",
                "type": ""
              }
            ],
            "src": "1176:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1302:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1359:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1368:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1371:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1361:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1361:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1361:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1325:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1350:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1332:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1332:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1322:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1322:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1315:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1312:63:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1295:5:10",
                "type": ""
              }
            ],
            "src": "1259:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1439:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1449:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1471:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1458:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1449:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1514:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1487:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1487:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1417:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1425:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1433:5:10",
                "type": ""
              }
            ],
            "src": "1387:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1646:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1646:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1619:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1628:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1608:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1737:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1752:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1766:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1756:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1781:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1816:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1827:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1812:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1812:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1836:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1791:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1791:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1781:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1568:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1579:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1591:6:10",
                "type": ""
              }
            ],
            "src": "1532:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1932:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1949:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1972:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1954:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1942:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1942:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1920:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1927:3:10",
                "type": ""
              }
            ],
            "src": "1867:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2089:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2099:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2111:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2122:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2107:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2099:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2179:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2192:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2203:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2188:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2188:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2135:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2135:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2061:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2073:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2084:4:10",
                "type": ""
              }
            ],
            "src": "1991:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2251:28:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2261:12:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2268:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2261:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2237:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2247:3:10",
                "type": ""
              }
            ],
            "src": "2219:60:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2345:82:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2355:66:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2413:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "2395:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2395:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "2386:8:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2386:34:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2368:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:53:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2355:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2325:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2335:9:10",
                "type": ""
              }
            ],
            "src": "2285:142:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2493:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2503:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2547:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2516:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2503:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2473:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2483:9:10",
                "type": ""
              }
            ],
            "src": "2433:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2639:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2649:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2693:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2662:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2649:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$768_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2619:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2629:9:10",
                "type": ""
              }
            ],
            "src": "2565:140:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2790:80:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2807:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2857:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$768_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2812:44:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2812:51:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2800:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2800:64:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2800:64:10"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2778:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2785:3:10",
                "type": ""
              }
            ],
            "src": "2711:159:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2988:138:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2998:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3010:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3021:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3006:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3006:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2998:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3092:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3105:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3116:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3101:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3101:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3034:57:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3034:85:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3034:85:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$768__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2960:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2972:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2983:4:10",
                "type": ""
              }
            ],
            "src": "2876:250:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3197:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3214:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3237:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3219:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3207:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3207:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3185:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3192:3:10",
                "type": ""
              }
            ],
            "src": "3132:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3354:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3364:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3376:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3387:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3372:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3364:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3444:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3457:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3468:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3453:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3453:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3400:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3400:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3400:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3326:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3338:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3349:4:10",
                "type": ""
              }
            ],
            "src": "3256:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3580:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3597:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3602:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3590:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3590:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3618:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3637:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3642:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3633:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3633:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3618:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3552:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3557:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3568:11:10",
                "type": ""
              }
            ],
            "src": "3484:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3765:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3787:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3783:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3783:14:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3799:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3776:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3776:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3776:58:10"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3757:6:10",
                "type": ""
              }
            ],
            "src": "3659:182:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3993:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4003:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4069:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4074:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4010:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4003:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4175:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "4086:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4086:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4086:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4188:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4199:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4204:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4195:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4188:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3981:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3989:3:10",
                "type": ""
              }
            ],
            "src": "3847:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4390:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4400:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4412:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4423:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4408:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4408:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4400:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4447:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4458:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4443:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4443:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4466:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4472:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4462:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4462:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4436:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4436:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4436:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4492:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4626:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4500:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4492:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4370:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4385:4:10",
                "type": ""
              }
            ],
            "src": "4219:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4770:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4780:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4792:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4803:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4788:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4780:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4860:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4873:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4884:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4869:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4869:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4816:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4816:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4816:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4941:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4954:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4965:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4950:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4950:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4897:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4897:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4897:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4734:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4746:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4754:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4765:4:10",
                "type": ""
              }
            ],
            "src": "4644:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5088:64:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5110:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5118:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5106:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5106:14:10"
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5122:22:10",
                        "type": "",
                        "value": "No token address set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5099:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5099:46:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5099:46:10"
                }
              ]
            },
            "name": "store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5080:6:10",
                "type": ""
              }
            ],
            "src": "4982:170:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5304:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5314:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5380:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5385:2:10",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5321:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5321:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5314:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5486:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                      "nodeType": "YulIdentifier",
                      "src": "5397:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5499:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5510:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5515:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5506:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5506:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5499:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5292:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5300:3:10",
                "type": ""
              }
            ],
            "src": "5158:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5701:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5711:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5723:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5734:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5719:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5719:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5711:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5758:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5769:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5754:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5754:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5777:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5783:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5773:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5773:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5747:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5747:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5747:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5803:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5937:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5811:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5811:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5803:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5681:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5696:4:10",
                "type": ""
              }
            ],
            "src": "5530:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6061:75:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6083:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6091:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6079:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6079:14:10"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6095:33:10",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6072:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6072:57:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6072:57:10"
                }
              ]
            },
            "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6053:6:10",
                "type": ""
              }
            ],
            "src": "5955:181:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6288:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6298:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6364:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6369:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6305:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6305:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6298:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6470:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      "nodeType": "YulIdentifier",
                      "src": "6381:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6381:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6381:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6483:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6494:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6499:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6490:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6490:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6483:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6276:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6284:3:10",
                "type": ""
              }
            ],
            "src": "6142:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6685:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6695:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6707:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6718:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6703:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6703:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6695:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6742:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6753:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6738:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6738:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6761:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6767:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6757:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6757:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6787:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6921:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6795:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6795:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6787:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6665:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6680:4:10",
                "type": ""
              }
            ],
            "src": "6514:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7065:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7075:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7087:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7098:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7083:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7083:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7075:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7155:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7168:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7179:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7164:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7164:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7111:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7111:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7111:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7236:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7249:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7260:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7245:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7245:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7192:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7192:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7192:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7029:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7041:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7049:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7060:4:10",
                "type": ""
              }
            ],
            "src": "6939:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7319:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7329:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7354:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7347:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7347:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7340:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7340:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7329:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7301:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7311:7:10",
                "type": ""
              }
            ],
            "src": "7277:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7413:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7467:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7476:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7479:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7469:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7469:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7469:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7436:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7458:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7443:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7443:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7433:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7433:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7426:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7426:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7423:60:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7406:5:10",
                "type": ""
              }
            ],
            "src": "7373:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7555:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7565:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7580:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7574:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7574:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7565:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7620:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7596:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7596:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7596:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7533:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7541:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7549:5:10",
                "type": ""
              }
            ],
            "src": "7495:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7712:271:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7758:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7760:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7760:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7760:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7733:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7742:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7729:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7729:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7754:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7725:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7725:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7722:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7851:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7866:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7880:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7870:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7895:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7938:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7949:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7934:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7934:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7958:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7905:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7905:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7895:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7682:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7693:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7705:6:10",
                "type": ""
              }
            ],
            "src": "7638:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8052:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8062:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8077:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8071:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8071:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8062:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8120:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8093:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8093:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8093:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8030:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8038:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8046:5:10",
                "type": ""
              }
            ],
            "src": "7989:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8215:274:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8261:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8263:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8263:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8263:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8236:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8245:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8232:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8232:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8257:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8228:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8228:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "8225:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8354:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8369:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8383:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8373:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8398:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8444:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8455:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8440:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8440:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8464:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8408:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8408:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8398:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8185:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8196:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8208:6:10",
                "type": ""
              }
            ],
            "src": "8138:351:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8601:60:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8623:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8631:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8619:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8619:14:10"
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8635:18:10",
                        "type": "",
                        "value": "Not enough funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8612:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8612:42:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8612:42:10"
                }
              ]
            },
            "name": "store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8593:6:10",
                "type": ""
              }
            ],
            "src": "8495:166:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8813:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8823:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8889:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8894:2:10",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8830:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8830:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8823:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8995:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                      "nodeType": "YulIdentifier",
                      "src": "8906:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8906:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8906:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9008:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9019:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9024:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9015:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9015:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9008:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8801:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8809:3:10",
                "type": ""
              }
            ],
            "src": "8667:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9210:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9220:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9232:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9243:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9228:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9228:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9220:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9267:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9278:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9263:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9263:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9286:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9292:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9282:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9282:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9256:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9256:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9256:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9312:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9446:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9320:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9320:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9312:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9190:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9205:4:10",
                "type": ""
              }
            ],
            "src": "9039:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9570:56:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9592:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9600:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9588:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9588:14:10"
                      },
                      {
                        "hexValue": "4e6f7420617070726f766564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9604:14:10",
                        "type": "",
                        "value": "Not approved"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9581:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9581:38:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9581:38:10"
                }
              ]
            },
            "name": "store_literal_in_memory_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9562:6:10",
                "type": ""
              }
            ],
            "src": "9464:162:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9778:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9788:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9854:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9859:2:10",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9795:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9795:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9788:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9960:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                      "nodeType": "YulIdentifier",
                      "src": "9871:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9871:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9871:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9973:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9984:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9989:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9980:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9980:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9973:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9766:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9774:3:10",
                "type": ""
              }
            ],
            "src": "9632:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10175:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10185:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10197:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10208:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10193:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10193:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10185:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10232:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10243:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10228:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10228:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10251:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10257:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10247:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10247:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10221:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10221:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10221:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10277:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10411:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10285:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10285:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10277:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10155:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10170:4:10",
                "type": ""
              }
            ],
            "src": "10004:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10583:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10593:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10605:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10616:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10601:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10601:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10593:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10673:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10686:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10697:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10682:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10682:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10629:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10629:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10629:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10754:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10767:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10778:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10763:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10763:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10710:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10710:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10710:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10836:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10849:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10860:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10845:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10845:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10792:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10792:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10792:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10539:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10551:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10559:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10567:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10578:4:10",
                "type": ""
              }
            ],
            "src": "10429:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10983:65:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11005:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11013:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11001:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11001:14:10"
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11017:23:10",
                        "type": "",
                        "value": "Token transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10994:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10994:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10994:47:10"
                }
              ]
            },
            "name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10975:6:10",
                "type": ""
              }
            ],
            "src": "10877:171:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11200:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11210:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11276:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11281:2:10",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11217:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11217:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11210:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11382:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                      "nodeType": "YulIdentifier",
                      "src": "11293:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11293:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11293:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11395:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11406:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11411:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11402:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11402:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11395:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11188:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11196:3:10",
                "type": ""
              }
            ],
            "src": "11054:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11597:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11607:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11619:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11630:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11615:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11615:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11607:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11654:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11665:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11650:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11650:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11673:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11679:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11669:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11669:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11643:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11643:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11643:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11699:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11833:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11707:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11707:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11699:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11577:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11592:4:10",
                "type": ""
              }
            ],
            "src": "11426:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11957:119:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11979:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11987:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11975:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11975:14:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11991:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11968:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11968:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11968:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12047:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12055:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12043:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12043:15:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12060:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12036:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12036:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12036:33:10"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11949:6:10",
                "type": ""
              }
            ],
            "src": "11851:225:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12228:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12238:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12304:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12309:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12245:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12245:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12238:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12410:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12321:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12321:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12321:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12423:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12434:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12439:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12430:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12430:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12423:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12216:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12224:3:10",
                "type": ""
              }
            ],
            "src": "12082:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12625:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12635:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12647:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12658:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12643:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12643:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12635:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12682:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12693:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12678:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12678:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12701:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12707:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12697:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12697:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12671:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12671:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12671:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12727:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12861:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12735:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12735:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12727:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12605:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12620:4:10",
                "type": ""
              }
            ],
            "src": "12454:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12907:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12924:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12927:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12917:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12917:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12917:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13021:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13024:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13014:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13014:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13014:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13045:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13048:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13038:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13038:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13038:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12879:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13110:146:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13120:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13143:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13125:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13125:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13120:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13154:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13177:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13159:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13159:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13154:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13201:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13203:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13203:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13203:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13195:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13198:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13192:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13192:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13189:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13233:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13245:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13248:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13241:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13241:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13233:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13096:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13099:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13105:4:10",
                "type": ""
              }
            ],
            "src": "13065:191:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13306:261:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13316:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13339:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13321:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13321:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13316:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13350:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13373:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13355:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13355:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13350:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13513:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13515:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13515:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13515:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13434:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13441:66:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13509:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13437:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13437:74:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13431:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13431:81:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13428:107:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13545:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13556:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13559:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13552:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13552:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13545:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13293:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13296:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13302:3:10",
                "type": ""
              }
            ],
            "src": "13262:305:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$768_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$768_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$768__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$768_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943(memPtr) {\n\n        mstore(add(memPtr, 0), \"No token address set\")\n\n    }\n\n    function abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "488:3943:9:-:0;;;1337:1;1306:32;;488:3943;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;488:3943:9;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;488:3943:9:-;;;;;;;",
  "deployedSourceMap": "488:3943:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3243:288;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3998:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1435:26:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3678:87:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2655:478;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4386:42;;;;;;;;;;;;;:::i;:::-;;1306:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1865:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4253:87:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2362:167;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2457:13:9::1;2435:12;;:36;;;;;;;;;;;;;;;;;;2482:42;2498:10;2510:13;2482:42;;;;;;;:::i;:::-;;;;;;;;2362:167:::0;:::o;3243:288::-;2113:1;2082:34;;:12;;;;;;;;;;;:34;;;;2074:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:1::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3346:7:9::2;3324:6;:18;3331:10;3324:18;;;;;;;;;;;;;;;;:29;;:55;;;;;3378:1;3357:6;:18;3364:10;3357:18;;;;;;;;;;;;;;;;:22;3324:55;3316:64;;;::::0;::::2;;3407:31;3430:7;3407:6;:18;3414:10;3407:18;;;;;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;3386:6;:18;3393:10;3386:18;;;;;;;;;;;;;;;:52;;;;3444:12;;;;;;;;;;;:21;;;3466:10;3478:7;3444:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3497:29;3506:10;3518:7;3497:29;;;;;;;:::i;:::-;;;;;;;;1701:1:1::1;2628:7:::0;:22:::1;;;;3243:288:9::0;:::o;3998:102::-;4057:7;4079:6;:16;4086:8;4079:16;;;;;;;;;;;;;;;;4072:23;;3998:102;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1435:26:9:-;;;;;;;;;;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;3678:87:9:-;3727:6;3748:12;;;;;;;;;;;3741:19;;3678:87;:::o;2655:478::-;2113:1;2082:34;;:12;;;;;;;;;;;:34;;;;2074:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:1::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2780:7:9::2;2742:12;;;;;;;;;;;:22;;;2765:10;2742:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2734:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2875:7;2822:12;;;;;;;;;;;:22;;;2845:10;2865:4;2822:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;2814:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2913:12;;;;;;;;;;;:25;;;2939:10;2959:4;2966:7;2913:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2905:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;3027:31;3050:7;3027:6;:18;3034:10;3027:18;;;;;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;3006:6;:18;3013:10;3006:18;;;;;;;;;;;;;;;:52;;;;3101:27;3108:10;3120:7;3101:27;;;;;;;:::i;:::-;;;;;;;;1701:1:1::1;2628:7:::0;:22:::1;;;;2655:478:9::0;:::o;4386:42::-;:::o;1306:32::-;;;;:::o;1865:36::-;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4253:87:9:-;4295:7;4317:6;:18;4324:10;4317:18;;;;;;;;;;;;;;;;4310:25;;4253:87;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;3108::6:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;2741:96:6:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:169::-;3568:11;3602:6;3597:3;3590:19;3642:4;3637:3;3633:14;3618:29;;3484:169;;;;:::o;3659:182::-;3799:34;3795:1;3787:6;3783:14;3776:58;3659:182;:::o;3847:366::-;3989:3;4010:67;4074:2;4069:3;4010:67;:::i;:::-;4003:74;;4086:93;4175:3;4086:93;:::i;:::-;4204:2;4199:3;4195:12;4188:19;;3847:366;;;:::o;4219:419::-;4385:4;4423:2;4412:9;4408:18;4400:26;;4472:9;4466:4;4462:20;4458:1;4447:9;4443:17;4436:47;4500:131;4626:4;4500:131;:::i;:::-;4492:139;;4219:419;;;:::o;4644:332::-;4765:4;4803:2;4792:9;4788:18;4780:26;;4816:71;4884:1;4873:9;4869:17;4860:6;4816:71;:::i;:::-;4897:72;4965:2;4954:9;4950:18;4941:6;4897:72;:::i;:::-;4644:332;;;;;:::o;4982:170::-;5122:22;5118:1;5110:6;5106:14;5099:46;4982:170;:::o;5158:366::-;5300:3;5321:67;5385:2;5380:3;5321:67;:::i;:::-;5314:74;;5397:93;5486:3;5397:93;:::i;:::-;5515:2;5510:3;5506:12;5499:19;;5158:366;;;:::o;5530:419::-;5696:4;5734:2;5723:9;5719:18;5711:26;;5783:9;5777:4;5773:20;5769:1;5758:9;5754:17;5747:47;5811:131;5937:4;5811:131;:::i;:::-;5803:139;;5530:419;;;:::o;5955:181::-;6095:33;6091:1;6083:6;6079:14;6072:57;5955:181;:::o;6142:366::-;6284:3;6305:67;6369:2;6364:3;6305:67;:::i;:::-;6298:74;;6381:93;6470:3;6381:93;:::i;:::-;6499:2;6494:3;6490:12;6483:19;;6142:366;;;:::o;6514:419::-;6680:4;6718:2;6707:9;6703:18;6695:26;;6767:9;6761:4;6757:20;6753:1;6742:9;6738:17;6731:47;6795:131;6921:4;6795:131;:::i;:::-;6787:139;;6514:419;;;:::o;6939:332::-;7060:4;7098:2;7087:9;7083:18;7075:26;;7111:71;7179:1;7168:9;7164:17;7155:6;7111:71;:::i;:::-;7192:72;7260:2;7249:9;7245:18;7236:6;7192:72;:::i;:::-;6939:332;;;;;:::o;7277:90::-;7311:7;7354:5;7347:13;7340:21;7329:32;;7277:90;;;:::o;7373:116::-;7443:21;7458:5;7443:21;:::i;:::-;7436:5;7433:32;7423:60;;7479:1;7476;7469:12;7423:60;7373:116;:::o;7495:137::-;7549:5;7580:6;7574:13;7565:22;;7596:30;7620:5;7596:30;:::i;:::-;7495:137;;;;:::o;7638:345::-;7705:6;7754:2;7742:9;7733:7;7729:23;7725:32;7722:119;;;7760:79;;:::i;:::-;7722:119;7880:1;7905:61;7958:7;7949:6;7938:9;7934:22;7905:61;:::i;:::-;7895:71;;7851:125;7638:345;;;;:::o;7989:143::-;8046:5;8077:6;8071:13;8062:22;;8093:33;8120:5;8093:33;:::i;:::-;7989:143;;;;:::o;8138:351::-;8208:6;8257:2;8245:9;8236:7;8232:23;8228:32;8225:119;;;8263:79;;:::i;:::-;8225:119;8383:1;8408:64;8464:7;8455:6;8444:9;8440:22;8408:64;:::i;:::-;8398:74;;8354:128;8138:351;;;;:::o;8495:166::-;8635:18;8631:1;8623:6;8619:14;8612:42;8495:166;:::o;8667:366::-;8809:3;8830:67;8894:2;8889:3;8830:67;:::i;:::-;8823:74;;8906:93;8995:3;8906:93;:::i;:::-;9024:2;9019:3;9015:12;9008:19;;8667:366;;;:::o;9039:419::-;9205:4;9243:2;9232:9;9228:18;9220:26;;9292:9;9286:4;9282:20;9278:1;9267:9;9263:17;9256:47;9320:131;9446:4;9320:131;:::i;:::-;9312:139;;9039:419;;;:::o;9464:162::-;9604:14;9600:1;9592:6;9588:14;9581:38;9464:162;:::o;9632:366::-;9774:3;9795:67;9859:2;9854:3;9795:67;:::i;:::-;9788:74;;9871:93;9960:3;9871:93;:::i;:::-;9989:2;9984:3;9980:12;9973:19;;9632:366;;;:::o;10004:419::-;10170:4;10208:2;10197:9;10193:18;10185:26;;10257:9;10251:4;10247:20;10243:1;10232:9;10228:17;10221:47;10285:131;10411:4;10285:131;:::i;:::-;10277:139;;10004:419;;;:::o;10429:442::-;10578:4;10616:2;10605:9;10601:18;10593:26;;10629:71;10697:1;10686:9;10682:17;10673:6;10629:71;:::i;:::-;10710:72;10778:2;10767:9;10763:18;10754:6;10710:72;:::i;:::-;10792;10860:2;10849:9;10845:18;10836:6;10792:72;:::i;:::-;10429:442;;;;;;:::o;10877:171::-;11017:23;11013:1;11005:6;11001:14;10994:47;10877:171;:::o;11054:366::-;11196:3;11217:67;11281:2;11276:3;11217:67;:::i;:::-;11210:74;;11293:93;11382:3;11293:93;:::i;:::-;11411:2;11406:3;11402:12;11395:19;;11054:366;;;:::o;11426:419::-;11592:4;11630:2;11619:9;11615:18;11607:26;;11679:9;11673:4;11669:20;11665:1;11654:9;11650:17;11643:47;11707:131;11833:4;11707:131;:::i;:::-;11699:139;;11426:419;;;:::o;11851:225::-;11991:34;11987:1;11979:6;11975:14;11968:58;12060:8;12055:2;12047:6;12043:15;12036:33;11851:225;:::o;12082:366::-;12224:3;12245:67;12309:2;12304:3;12245:67;:::i;:::-;12238:74;;12321:93;12410:3;12321:93;:::i;:::-;12439:2;12434:3;12430:12;12423:19;;12082:366;;;:::o;12454:419::-;12620:4;12658:2;12647:9;12643:18;12635:26;;12707:9;12701:4;12697:20;12693:1;12682:9;12678:17;12671:47;12735:131;12861:4;12735:131;:::i;:::-;12727:139;;12454:419;;;:::o;12879:180::-;12927:77;12924:1;12917:88;13024:4;13021:1;13014:15;13048:4;13045:1;13038:15;13065:191;13105:4;13125:20;13143:1;13125:20;:::i;:::-;13120:25;;13159:20;13177:1;13159:20;:::i;:::-;13154:25;;13198:1;13195;13192:8;13189:34;;;13203:18;;:::i;:::-;13189:34;13248:1;13245;13241:9;13233:17;;13065:191;;;;:::o;13262:305::-;13302:3;13321:20;13339:1;13321:20;:::i;:::-;13316:25;;13355:20;13373:1;13355:20;:::i;:::-;13350:25;;13509:1;13441:66;13437:74;13434:1;13431:81;13428:107;;;13515:18;;:::i;:::-;13428:107;13559:1;13556;13552:9;13545:16;;13262:305;;;;:::o",
  "source": "// SPDX-License-Identifier: MITs\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title Staking Contract\n/// @author ethSplit\n/// @notice An implementation of a Staking Contract, to stake a Token\n/// @dev stake token into contract and get added to mapping that checks stakes\ncontract StakingContract is Ownable, ReentrancyGuard {\n\n  using SafeMath for uint;\n\n  /// @notice Emitted when Token address is set\n  /// @param from address that transacted this transaction\n  /// @param tokenAddress ERC20 token address\n  event TokenAddressSet (address from, address tokenAddress);\n\n  /// @notice Emitted when someone stakes to this contract\n  /// @param sender address called this function\n  /// @param stakedAmount amount that has been staked\n  event Staked (address sender, uint stakedAmount);\n\n  /// @notice Emitted when someone unstakes from this contract\n  /// @param sender address that called this function\n  /// @param withdrawalAmount amount that has been unstaked\n  event Unstaked (address sender, uint withdrawalAmount);\n\n  /// todo make use of this state variable for stakeholder Array\n  uint public stakeholderCount = 0;\n\n\n  /// @notice Stores token address that is used for staking\n  /// @dev ERC20 token address\n  IERC20 public stakingToken;\n\n  /// @notice Stores the stake for each address\n  /// @dev mapping that stores balance that is being staked by each address\n  mapping (address => uint256) internal stakes;\n\n  /// todo add reward functionality\n  mapping(address => uint256) internal rewards;\n\n  /// todo add stakeholders for reward functionality\n  address[] stakeholders;\n\n  //todo: add timelock to make withdraw unable for this time\n  uint256 public defaultLockInDuration;\n  \n  /// @notice checks if the token address is set\n  /// @dev functions implementing this modifier can only run if token address is set\n  modifier isTokenSet() {\n        require(stakingToken != IERC20(address(0)), \"No token address set\");\n        _;\n  }\n\n  //check if withdraw function is withdrawable\n  /**modifier isLocked () {\n\n  }*/\n  \n  /// @notice sets token address\n  /// @dev sets ERC20 token address\n  /// @param _tokenAddress ERC20 token address\n  function setStakingToken(address _tokenAddress) public onlyOwner() {\n    stakingToken = IERC20(_tokenAddress);\n    emit TokenAddressSet(msg.sender, _tokenAddress);\n  }\n\n  /// @notice user stakes amount of tokens\n  /// @dev check that user approved token amount\n  /// @param _amount to stake\n  function stake(uint256 _amount) public isTokenSet() nonReentrant payable {\n    require(stakingToken.balanceOf(msg.sender) >= _amount, \"Not enough funds\");\n    require(stakingToken.allowance(msg.sender, address(this)) >= _amount, \"Not approved\");\n    require(stakingToken.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\");\n    stakes[msg.sender] = stakes[msg.sender].add(_amount);\n    // todo stakeholderCount++;\n    emit Staked(msg.sender, _amount);\n  }\n\n  /// @notice unstakes token amount\n  /// @dev check that amount is valid\n  /// @param _amount to unstake\n  function unstake(uint256 _amount) public isTokenSet() nonReentrant {\n    require(stakes[msg.sender] >= _amount && stakes[msg.sender] > 0);\n    stakes[msg.sender] = stakes[msg.sender].sub(_amount);\n    stakingToken.transfer(msg.sender, _amount);\n    emit Unstaked(msg.sender, _amount);\n  }\n\n  /// @notice return the token address\n  /// @dev get the ERC20 address to interact with the specific token\n  /// @return return ERC20 address\n  function getStakingToken () public view returns (IERC20) {\n    return stakingToken;\n  }\n\n  /// @notice get the staked amount for a specific address\n  /// @dev call the mapping stake to get amount of tokens staked by specific address\n  /// @param _address address that staked\n  /// @return uint amount of tokens staked\n  function getStakeOf(address _address) public view returns (uint256) {\n    return stakes[_address];\n  }\n\n  /// @notice return the staked amount of the caller\n  /// @dev return the staked amount of msg.sender\n  /// @return uint256 amount of tokens staked\n  function getStake () public view returns (uint256) {\n    return stakes[msg.sender];\n  }\n\n  /// todo implement reward functionality\n  function claimReward() public {\n    //\n  }\n\n}",
  "sourcePath": "/mnt/c/Users/abesl/Coding/blockchain-developer-bootcamp-final-project/contracts/StakingContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/StakingContract.sol",
    "exportedSymbols": {
      "Context": [
        815
      ],
      "IERC20": [
        768
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeMath": [
        1127
      ],
      "StakingContract": [
        1667
      ]
    },
    "id": 1668,
    "license": "MITs",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1407,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1408,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 769,
        "src": "58:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1409,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 1128,
        "src": "115:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1410,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 105,
        "src": "173:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1411,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 145,
        "src": "226:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1413,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "516:7:9"
            },
            "id": 1414,
            "nodeType": "InheritanceSpecifier",
            "src": "516:7:9"
          },
          {
            "baseName": {
              "id": 1415,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "525:15:9"
            },
            "id": 1416,
            "nodeType": "InheritanceSpecifier",
            "src": "525:15:9"
          }
        ],
        "canonicalName": "StakingContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1412,
          "nodeType": "StructuredDocumentation",
          "src": "290:198:9",
          "text": "@title Staking Contract\n @author ethSplit\n @notice An implementation of a Staking Contract, to stake a Token\n @dev stake token into contract and get added to mapping that checks stakes"
        },
        "fullyImplemented": true,
        "id": 1667,
        "linearizedBaseContracts": [
          1667,
          144,
          104,
          815
        ],
        "name": "StakingContract",
        "nameLocation": "497:15:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1419,
            "libraryName": {
              "id": 1417,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1127,
              "src": "552:8:9"
            },
            "nodeType": "UsingForDirective",
            "src": "546:24:9",
            "typeName": {
              "id": 1418,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "565:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1420,
              "nodeType": "StructuredDocumentation",
              "src": "574:150:9",
              "text": "@notice Emitted when Token address is set\n @param from address that transacted this transaction\n @param tokenAddress ERC20 token address"
            },
            "id": 1426,
            "name": "TokenAddressSet",
            "nameLocation": "733:15:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "758:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "750:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "772:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "764:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:36:9"
            },
            "src": "727:59:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1427,
              "nodeType": "StructuredDocumentation",
              "src": "790:159:9",
              "text": "@notice Emitted when someone stakes to this contract\n @param sender address called this function\n @param stakedAmount amount that has been staked"
            },
            "id": 1433,
            "name": "Staked",
            "nameLocation": "958:6:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "974:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "966:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "987:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "982:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:35:9"
            },
            "src": "952:49:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1434,
              "nodeType": "StructuredDocumentation",
              "src": "1005:174:9",
              "text": "@notice Emitted when someone unstakes from this contract\n @param sender address that called this function\n @param withdrawalAmount amount that has been unstaked"
            },
            "id": 1440,
            "name": "Unstaked",
            "nameLocation": "1188:8:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1206:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "1198:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalAmount",
                  "nameLocation": "1219:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "1214:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:39:9"
            },
            "src": "1182:55:9"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1441,
              "nodeType": "StructuredDocumentation",
              "src": "1241:62:9",
              "text": "todo make use of this state variable for stakeholder Array"
            },
            "functionSelector": "d8319ef3",
            "id": 1444,
            "mutability": "mutable",
            "name": "stakeholderCount",
            "nameLocation": "1318:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1306:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1442,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1306:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1337:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1445,
              "nodeType": "StructuredDocumentation",
              "src": "1344:88:9",
              "text": "@notice Stores token address that is used for staking\n @dev ERC20 token address"
            },
            "functionSelector": "72f702f3",
            "id": 1448,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "1449:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1435:26:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$768",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1447,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1446,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 768,
                "src": "1435:6:9"
              },
              "referencedDeclaration": 768,
              "src": "1435:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$768",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "1466:121:9",
              "text": "@notice Stores the stake for each address\n @dev mapping that stores balance that is being staked by each address"
            },
            "id": 1453,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "1628:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1590:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1452,
              "keyType": {
                "id": 1450,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1599:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1590:28:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1451,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1610:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1454,
              "nodeType": "StructuredDocumentation",
              "src": "1639:33:9",
              "text": "todo add reward functionality"
            },
            "id": 1458,
            "mutability": "mutable",
            "name": "rewards",
            "nameLocation": "1712:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1675:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1457,
              "keyType": {
                "id": 1455,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1683:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1675:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1456,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1694:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1459,
              "nodeType": "StructuredDocumentation",
              "src": "1724:50:9",
              "text": "todo add stakeholders for reward functionality"
            },
            "id": 1462,
            "mutability": "mutable",
            "name": "stakeholders",
            "nameLocation": "1787:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1777:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1460,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1777:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1461,
              "nodeType": "ArrayTypeName",
              "src": "1777:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e8297da2",
            "id": 1464,
            "mutability": "mutable",
            "name": "defaultLockInDuration",
            "nameLocation": "1880:21:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1865:36:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1463,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1865:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1480,
              "nodeType": "Block",
              "src": "2064:93:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1468,
                          "name": "stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "2082:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2113:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2105:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2105:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2105:10:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1469,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2098:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2098:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2082:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2118:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        },
                        "value": "No token address set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        }
                      ],
                      "id": 1467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2074:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:67:9"
                },
                {
                  "id": 1479,
                  "nodeType": "PlaceholderStatement",
                  "src": "2151:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1465,
              "nodeType": "StructuredDocumentation",
              "src": "1908:131:9",
              "text": "@notice checks if the token address is set\n @dev functions implementing this modifier can only run if token address is set"
            },
            "id": 1481,
            "name": "isTokenSet",
            "nameLocation": "2051:10:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:2:9"
            },
            "src": "2042:115:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1501,
              "nodeType": "Block",
              "src": "2429:100:9",
              "statements": [
                {
                  "expression": {
                    "id": 1493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1489,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "2435:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1491,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1484,
                          "src": "2457:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1490,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2450:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2450:21:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2435:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1494,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:36:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1496,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2498:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2498:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1498,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2510:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1495,
                      "name": "TokenAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "2482:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2482:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "EmitStatement",
                  "src": "2477:47:9"
                }
              ]
            },
            "documentation": {
              "id": 1482,
              "nodeType": "StructuredDocumentation",
              "src": "2246:113:9",
              "text": "@notice sets token address\n @dev sets ERC20 token address\n @param _tokenAddress ERC20 token address"
            },
            "functionSelector": "1e9b12ef",
            "id": 1502,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1486,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2417:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2417:11:9"
              }
            ],
            "name": "setStakingToken",
            "nameLocation": "2371:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2395:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "2387:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:23:9"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2429:0:9"
            },
            "scope": 1667,
            "src": "2362:167:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1571,
              "nodeType": "Block",
              "src": "2728:405:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1515,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2765:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2765:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1513,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "2742:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$768",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "2742:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2742:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1518,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "2780:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2742:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 1512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2734:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:74:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:74:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1526,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2845:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1530,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2865:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingContract_$1667",
                                    "typeString": "contract StakingContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingContract_$1667",
                                    "typeString": "contract StakingContract"
                                  }
                                ],
                                "id": 1529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2857:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1528,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2857:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2857:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1524,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "2822:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$768",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 727,
                            "src": "2822:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2822:49:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1533,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "2875:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2822:60:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617070726f766564",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2884:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                          "typeString": "literal_string \"Not approved\""
                        },
                        "value": "Not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                          "typeString": "literal_string \"Not approved\""
                        }
                      ],
                      "id": 1523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2814:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:85:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:85:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1541,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2939:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2939:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1545,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2959:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingContract_$1667",
                                  "typeString": "contract StakingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingContract_$1667",
                                  "typeString": "contract StakingContract"
                                }
                              ],
                              "id": 1544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2951:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1543,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2951:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2951:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1547,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "2966:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1539,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1448,
                            "src": "2913:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$768",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 749,
                          "src": "2913:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2913:61:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2976:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2905:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:95:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:95:9"
                },
                {
                  "expression": {
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1552,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "3006:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1555,
                      "indexExpression": {
                        "expression": {
                          "id": 1553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3013:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3013:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3006:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1561,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "3050:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1556,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "3027:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1559,
                          "indexExpression": {
                            "expression": {
                              "id": 1557,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3034:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3034:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3027:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 991,
                        "src": "3027:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3027:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3006:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:52:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1566,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3108:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3108:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1568,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "3120:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1565,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1433,
                      "src": "3101:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1570,
                  "nodeType": "EmitStatement",
                  "src": "3096:32:9"
                }
              ]
            },
            "documentation": {
              "id": 1503,
              "nodeType": "StructuredDocumentation",
              "src": "2533:119:9",
              "text": "@notice user stakes amount of tokens\n @dev check that user approved token amount\n @param _amount to stake"
            },
            "functionSelector": "a694fc3a",
            "id": 1572,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1507,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1481,
                  "src": "2694:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2694:12:9"
              },
              {
                "id": 1510,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1509,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "2707:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2707:12:9"
              }
            ],
            "name": "stake",
            "nameLocation": "2664:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2678:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1572,
                  "src": "2670:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2670:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2669:17:9"
            },
            "returnParameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:9"
            },
            "scope": 1667,
            "src": "2655:478:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1625,
              "nodeType": "Block",
              "src": "3310:221:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1583,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "3324:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1586,
                            "indexExpression": {
                              "expression": {
                                "id": 1584,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3331:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3331:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3324:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1587,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "3346:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3324:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1589,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "3357:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1592,
                            "indexExpression": {
                              "expression": {
                                "id": 1590,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3364:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3364:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3357:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3378:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3357:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3324:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3316:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1597,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:64:9"
                },
                {
                  "expression": {
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1598,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "3386:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1601,
                      "indexExpression": {
                        "expression": {
                          "id": 1599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3393:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3393:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3386:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1607,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "3430:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1602,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "3407:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1605,
                          "indexExpression": {
                            "expression": {
                              "id": 1603,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3414:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3414:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3407:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1006,
                        "src": "3407:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3407:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3386:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "3386:52:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3466:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3466:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1616,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "3478:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1611,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "3444:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "3444:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3444:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "3444:42:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1620,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3506:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3506:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1622,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "3518:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1619,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "3497:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1624,
                  "nodeType": "EmitStatement",
                  "src": "3492:34:9"
                }
              ]
            },
            "documentation": {
              "id": 1573,
              "nodeType": "StructuredDocumentation",
              "src": "3137:103:9",
              "text": "@notice unstakes token amount\n @dev check that amount is valid\n @param _amount to unstake"
            },
            "functionSelector": "2e17de78",
            "id": 1626,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1577,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1481,
                  "src": "3284:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3284:12:9"
              },
              {
                "id": 1580,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1579,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "3297:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3297:12:9"
              }
            ],
            "name": "unstake",
            "nameLocation": "3252:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3268:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "3260:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:17:9"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3310:0:9"
            },
            "scope": 1667,
            "src": "3243:288:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1635,
              "nodeType": "Block",
              "src": "3735:30:9",
              "statements": [
                {
                  "expression": {
                    "id": 1633,
                    "name": "stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1448,
                    "src": "3748:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 1632,
                  "id": 1634,
                  "nodeType": "Return",
                  "src": "3741:19:9"
                }
              ]
            },
            "documentation": {
              "id": 1627,
              "nodeType": "StructuredDocumentation",
              "src": "3535:140:9",
              "text": "@notice return the token address\n @dev get the ERC20 address to interact with the specific token\n @return return ERC20 address"
            },
            "functionSelector": "9f9106d1",
            "id": 1636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingToken",
            "nameLocation": "3687:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3703:2:9"
            },
            "returnParameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "3727:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$768",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1629,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 768,
                      "src": "3727:6:9"
                    },
                    "referencedDeclaration": 768,
                    "src": "3727:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:8:9"
            },
            "scope": 1667,
            "src": "3678:87:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1648,
              "nodeType": "Block",
              "src": "4066:34:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1644,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "4079:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1646,
                    "indexExpression": {
                      "id": 1645,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "4086:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4079:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1643,
                  "id": 1647,
                  "nodeType": "Return",
                  "src": "4072:23:9"
                }
              ]
            },
            "documentation": {
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "3769:226:9",
              "text": "@notice get the staked amount for a specific address\n @dev call the mapping stake to get amount of tokens staked by specific address\n @param _address address that staked\n @return uint amount of tokens staked"
            },
            "functionSelector": "6a86550f",
            "id": 1649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeOf",
            "nameLocation": "4007:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4026:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "4018:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4018:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4017:18:9"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "4057:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4056:9:9"
            },
            "scope": 1667,
            "src": "3998:102:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1660,
              "nodeType": "Block",
              "src": "4304:36:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1655,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "4317:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1658,
                    "indexExpression": {
                      "expression": {
                        "id": 1656,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4324:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4324:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4317:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1654,
                  "id": 1659,
                  "nodeType": "Return",
                  "src": "4310:25:9"
                }
              ]
            },
            "documentation": {
              "id": 1650,
              "nodeType": "StructuredDocumentation",
              "src": "4104:146:9",
              "text": "@notice return the staked amount of the caller\n @dev return the staked amount of msg.sender\n @return uint256 amount of tokens staked"
            },
            "functionSelector": "fc0e3d90",
            "id": 1661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "4262:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4271:2:9"
            },
            "returnParameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "4295:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4294:9:9"
            },
            "scope": 1667,
            "src": "4253:87:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1665,
              "nodeType": "Block",
              "src": "4416:12:9",
              "statements": []
            },
            "documentation": {
              "id": 1662,
              "nodeType": "StructuredDocumentation",
              "src": "4344:39:9",
              "text": "todo implement reward functionality"
            },
            "functionSelector": "b88a802f",
            "id": 1666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "4395:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4406:2:9"
            },
            "returnParameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4416:0:9"
            },
            "scope": 1667,
            "src": "4386:42:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1668,
        "src": "488:3943:9",
        "usedErrors": []
      }
    ],
    "src": "33:4398:9"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/StakingContract.sol",
    "exportedSymbols": {
      "Context": [
        815
      ],
      "IERC20": [
        768
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "SafeMath": [
        1127
      ],
      "StakingContract": [
        1667
      ]
    },
    "id": 1668,
    "license": "MITs",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1407,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1408,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 769,
        "src": "58:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1409,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 1128,
        "src": "115:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1410,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 105,
        "src": "173:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1411,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1668,
        "sourceUnit": 145,
        "src": "226:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1413,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "516:7:9"
            },
            "id": 1414,
            "nodeType": "InheritanceSpecifier",
            "src": "516:7:9"
          },
          {
            "baseName": {
              "id": 1415,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "525:15:9"
            },
            "id": 1416,
            "nodeType": "InheritanceSpecifier",
            "src": "525:15:9"
          }
        ],
        "canonicalName": "StakingContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1412,
          "nodeType": "StructuredDocumentation",
          "src": "290:198:9",
          "text": "@title Staking Contract\n @author ethSplit\n @notice An implementation of a Staking Contract, to stake a Token\n @dev stake token into contract and get added to mapping that checks stakes"
        },
        "fullyImplemented": true,
        "id": 1667,
        "linearizedBaseContracts": [
          1667,
          144,
          104,
          815
        ],
        "name": "StakingContract",
        "nameLocation": "497:15:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1419,
            "libraryName": {
              "id": 1417,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1127,
              "src": "552:8:9"
            },
            "nodeType": "UsingForDirective",
            "src": "546:24:9",
            "typeName": {
              "id": 1418,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "565:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1420,
              "nodeType": "StructuredDocumentation",
              "src": "574:150:9",
              "text": "@notice Emitted when Token address is set\n @param from address that transacted this transaction\n @param tokenAddress ERC20 token address"
            },
            "id": 1426,
            "name": "TokenAddressSet",
            "nameLocation": "733:15:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "758:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "750:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "772:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "764:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:36:9"
            },
            "src": "727:59:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1427,
              "nodeType": "StructuredDocumentation",
              "src": "790:159:9",
              "text": "@notice Emitted when someone stakes to this contract\n @param sender address called this function\n @param stakedAmount amount that has been staked"
            },
            "id": 1433,
            "name": "Staked",
            "nameLocation": "958:6:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "974:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "966:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "987:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "982:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:35:9"
            },
            "src": "952:49:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1434,
              "nodeType": "StructuredDocumentation",
              "src": "1005:174:9",
              "text": "@notice Emitted when someone unstakes from this contract\n @param sender address that called this function\n @param withdrawalAmount amount that has been unstaked"
            },
            "id": 1440,
            "name": "Unstaked",
            "nameLocation": "1188:8:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1206:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "1198:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalAmount",
                  "nameLocation": "1219:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "1214:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:39:9"
            },
            "src": "1182:55:9"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1441,
              "nodeType": "StructuredDocumentation",
              "src": "1241:62:9",
              "text": "todo make use of this state variable for stakeholder Array"
            },
            "functionSelector": "d8319ef3",
            "id": 1444,
            "mutability": "mutable",
            "name": "stakeholderCount",
            "nameLocation": "1318:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1306:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1442,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1306:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1337:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1445,
              "nodeType": "StructuredDocumentation",
              "src": "1344:88:9",
              "text": "@notice Stores token address that is used for staking\n @dev ERC20 token address"
            },
            "functionSelector": "72f702f3",
            "id": 1448,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "1449:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1435:26:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$768",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1447,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1446,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 768,
                "src": "1435:6:9"
              },
              "referencedDeclaration": 768,
              "src": "1435:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$768",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "1466:121:9",
              "text": "@notice Stores the stake for each address\n @dev mapping that stores balance that is being staked by each address"
            },
            "id": 1453,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "1628:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1590:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1452,
              "keyType": {
                "id": 1450,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1599:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1590:28:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1451,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1610:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1454,
              "nodeType": "StructuredDocumentation",
              "src": "1639:33:9",
              "text": "todo add reward functionality"
            },
            "id": 1458,
            "mutability": "mutable",
            "name": "rewards",
            "nameLocation": "1712:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1675:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1457,
              "keyType": {
                "id": 1455,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1683:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1675:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1456,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1694:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1459,
              "nodeType": "StructuredDocumentation",
              "src": "1724:50:9",
              "text": "todo add stakeholders for reward functionality"
            },
            "id": 1462,
            "mutability": "mutable",
            "name": "stakeholders",
            "nameLocation": "1787:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1777:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1460,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1777:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1461,
              "nodeType": "ArrayTypeName",
              "src": "1777:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e8297da2",
            "id": 1464,
            "mutability": "mutable",
            "name": "defaultLockInDuration",
            "nameLocation": "1880:21:9",
            "nodeType": "VariableDeclaration",
            "scope": 1667,
            "src": "1865:36:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1463,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1865:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1480,
              "nodeType": "Block",
              "src": "2064:93:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1468,
                          "name": "stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "2082:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2113:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2105:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2105:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2105:10:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1469,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2098:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2098:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$768",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2082:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320736574",
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2118:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        },
                        "value": "No token address set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eacb66ae5044d4335788580a17143238824349fb75374dcdda1d07dac115f943",
                          "typeString": "literal_string \"No token address set\""
                        }
                      ],
                      "id": 1467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2074:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:67:9"
                },
                {
                  "id": 1479,
                  "nodeType": "PlaceholderStatement",
                  "src": "2151:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1465,
              "nodeType": "StructuredDocumentation",
              "src": "1908:131:9",
              "text": "@notice checks if the token address is set\n @dev functions implementing this modifier can only run if token address is set"
            },
            "id": 1481,
            "name": "isTokenSet",
            "nameLocation": "2051:10:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:2:9"
            },
            "src": "2042:115:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1501,
              "nodeType": "Block",
              "src": "2429:100:9",
              "statements": [
                {
                  "expression": {
                    "id": 1493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1489,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "2435:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1491,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1484,
                          "src": "2457:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1490,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2450:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$768_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2450:21:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$768",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2435:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1494,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:36:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1496,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2498:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2498:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1498,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "2510:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1495,
                      "name": "TokenAddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "2482:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2482:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "EmitStatement",
                  "src": "2477:47:9"
                }
              ]
            },
            "documentation": {
              "id": 1482,
              "nodeType": "StructuredDocumentation",
              "src": "2246:113:9",
              "text": "@notice sets token address\n @dev sets ERC20 token address\n @param _tokenAddress ERC20 token address"
            },
            "functionSelector": "1e9b12ef",
            "id": 1502,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1486,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2417:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2417:11:9"
              }
            ],
            "name": "setStakingToken",
            "nameLocation": "2371:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2395:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "2387:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:23:9"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2429:0:9"
            },
            "scope": 1667,
            "src": "2362:167:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1571,
              "nodeType": "Block",
              "src": "2728:405:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1515,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2765:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2765:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1513,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "2742:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$768",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "2742:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2742:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1518,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "2780:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2742:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 1512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2734:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:74:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:74:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1526,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2845:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1530,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2865:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingContract_$1667",
                                    "typeString": "contract StakingContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingContract_$1667",
                                    "typeString": "contract StakingContract"
                                  }
                                ],
                                "id": 1529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2857:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1528,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2857:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2857:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1524,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "2822:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$768",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 727,
                            "src": "2822:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2822:49:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1533,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "2875:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2822:60:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617070726f766564",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2884:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                          "typeString": "literal_string \"Not approved\""
                        },
                        "value": "Not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                          "typeString": "literal_string \"Not approved\""
                        }
                      ],
                      "id": 1523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2814:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:85:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:85:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1541,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2939:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2939:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1545,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2959:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingContract_$1667",
                                  "typeString": "contract StakingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingContract_$1667",
                                  "typeString": "contract StakingContract"
                                }
                              ],
                              "id": 1544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2951:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1543,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2951:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2951:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1547,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "2966:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1539,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1448,
                            "src": "2913:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$768",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 749,
                          "src": "2913:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2913:61:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2976:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2905:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:95:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:95:9"
                },
                {
                  "expression": {
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1552,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "3006:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1555,
                      "indexExpression": {
                        "expression": {
                          "id": 1553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3013:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3013:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3006:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1561,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "3050:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1556,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "3027:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1559,
                          "indexExpression": {
                            "expression": {
                              "id": 1557,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3034:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3034:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3027:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 991,
                        "src": "3027:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3027:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3006:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:52:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1566,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3108:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3108:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1568,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "3120:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1565,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1433,
                      "src": "3101:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1570,
                  "nodeType": "EmitStatement",
                  "src": "3096:32:9"
                }
              ]
            },
            "documentation": {
              "id": 1503,
              "nodeType": "StructuredDocumentation",
              "src": "2533:119:9",
              "text": "@notice user stakes amount of tokens\n @dev check that user approved token amount\n @param _amount to stake"
            },
            "functionSelector": "a694fc3a",
            "id": 1572,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1507,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1481,
                  "src": "2694:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2694:12:9"
              },
              {
                "id": 1510,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1509,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "2707:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2707:12:9"
              }
            ],
            "name": "stake",
            "nameLocation": "2664:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2678:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1572,
                  "src": "2670:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2670:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2669:17:9"
            },
            "returnParameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:9"
            },
            "scope": 1667,
            "src": "2655:478:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1625,
              "nodeType": "Block",
              "src": "3310:221:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1583,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "3324:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1586,
                            "indexExpression": {
                              "expression": {
                                "id": 1584,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3331:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3331:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3324:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1587,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "3346:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3324:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1589,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "3357:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1592,
                            "indexExpression": {
                              "expression": {
                                "id": 1590,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3364:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3364:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3357:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3378:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3357:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3324:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3316:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1597,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:64:9"
                },
                {
                  "expression": {
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1598,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1453,
                        "src": "3386:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1601,
                      "indexExpression": {
                        "expression": {
                          "id": 1599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3393:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3393:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3386:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1607,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "3430:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1602,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "3407:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1605,
                          "indexExpression": {
                            "expression": {
                              "id": 1603,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3414:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3414:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3407:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1006,
                        "src": "3407:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3407:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3386:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "3386:52:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3466:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3466:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1616,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "3478:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1611,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "3444:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$768",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "3444:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3444:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "3444:42:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1620,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3506:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3506:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1622,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "3518:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1619,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "3497:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1624,
                  "nodeType": "EmitStatement",
                  "src": "3492:34:9"
                }
              ]
            },
            "documentation": {
              "id": 1573,
              "nodeType": "StructuredDocumentation",
              "src": "3137:103:9",
              "text": "@notice unstakes token amount\n @dev check that amount is valid\n @param _amount to unstake"
            },
            "functionSelector": "2e17de78",
            "id": 1626,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1577,
                  "name": "isTokenSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1481,
                  "src": "3284:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3284:12:9"
              },
              {
                "id": 1580,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1579,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "3297:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3297:12:9"
              }
            ],
            "name": "unstake",
            "nameLocation": "3252:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3268:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1626,
                  "src": "3260:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:17:9"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3310:0:9"
            },
            "scope": 1667,
            "src": "3243:288:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1635,
              "nodeType": "Block",
              "src": "3735:30:9",
              "statements": [
                {
                  "expression": {
                    "id": 1633,
                    "name": "stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1448,
                    "src": "3748:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 1632,
                  "id": 1634,
                  "nodeType": "Return",
                  "src": "3741:19:9"
                }
              ]
            },
            "documentation": {
              "id": 1627,
              "nodeType": "StructuredDocumentation",
              "src": "3535:140:9",
              "text": "@notice return the token address\n @dev get the ERC20 address to interact with the specific token\n @return return ERC20 address"
            },
            "functionSelector": "9f9106d1",
            "id": 1636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingToken",
            "nameLocation": "3687:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3703:2:9"
            },
            "returnParameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "3727:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$768",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1629,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 768,
                      "src": "3727:6:9"
                    },
                    "referencedDeclaration": 768,
                    "src": "3727:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$768",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:8:9"
            },
            "scope": 1667,
            "src": "3678:87:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1648,
              "nodeType": "Block",
              "src": "4066:34:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1644,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "4079:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1646,
                    "indexExpression": {
                      "id": 1645,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "4086:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4079:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1643,
                  "id": 1647,
                  "nodeType": "Return",
                  "src": "4072:23:9"
                }
              ]
            },
            "documentation": {
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "3769:226:9",
              "text": "@notice get the staked amount for a specific address\n @dev call the mapping stake to get amount of tokens staked by specific address\n @param _address address that staked\n @return uint amount of tokens staked"
            },
            "functionSelector": "6a86550f",
            "id": 1649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeOf",
            "nameLocation": "4007:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4026:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "4018:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4018:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4017:18:9"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "4057:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4056:9:9"
            },
            "scope": 1667,
            "src": "3998:102:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1660,
              "nodeType": "Block",
              "src": "4304:36:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1655,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "4317:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1658,
                    "indexExpression": {
                      "expression": {
                        "id": 1656,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4324:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4324:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4317:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1654,
                  "id": 1659,
                  "nodeType": "Return",
                  "src": "4310:25:9"
                }
              ]
            },
            "documentation": {
              "id": 1650,
              "nodeType": "StructuredDocumentation",
              "src": "4104:146:9",
              "text": "@notice return the staked amount of the caller\n @dev return the staked amount of msg.sender\n @return uint256 amount of tokens staked"
            },
            "functionSelector": "fc0e3d90",
            "id": 1661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "4262:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4271:2:9"
            },
            "returnParameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "4295:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4294:9:9"
            },
            "scope": 1667,
            "src": "4253:87:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1665,
              "nodeType": "Block",
              "src": "4416:12:9",
              "statements": []
            },
            "documentation": {
              "id": 1662,
              "nodeType": "StructuredDocumentation",
              "src": "4344:39:9",
              "text": "todo implement reward functionality"
            },
            "functionSelector": "b88a802f",
            "id": 1666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "4395:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4406:2:9"
            },
            "returnParameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4416:0:9"
            },
            "scope": 1667,
            "src": "4386:42:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1668,
        "src": "488:3943:9",
        "usedErrors": []
      }
    ],
    "src": "33:4398:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "Staked",
          "type": "event"
        },
        "0x24b80abab34e4313f6fa818b4b740b32c9c113adccd46db535dbc92567953cdf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "TokenAddressSet",
          "type": "event"
        },
        "0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawalAmount",
              "type": "uint256"
            }
          ],
          "name": "Unstaked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6D25277005bb124e18142513fA8Fcd14a173f198",
      "transactionHash": "0x56bce5a29dcba221d9e38bb1766a2ab53cf18b1aa113025fea6fc457776b877b"
    },
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "Staked",
          "type": "event"
        },
        "0x24b80abab34e4313f6fa818b4b740b32c9c113adccd46db535dbc92567953cdf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "TokenAddressSet",
          "type": "event"
        },
        "0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawalAmount",
              "type": "uint256"
            }
          ],
          "name": "Unstaked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x37734068cD74430f80cb5E107fcDa0498f0B2FA1",
      "transactionHash": "0xee0a973daca1986b8984eb438c390bd8d7d54387912602511ed3a7a82a066eaf"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-01T02:32:29.301Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "ethSplit",
    "details": "stake token into contract and get added to mapping that checks stakes",
    "events": {
      "Staked(address,uint256)": {
        "params": {
          "sender": "address called this function",
          "stakedAmount": "amount that has been staked"
        }
      },
      "TokenAddressSet(address,address)": {
        "params": {
          "from": "address that transacted this transaction",
          "tokenAddress": "ERC20 token address"
        }
      },
      "Unstaked(address,uint256)": {
        "params": {
          "sender": "address that called this function",
          "withdrawalAmount": "amount that has been unstaked"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "getStake()": {
        "details": "return the staked amount of msg.sender",
        "returns": {
          "_0": "uint256 amount of tokens staked"
        }
      },
      "getStakeOf(address)": {
        "details": "call the mapping stake to get amount of tokens staked by specific address",
        "params": {
          "_address": "address that staked"
        },
        "returns": {
          "_0": "uint amount of tokens staked"
        }
      },
      "getStakingToken()": {
        "details": "get the ERC20 address to interact with the specific token",
        "returns": {
          "_0": "return ERC20 address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setStakingToken(address)": {
        "details": "sets ERC20 token address",
        "params": {
          "_tokenAddress": "ERC20 token address"
        }
      },
      "stake(uint256)": {
        "details": "check that user approved token amount",
        "params": {
          "_amount": "to stake"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstake(uint256)": {
        "details": "check that amount is valid",
        "params": {
          "_amount": "to unstake"
        }
      }
    },
    "stateVariables": {
      "stakes": {
        "details": "mapping that stores balance that is being staked by each address"
      },
      "stakingToken": {
        "details": "ERC20 token address"
      }
    },
    "title": "Staking Contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Staked(address,uint256)": {
        "notice": "Emitted when someone stakes to this contract"
      },
      "TokenAddressSet(address,address)": {
        "notice": "Emitted when Token address is set"
      },
      "Unstaked(address,uint256)": {
        "notice": "Emitted when someone unstakes from this contract"
      }
    },
    "kind": "user",
    "methods": {
      "claimReward()": {
        "notice": "todo implement reward functionality"
      },
      "getStake()": {
        "notice": "return the staked amount of the caller"
      },
      "getStakeOf(address)": {
        "notice": "get the staked amount for a specific address"
      },
      "getStakingToken()": {
        "notice": "return the token address"
      },
      "setStakingToken(address)": {
        "notice": "sets token address"
      },
      "stake(uint256)": {
        "notice": "user stakes amount of tokens"
      },
      "stakeholderCount()": {
        "notice": "todo make use of this state variable for stakeholder Array"
      },
      "stakingToken()": {
        "notice": "Stores token address that is used for staking"
      },
      "unstake(uint256)": {
        "notice": "unstakes token amount"
      }
    },
    "notice": "An implementation of a Staking Contract, to stake a Token",
    "version": 1
  }
}